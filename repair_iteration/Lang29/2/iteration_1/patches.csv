bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY  +  1;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY  +  1;	  return(int[])ArrayUtils.EMPTY_INT_ARRAY;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	if(version  ==  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }	  return(int[])ArrayUtils.EMPTY_INT_ARRAY;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
3	[BUG]  [BUGGY]  if(version  ==  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	if(version  ==  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }	  return(int[])ArrayUtils.EMPTY_INT_ARRAY;    	compilable	  [FE]  AssertionFailedError  	14	1	replace
4	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_ARRAY;  [CE]  cannot  find  symbol  EMPTY_ARRAY  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_ARRAY;	  return(int[])ArrayUtils.EMPTY_INT_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_ARRAY	14	None	replace
5	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "Missing  version: "  +  version);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  aughtExceptionHandler.throwAssertionError( "Missing  version: "  +  version);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	aughtExceptionHandler.throwAssertionError( "Missing  version: "  +  version);	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	replace
7	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.version ",  version);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.version ",  version);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	aughtExceptionHandler.throwAssertionError( "msg.bad.version ",  version);	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(version,  0,  ints,  1,  limit);  [CE]  cannot  find  symbol  ints  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  System.arraycopy(version,  0,  ints,  1,  limit);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	System.arraycopy(version,  0,  ints,  1,  limit);	      System.arraycopy(version,    0,    ints,    0,    limit);    	non-compiled	[CE]  cannot  find  symbol  ints	16	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(version,  0,  bytes,  0,  limit);  [CE]  cannot  find  symbol  bytes  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  System.arraycopy(version,  0,  bytes,  0,  limit);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	System.arraycopy(version,  0,  bytes,  0,  limit);	      System.arraycopy(version,    0,    ints,    0,    limit);    	non-compiled	[CE]  cannot  find  symbol  bytes	16	None	replace
10	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ],  limit);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ],  limit);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ],  limit);	  return    ArrayUtils.EMPTY_INT_ARRAY    [version.length()    ];    	non-compiled	[CE]  ';'  expected	19	None	replace
11	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  +  1];  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  +  1];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  +  1];	  return    ArrayUtils.EMPTY_INT_ARRAY    [version.length()    ];    	non-compiled	[CE]  incompatible  types	19	None	replace
12	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ],  limit;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ],  limit;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  ],  limit;	  return    ArrayUtils.EMPTY_INT_ARRAY    [version.length()    ];    	non-compiled	[CE]  ';'  expected	19	None	replace
13	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  unreachable  statement	1	None	add
14	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  int  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  int  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    int  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  not  a  statement	1	None	add
15	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  if(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  if(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    if(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
16	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  (version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  (version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    (version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  not  a  statement	1	None	add
17	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  if(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  if(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    if(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
18	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  limit)];  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	int[]  ints  =  new  int[Math.min(limit,  limit)];	      int[]    ints    =    new    int[Math.min(limit,    version.length)];    	compilable	  [FE]  NullPointerException  	17	2	replace
19	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  limit)];  [FE]  NullPointerException  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  limit)];  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  limit)];	      int[]    ints    =    new    int[Math.min(limit,    version.length)];    	compilable	  [FE]  NullPointerException  	17	2	replace
20	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  length)];  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  length)];  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  length)];	      int[]    ints    =    new    int[Math.min(limit,    version.length)];    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
21	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  String.valueOf(version.length))];  [CE]  cannot  find  symbol  length  [FE]              AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  String.valueOf(version.length))];  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  String.valueOf(version.length))];	      int[]    ints    =    new    int[Math.min(limit,    version.length)];    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
22	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY  +  1;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY  +  1;	  return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	2	None	replace
23	[BUG]  [BUGGY]  return(version  ==  null)?  0  :  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  0  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version  ==  null)?  0  :  ArrayUtils.EMPTY_INT_ARRAY;	  return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    	non-compiled	[CE]  incompatible  types	2	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
25	[BUG]  [BUGGY]  return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
26	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0],  limit);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0],  limit);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [0],  limit);	  return    ArrayUtils.EMPTY_INT_ARRAY    [0];    	non-compiled	[CE]  ';'  expected	18	None	replace
27	[BUG]  [BUGGY]  return  VersionUtils.EMPTY_INT_ARRAY  [0];  [CE]  cannot  find  symbol  VersionUtils  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  VersionUtils.EMPTY_INT_ARRAY  [0];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  VersionUtils.EMPTY_INT_ARRAY  [0];	  return    ArrayUtils.EMPTY_INT_ARRAY    [0];    	non-compiled	[CE]  cannot  find  symbol  VersionUtils	18	None	replace
28	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0]  &  0xff;  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0]  &  0xff;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [0]  &  0xff;	  return    ArrayUtils.EMPTY_INT_ARRAY    [0];    	non-compiled	[CE]  incompatible  types	18	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
30	[BUG]  [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version!=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    if(version!=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
32	[BUG]  [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version!=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version!=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    if(version!=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
33	[BUG]  [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  If(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  If(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    If(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	  	non-compiled	[CE]  ';'  expected	3	None	add
34	[BUG]  [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version  >=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  if(version  >=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    if(version  >=  null)  {  return  ArrayUtils.EMPTY_INT_ARRAY;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
35	[BUG]  [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(limit);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]                AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(limit);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(limit);	      ArrayUtils.EMPTY_INT_ARRAY    =    new    ArrayUtils();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	12	None	replace
36	[BUG]  [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(version);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(version);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(version);	      ArrayUtils.EMPTY_INT_ARRAY    =    new    ArrayUtils();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	12	None	replace
37	[BUG]  [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(0);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(0);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(0);	      ArrayUtils.EMPTY_INT_ARRAY    =    new    ArrayUtils();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	12	None	replace
38	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,  0,  ints,  0,  limit);  [CE]  cannot  find  symbol  length  [FE]      NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,  0,  ints,  0,  limit);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,  0,  ints,  0,  limit);	      	non-compiled	[CE]  cannot  find  symbol  length	7	None	replace
40	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  i  =  0;  i  <  limit;  i++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  i  =  0;  i  <  limit;  i++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  i  =  0;  i  <  limit;  i++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  return  VersionUtils.EMPTY_INT_ARRAY  +  1;  [CE]  cannot  find  symbol  VersionUtils  [FE]            AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  VersionUtils.EMPTY_INT_ARRAY  +  1;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  VersionUtils.EMPTY_INT_ARRAY  +  1;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    1;    	non-compiled	[CE]  cannot  find  symbol  VersionUtils	5	None	replace
42	[BUG]  [BUGGY]  return  version  +  1;  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  version  +  1;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  version  +  1;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    1;    	non-compiled	[CE]  incompatible  types	5	None	replace
43	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  +  version;  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  +  version;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  +  version;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    1;    	non-compiled	[CE]  incompatible  types	5	None	replace
44	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY,  limit  +  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY,  limit  +  1;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY,  limit  +  1;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
45	[BUG]  [BUGGY]  return  VersionUtils.EMPTY_INT_ARRAY  +  limit;  [CE]  cannot  find  symbol  VersionUtils  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  VersionUtils.EMPTY_INT_ARRAY  +  limit;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  VersionUtils.EMPTY_INT_ARRAY  +  limit;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    limit;    	non-compiled	[CE]  cannot  find  symbol  VersionUtils	15	None	replace
46	[BUG]  [BUGGY]  return  version  +  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  version  +  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  version  +  ArrayUtils.EMPTY_INT_ARRAY;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    limit;    	non-compiled	[CE]  incompatible  types	15	None	replace
47	[BUG]  [BUGGY]  return  limit  +  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  limit  +  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  limit  +  ArrayUtils.EMPTY_INT_ARRAY;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    limit;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	15	None	replace
48	[BUG]  [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  ints[j]  =  Integer.parseInt(version);  }  [CE]  cannot  find  symbol  length  [FE]    NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  ints[j]  =  Integer.parseInt(version);  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	        int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  ints[j]  =  Integer.parseInt(version);  }	  	non-compiled	[CE]  cannot  find  symbol  length	6	None	add
49	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  int[])ArrayUtils.EMPTY_INT_ARRAY;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  int[])ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;    int[])ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  not  a  statement	13	None	add
50	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  Integer[]  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  Integer[]  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;    Integer[]  ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  ';'  expected	13	None	add
51	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  Integer[]  ArrayUtils.EMPTY_INT_ARRAY  =(int[])ArrayUtils.EMPTY_INT_ARRAY;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  Integer[]  ArrayUtils.EMPTY_INT_ARRAY  =(int[])ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;    Integer[]  ArrayUtils.EMPTY_INT_ARRAY  =(int[])ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  ';'  expected	13	None	add
52	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  (int[])ArrayUtils.EMPTY_INT_ARRAY;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  (int[])ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;    (int[])ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  not  a  statement	13	None	add
53	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  -  1];  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  -  1];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [version.length()  -  1];	  return    ArrayUtils.EMPTY_INT_ARRAY    [version.length()    ];    	non-compiled	[CE]  incompatible  types	19	None	replace
54	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length(),  limit];  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [version.length(),  limit];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [version.length(),  limit];	  return    ArrayUtils.EMPTY_INT_ARRAY    [version.length()    ];    	non-compiled	[CE]  ']'  expected	19	None	replace
55	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;    return(int[])ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  unreachable  statement	13	None	add
56	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  if(ArrayUtils.EMPTY_INT_ARRAY!=  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  if(ArrayUtils.EMPTY_INT_ARRAY!=  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;    if(ArrayUtils.EMPTY_INT_ARRAY!=  null)  {  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
57	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0]  -  1;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0]  -  1;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [0]  -  1;	  return    ArrayUtils.EMPTY_INT_ARRAY    [0];    	non-compiled	[CE]  incompatible  types	18	None	replace
58	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  [Delete]  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	[Delete]	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(version,  limit);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(version,  limit);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	aughtExceptionHandler.handleUnsupportedOperation(version,  limit);	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	replace
60	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	aughtExceptionHandler.handleMalformedException( " ");	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	replace
61	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_ARRAY  +  1;  [CE]  cannot  find  symbol  EMPTY_ARRAY  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_ARRAY  +  1;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_ARRAY  +  1;	  return(int[])ArrayUtils.EMPTY_INT_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  EMPTY_ARRAY	14	None	replace
62	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version)];  [CE]  no  suitable  method  found  for  min(int,String)  [FE]    NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version)];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  version)];	      	non-compiled	[CE]  no  suitable  method  found  for  min(int,String)	7	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  new  int[0];  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	add	if(version  ==  null)  {  return  new  int[0];  }	      	compilable	  [FE]  AssertionFailedError  	7	1	replace
64	[BUG]  [BUGGY]  if(version  ==  null)  {  return  new  int[0];  }  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  if(version  ==  null)  {  return  new  int[0];  }  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	if(version  ==  null)  {  return  new  int[0];  }	      	compilable	  [FE]  AssertionFailedError  	7	1	replace
65	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  Return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  Return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    Return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  not  a  statement	1	None	add
66	[BUG]  [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(version  ==  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(version    ==    null)?    ArrayUtils.EMPTY_INT_ARRAY    :    ArrayUtils.EMPTY_INT_ARRAY;    return(version!=  null)?  ArrayUtils.EMPTY_INT_ARRAY  :  ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  unreachable  statement	1	None	add
67	[BUG]  [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(length);  [CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY  [FE]                AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(length);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	ArrayUtils.EMPTY_INT_ARRAY  =  new  ArrayUtils(length);	      ArrayUtils.EMPTY_INT_ARRAY    =    new    ArrayUtils();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  EMPTY_INT_ARRAY	12	None	replace
68	[BUG]  [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version);  [CE]  ']'  expected  [FE]    NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	        int[]  ints  =  new  int[Math.min(limit,  version);	  	non-compiled	[CE]  ']'  expected	6	None	add
69	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY,  limit;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY,  limit;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY,  limit;	  return    ArrayUtils.EMPTY_INT_ARRAY    +    limit;    	non-compiled	[CE]  ';'  expected	15	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(version,  0,  ints,  0,  limit  -  1);  [CE]  cannot  find  symbol  ints  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  System.arraycopy(version,  0,  ints,  0,  limit  -  1);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	System.arraycopy(version,  0,  ints,  0,  limit  -  1);	      System.arraycopy(version,    0,    ints,    0,    limit);    	non-compiled	[CE]  cannot  find  symbol  ints	16	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(versions,  0,  ints,  0,  limit);  [CE]  cannot  find  symbol  versions  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  System.arraycopy(versions,  0,  ints,  0,  limit);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	System.arraycopy(versions,  0,  ints,  0,  limit);	      System.arraycopy(version,    0,    ints,    0,    limit);    	non-compiled	[CE]  cannot  find  symbol  versions	16	None	replace
72	[BUG]  [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	        int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  j  =  0;  j  <  limit;  j++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
73	[BUG]  [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  i  =  0;  i  <  limit;  i++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]      int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  i  =  0;  i  <  limit;  i++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	        int[]  ints  =  new  int[Math.min(limit,  version.length)];  for(int  i  =  0;  i  <  limit;  i++)  {  int[]  ints  =  new  int[Math.min(limit,  version.length)];  System.arraycopy(version,	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
74	[BUG]  [BUGGY]  System.arraycopy(version,  10,  ints,  0,  limit);  [CE]  cannot  find  symbol  ints  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  System.arraycopy(version,  10,  ints,  0,  limit);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	System.arraycopy(version,  10,  ints,  0,  limit);	      System.arraycopy(version,    0,    ints,    0,    limit);    	non-compiled	[CE]  cannot  find  symbol  ints	16	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(version,  1,  ints,  0,  limit);  [CE]  cannot  find  symbol  ints  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  System.arraycopy(version,  1,  ints,  0,  limit);  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	System.arraycopy(version,  1,  ints,  0,  limit);	      System.arraycopy(version,    0,    ints,    0,    limit);    	non-compiled	[CE]  cannot  find  symbol  ints	16	None	replace
76	[BUG]  [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length  -  1)];  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  int[]  ints  =  new  int[Math.min(limit,  version.length  -  1)];  [BUGGY]    return  ArrayUtils.EMPTY_INT_ARRAY;  }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	int[]  ints  =  new  int[Math.min(limit,  version.length  -  1)];	      int[]    ints    =    new    int[Math.min(limit,    version.length)];    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
77	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  if(int[])ArrayUtils.EMPTY_INT_ARRAY;  [CE]  '.class'  expected  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY;  if(int[])ArrayUtils.EMPTY_INT_ARRAY;  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY;    if(int[])ArrayUtils.EMPTY_INT_ARRAY;	  	non-compiled	[CE]  '.class'  expected	13	None	add
78	[BUG]  [BUGGY]  aughtExceptionHandler(ArrayUtils.EMPTY_INT_ARRAY,  version);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  aughtExceptionHandler(ArrayUtils.EMPTY_INT_ARRAY,  version);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	aughtExceptionHandler(ArrayUtils.EMPTY_INT_ARRAY,  version);	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
79	[BUG]  [BUGGY]  aughtExceptionHandler(ArrayUtils.EMPTY_INT_ARRAY,  limit);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  aughtExceptionHandler(ArrayUtils.EMPTY_INT_ARRAY,  limit);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	aughtExceptionHandler(ArrayUtils.EMPTY_INT_ARRAY,  limit);	  if(version    ==    null)    {    return    ArrayUtils.EMPTY_INT_ARRAY;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
80	[BUG]  [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0],  version);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return  ArrayUtils.EMPTY_INT_ARRAY  [0],  version);  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return  ArrayUtils.EMPTY_INT_ARRAY  [0],  version);	  return    ArrayUtils.EMPTY_INT_ARRAY    [0];    	non-compiled	[CE]  ';'  expected	18	None	replace
81	[BUG]  [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY  [0];  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]    private  static  int[]  toJavaVersionIntArray(String  version,  int  limit)  {  if  (version  ==  null)  {    [BUGGY]  return(int[])ArrayUtils.EMPTY_INT_ARRAY  [0];  [BUGGY]    }  String[]  strings  =  Pattern.compile(   "[^\\d]   ").split(version);  int[]  ints  =  new  int[Math.min(limit,  strings.length)];  int  j  =  0;  for  (int  i  =  0;  i  <  strings.length  &&  j  <  limit;  i++)  {  String  s  =  strings[i];  if  (s.length()  >  0)  {  ints[j++]  =  Integer.parseInt(s);  }  }  [CLASS]  SystemUtils  [METHOD]  toJavaVersionIntArray  [RETURN_TYPE]  int[]  String  version  int  limit  [VARIABLES]  int[]  ints  boolean  IS_JAVA_1_1  IS_JAVA_1_2  IS_JAVA_1_3  IS_JAVA_1_4  IS_JAVA_1_5  IS_JAVA_1_6  IS_JAVA_1_7  IS_OS_AIX  IS_OS_HP_UX  IS_OS_IRIX  IS_OS_LINUX  IS_OS_MAC  IS_OS_MAC_OSX  IS_OS_OS2  IS_OS_SOLARIS  IS_OS_SUN_OS  IS_OS_UNIX  IS_OS_WINDOWS  IS_OS_WINDOWS_2000  IS_OS_WINDOWS_7  IS_OS_WINDOWS_95  IS_OS_WINDOWS_98  IS_OS_WINDOWS_ME  IS_OS_WINDOWS_NT  IS_OS_WINDOWS_VISTA  IS_OS_WINDOWS_XP  String  AWT_TOOLKIT  FILE_ENCODING  FILE_SEPARATOR  JAVA_AWT_FONTS  JAVA_AWT_GRAPHICSENV  JAVA_AWT_HEADLESS  JAVA_AWT_PRINTERJOB  JAVA_CLASS_PATH  JAVA_CLASS_VERSION  JAVA_COMPILER  JAVA_ENDORSED_DIRS  JAVA_EXT_DIRS  JAVA_HOME  JAVA_HOME_KEY  JAVA_IO_TMPDIR  JAVA_IO_TMPDIR_KEY  JAVA_LIBRARY_PATH  JAVA_RUNTIME_NAME  JAVA_RUNTIME_VERSION  JAVA_SPECIFICATION_NAME  JAVA_SPECIFICATION_VENDOR  JAVA_SPECIFICATION_VERSION  JAVA_UTIL_PREFS_PREFERENCES_FACTORY  JAVA_VENDOR  JAVA_VENDOR_URL  JAVA_VERSION  JAVA_VERSION_TRIMMED  JAVA_VM_INFO  JAVA_VM_NAME  JAVA_VM_SPECIFICATION_NAME  JAVA_VM_SPECIFICATION_VENDOR  JAVA_VM_SPECIFICATION_VERSION  JAVA_VM_VENDOR  JAVA_VM_VERSION  LINE_SEPARATOR  OS_ARCH  OS_NAME  OS_NAME_WINDOWS_PREFIX  OS_VERSION  PATH_SEPARATOR  USER_COUNTRY  USER_DIR  USER_DIR_KEY  USER_HOME  USER_HOME_KEY  USER_LANGUAGE  USER_NAME  USER_TIMEZONE  osName  osNamePrefix  osVersion  osVersionPrefix  property  s  version  versionPrefix  String[]  strings  float  JAVA_VERSION_FLOAT  requiredVersion  int  JAVA_VERSION_INT  JAVA_VERSION_TRIM_SIZE  i  j  limit  requiredVersion  	projects/Lang29/src/main/java/org/apache/commons/lang3/SystemUtils.java	0.7071067811865475	1717	1717	1	replace	return(int[])ArrayUtils.EMPTY_INT_ARRAY  [0];	  return(int[])ArrayUtils.EMPTY_INT_ARRAY;    	non-compiled	[CE]  inconvertible  types	14	None	replace
