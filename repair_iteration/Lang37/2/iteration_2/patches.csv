bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2,  array1.length,  array2.length);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2,  array1.length,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2,  array1.length,  array2.length);	  return(T[])Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
2	[BUG]  [BUGGY]  if(array1  ==  null)  {  return(T[])Array.newInstance(array2,  array1.length,  array2.length);  }  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1  ==  null)  {  return(T[])Array.newInstance(array2,  array1.length,  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1  ==  null)  {  return(T[])Array.newInstance(array2,  array1.length,  array2.length);  }	  return(T[])Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
3	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2,  array1.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2,  array1.length);	  return(T[])Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
4	[BUG]  [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array2,    array1);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
5	[BUG]  [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array2,    array1);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
6	[BUG]  [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array2,    array1);    }    	non-compiled	[CE]  not  a  statement	38	None	replace
7	[BUG]  [BUGGY]  array1  ==  null)  {  return  clone(array2);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null)  {  return  clone(array2);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null)  {  return  clone(array2);  }	  array2    ==    null)    {    return    clone(array1);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
8	[BUG]  [BUGGY]  parent  ==  null)  {  return  clone(parent);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return  clone(parent);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return  clone(parent);  }	  parent    ==    null)    {    return    clone(array2);    }    	non-compiled	[CE]  not  a  statement	28	None	replace
9	[BUG]  [BUGGY]  array1  =  array2!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =  array2!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =  array2!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  array1    =    array2    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
10	[BUG]  [BUGGY]  array1  =  array2  ==  null)  {  return  clone(array1);  }  [CE]  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =  array2  ==  null)  {  return  clone(array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =  array2  ==  null)  {  return  clone(array1);  }	  array1    =    array2    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
11	[BUG]  [BUGGY]  parent  ==  null  ||  array2.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null  ||  array2.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null  ||  array2.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    array1    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	20	None	replace
12	[BUG]  [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array1,    array2);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
13	[BUG]  [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array1,    array2);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
14	[BUG]  [BUGGY]  }  else  if(array1  ==  null  ||  array2.length!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array1  ==  null  ||  array2.length!=  0)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1  ==  null  ||  array2.length!=  0)  {	  }    else    if(array2    ==    null    ||    array1.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
15	[BUG]  [BUGGY]  }  else  if(array1.length  ==  0  ||  array2.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array1.length  ==  0  ||  array2.length!=  0)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1.length  ==  0  ||  array2.length!=  0)  {	  }    else    if(array2    ==    null    ||    array1.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
16	[BUG]  [BUGGY]  result  =  clone(array1,  array2);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  result  =  clone(array1,  array2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	result  =  clone(array1,  array2);	  return    clone(array1,    array2);    	non-compiled	[CE]  not  a  statement	2	None	replace
17	[BUG]  [BUGGY]  return  clone(array1,  array2,  null);  [CE]  not  a  statement  [FE]                        ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  clone(array1,  array2,  null);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  clone(array1,  array2,  null);	  return    clone(array1,    array2);    	non-compiled	[CE]  not  a  statement	2	None	replace
18	[BUG]  [BUGGY]  array2  =  array1.length;  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =  array1.length;  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =  array1.length;	  array2    =    array1;    	non-compiled	[CE]  not  a  statement	32	None	replace
19	[BUG]  [BUGGY]  array2  =  array1.array2;  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =  array1.array2;  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =  array1.array2;	  array2    =    array1;    	non-compiled	[CE]  not  a  statement	32	None	replace
20	[BUG]  [BUGGY]  array1  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  array2    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	19	None	replace
21	[BUG]  [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1.length,  array2.length);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1.length,  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return(T[])Array.newInstance(array1.length,  array2.length);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	26	None	replace
22	[BUG]  [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array2.length,  array1.length);  }  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array2.length,  array1.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return(T[])Array.newInstance(array2.length,  array1.length);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	26	None	replace
23	[BUG]  [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2.length);  }  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return(T[])Array.newInstance(array1,  array2.length);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	26	None	replace
24	[BUG]  [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
25	[BUG]  [BUGGY]  array1  =  array2.newInstance(array1,  array2);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =  array2.newInstance(array1,  array2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =  array2.newInstance(array1,  array2);	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
26	[BUG]  [BUGGY]  }  else  if(array1.length!=  0  ||  array2.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array1.length!=  0  ||  array2.length  ==  0)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1.length!=  0  ||  array2.length  ==  0)  {	  }    else    if(array1.length    ==    0    ||    array2.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
27	[BUG]  [BUGGY]  }  else  if(array2.length  ==  0  ||  array1.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array2.length  ==  0  ||  array1.length  ==  0)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array2.length  ==  0  ||  array1.length  ==  0)  {	  }    else    if(array1.length    ==    0    ||    array2.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
28	[BUG]  [BUGGY]  return  Array.newInstance(array1,  array2.length  +  1);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1,  array2.length  +  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1,  array2.length  +  1);	  return    Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	22	None	replace
29	[BUG]  [BUGGY]  return  Array.newInstance(array1,  array2.length  +  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1,  array2.length  +  INDEX_NOT_FOUND);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1,  array2.length  +  INDEX_NOT_FOUND);	  return    Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	22	None	replace
30	[BUG]  [BUGGY]  return  Array.newInstance(array1,  array2.length  +  2);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1,  array2.length  +  2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1,  array2.length  +  2);	  return    Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	22	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clonedArray,  0,  array2.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clonedArray,  0,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clonedArray,  0,  array2.length);	  System.arraycopy(array1,    0,    clonedArray,    0,    array1.length);    	non-compiled	[CE]  not  a  statement	43	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  array2,  0,  clonedArray.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  array2,  0,  clonedArray.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  array2,  0,  clonedArray.length);	  System.arraycopy(array1,    0,    clonedArray,    0,    array1.length);    	non-compiled	[CE]  not  a  statement	43	None	replace
33	[BUG]  [BUGGY]  result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
34	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	49	None	replace
35	[BUG]  [BUGGY]  array2  ==  null)  {  return  clone(array2);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return  clone(array2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return  clone(array2);	  array2    ==    null)    {    return    clone(array1);    	non-compiled	[CE]  not  a  statement	10	None	replace
36	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  -  1);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  -  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length  -  1);	  return(T[])Array.newInstance(array1.length    +    array2.length    -    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
37	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  +  array2.length  /  1);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  +  array2.length  /  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  +  array2.length  /  1);	  return(T[])Array.newInstance(array1.length    +    array2.length    -    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
38	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length,  array2.length  -  1);  [CE]  not  a  statement  [FE]                        ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length,  array2.length  -  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length,  array2.length  -  1);	  return(T[])Array.newInstance(array1.length    +    array2.length    -    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
39	[BUG]  [BUGGY]  parent  ==  null  ||  array2!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null  ||  array2!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null  ||  array2!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    array2    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
40	[BUG]  [BUGGY]  array1  ==  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    array2    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
41	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  /  2);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  /  2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  /  2);	  return(T[])Array.newInstance(array1.length    /    array2.length);    	non-compiled	[CE]  not  a  statement	40	None	replace
42	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  *  array2.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  *  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  *  array2.length);	  return(T[])Array.newInstance(array1.length    /    array2.length);    	non-compiled	[CE]  not  a  statement	40	None	replace
43	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  /  EMPTY_INT_ARRAY);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  /  EMPTY_INT_ARRAY);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  /  EMPTY_INT_ARRAY);	  return(T[])Array.newInstance(array1.length    /    array2.length);    	non-compiled	[CE]  not  a  statement	40	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  array2,  array1.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  array2,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  array2,  array1.length);	  System.arraycopy(array1,    0,    clone,    array1.length);    	non-compiled	[CE]  not  a  statement	34	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  array2,  clone,  array1.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  array2,  clone,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  array2,  clone,  array1.length);	  System.arraycopy(array1,    0,    clone,    array1.length);    	non-compiled	[CE]  not  a  statement	34	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(array2,  0,  clone(array1),  0,  array2.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array2,  0,  clone(array1),  0,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array2,  0,  clone(array1),  0,  array2.length);	  System.arraycopy(array1,    0,    clone(array1),    0,    array2.length);    	non-compiled	[CE]  not  a  statement	44	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clone(array2),  0,  array1.length);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clone(array2),  0,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clone(array2),  0,  array1.length);	  System.arraycopy(array1,    0,    clone(array1),    0,    array2.length);    	non-compiled	[CE]  not  a  statement	44	None	replace
48	[BUG]  [BUGGY]  return  clone(array1,  null,  array2);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  clone(array1,  null,  array2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  clone(array1,  null,  array2);	  return    clone(array1,    null);    	non-compiled	[CE]  not  a  statement	1	None	replace
49	[BUG]  [BUGGY]  return  clone(array1,  null,  array2.length);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  clone(array1,  null,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  clone(array1,  null,  array2.length);	  return    clone(array1,    null);    	non-compiled	[CE]  not  a  statement	1	None	replace
50	[BUG]  [BUGGY]  if(array1!=  null)  {  return(T[])Array.newInstance(array2,  array1);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1!=  null)  {  return(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1!=  null)  {  return(T[])Array.newInstance(array2,  array1);  }	  return(T[])Array.newInstance(array2,    array1);    	non-compiled	[CE]  not  a  statement	51	None	replace
51	[BUG]  [BUGGY]  array2  ==  null)  {  return  Array.newInstance(array1.length,  array2.length);  }  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return  Array.newInstance(array1.length,  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return  Array.newInstance(array1.length,  array2.length);  }	  if(array1    ==    null)    {    return    Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	24	None	replace
52	[BUG]  [BUGGY]  array1  ==  null  ||  array2  ==  null)  {  return  Array.newInstance(array2.length,  array1.length);  }  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null  ||  array2  ==  null)  {  return  Array.newInstance(array2.length,  array1.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null  ||  array2  ==  null)  {  return  Array.newInstance(array2.length,  array1.length);  }	  if(array1    ==    null)    {    return    Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	24	None	replace
53	[BUG]  [BUGGY]  array2  ==  null)  {  return  Array.newInstance(array2.length,  array1.length);  }  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  ==  null)  {  return  Array.newInstance(array2.length,  array1.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  ==  null)  {  return  Array.newInstance(array2.length,  array1.length);  }	  if(array1    ==    null)    {    return    Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	24	None	replace
54	[BUG]  [BUGGY]  array2  =  array2.clone();  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =  array2.clone();  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =  array2.clone();	  array2    =    array1.clone();    	non-compiled	[CE]  not  a  statement	16	None	replace
55	[BUG]  [BUGGY]  array2  =  array.clone();  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =  array.clone();  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =  array.clone();	  array2    =    array1.clone();    	non-compiled	[CE]  not  a  statement	16	None	replace
56	[BUG]  [BUGGY]  array1  =  array2.clone();  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =  array2.clone();  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =  array2.clone();	  array2    =    array1.clone();    	non-compiled	[CE]  not  a  statement	16	None	replace
57	[BUG]  [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array2,  array1.length,  array2.length);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array2,  array1.length,  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1  ==  null)  {  return  Array.newInstance(array2,  array1.length,  array2.length);  }	  return    Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	35	None	replace
58	[BUG]  [BUGGY]  return  Array.newInstance(array1,  array2,  array1.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1,  array2,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1,  array2,  array1.length);	  return    Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	35	None	replace
59	[BUG]  [BUGGY]  array2  =(T[])Array.newInstance(array1,  array2.length);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =(T[])Array.newInstance(array1,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =(T[])Array.newInstance(array1,  array2.length);	  array2    =(T[])Array.newInstance(array1,    array2);    	non-compiled	[CE]  not  a  statement	30	None	replace
60	[BUG]  [BUGGY]  array2  =(T[])Array.newInstance(array1,  array2,  array1.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =(T[])Array.newInstance(array1,  array2,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =(T[])Array.newInstance(array1,  array2,  array1.length);	  array2    =(T[])Array.newInstance(array1,    array2);    	non-compiled	[CE]  not  a  statement	30	None	replace
61	[BUG]  [BUGGY]  }  else  if(array1.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array1.length!=  0)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1.length!=  0)  {	  }    else    if(array1.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(array2,  0,  array1,  0,  array2.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array2,  0,  array1,  0,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array2,  0,  array1,  0,  array2.length);	  System.arraycopy(array1,    0,    array2,    0,    array2.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
63	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  1);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length  +  1);	  return(T[])Array.newInstance(array1.length,    array2.length    +    1);    	non-compiled	[CE]  not  a  statement	27	None	replace
64	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length,  array2.length  /  1);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length,  array2.length  /  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length,  array2.length  /  1);	  return(T[])Array.newInstance(array1.length,    array2.length    +    1);    	non-compiled	[CE]  not  a  statement	27	None	replace
65	[BUG]  [BUGGY]  if(array1.length!=  array2.length)  {  return  Array.newInstance(array1.length  +  array2.length);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1.length!=  array2.length)  {  return  Array.newInstance(array1.length  +  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1.length!=  array2.length)  {  return  Array.newInstance(array1.length  +  array2.length);  }	  return    Array.newInstance(array1.length    +    array2.length);    	non-compiled	[CE]  not  a  statement	48	None	replace
66	[BUG]  [BUGGY]  return  Array.newInstance(array1.length  +  array2.length,  array2.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1.length  +  array2.length,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1.length  +  array2.length,  array2.length);	  return    Array.newInstance(array1.length    +    array2.length);    	non-compiled	[CE]  not  a  statement	48	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  array2,  0,  Array.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  array2,  0,  Array.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  array2,  0,  Array.length);	  System.arraycopy(array1,    0,    Array.length,    0,    array1.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  Array.length,  0,  array2.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  Array.length,  0,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  Array.length,  0,  array2.length);	  System.arraycopy(array1,    0,    Array.length,    0,    array1.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
69	[BUG]  [BUGGY]  array1  =(T[])Array.newInstance(array1,  array2);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =(T[])Array.newInstance(array1,  array2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =(T[])Array.newInstance(array1,  array2);	  array1    =(T[])Array.newInstance(array2,    array1);    	non-compiled	[CE]  not  a  statement	31	None	replace
70	[BUG]  [BUGGY]  array1  =(T[])Array.newInstance(array2,  array1.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =(T[])Array.newInstance(array2,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =(T[])Array.newInstance(array2,  array1.length);	  array1    =(T[])Array.newInstance(array2,    array1);    	non-compiled	[CE]  not  a  statement	31	None	replace
71	[BUG]  [BUGGY]  return  Array.newInstance(array1.length,  array2.length  +  INDEX_NOT_FOUND,  array2.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1.length,  array2.length  +  INDEX_NOT_FOUND,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1.length,  array2.length  +  INDEX_NOT_FOUND,  array2.length);	  return    Array.newInstance(array1.length,    array2.length    +    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	25	None	replace
72	[BUG]  [BUGGY]  if(inDEX_NOT_FOUND  ==  array1.length)  {  return  Array.newInstance(array2.length  +  INDEX_NOT_FOUND);  }  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(inDEX_NOT_FOUND  ==  array1.length)  {  return  Array.newInstance(array2.length  +  INDEX_NOT_FOUND);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(inDEX_NOT_FOUND  ==  array1.length)  {  return  Array.newInstance(array2.length  +  INDEX_NOT_FOUND);  }	  return    Array.newInstance(array1.length,    array2.length    +    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	25	None	replace
73	[BUG]  [BUGGY]  }  else  if(array2  ==  null  ||  array1  ==  null  ||  array2.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array2  ==  null  ||  array1  ==  null  ||  array2.length  ==  0)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array2  ==  null  ||  array1  ==  null  ||  array2.length  ==  0)  {	  }    else    if(array1    ==    null    ||    array2.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  INDEX_NOT_FOUND);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length  +  INDEX_NOT_FOUND);	  return(T[])Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
75	[BUG]  [BUGGY]  array1  ==  null  ||  array2  ==  null)  {  return  clone(array1);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null  ||  array2  ==  null)  {  return  clone(array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null  ||  array2  ==  null)  {  return  clone(array1);  }	  parent    ==    null    ||    array2    ==    null)    {    return    clone(array1);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
76	[BUG]  [BUGGY]  parent  ==  null  ||  array2!=  null)  {  return  clone(array1);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null  ||  array2!=  null)  {  return  clone(array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null  ||  array2!=  null)  {  return  clone(array1);  }	  parent    ==    null    ||    array2    ==    null)    {    return    clone(array1);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(array2,  0,  clone,  array1.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array2,  0,  clone,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array2,  0,  clone,  array1.length);	  System.arraycopy(array1,    0,    clone,    array2.length);    	non-compiled	[CE]  not  a  statement	5	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clone,  array2.length  +  1);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clone,  array2.length  +  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clone,  array2.length  +  1);	  System.arraycopy(array1,    0,    clone,    array2.length);    	non-compiled	[CE]  not  a  statement	5	None	replace
79	[BUG]  [BUGGY]  result  =  Array.newInstance(array1.length,  array2.length  +  1);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  result  =  Array.newInstance(array1.length,  array2.length  +  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	result  =  Array.newInstance(array1.length,  array2.length  +  1);	  return    Array.newInstance(array1.length,    array2.length    +    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
80	[BUG]  [BUGGY]  parent!=  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent!=  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent!=  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    array1    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	20	None	replace
81	[BUG]  [BUGGY]  array1  ==  null)  {  return  clone(array1);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null)  {  return  clone(array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null)  {  return  clone(array1);  }	  array2    {    null)    {    return    clone(array1);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
82	[BUG]  [BUGGY]  array1  =  array2!=  null)  {  return  clone(array1);  }  [CE]  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =  array2!=  null)  {  return  clone(array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =  array2!=  null)  {  return  clone(array1);  }	  array1    =    array2    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
83	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  /  array2.length  -  1);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  /  array2.length  -  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  /  array2.length  -  1);	  return(T[])Array.newInstance(array1.length    +    array2.length    -    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
84	[BUG]  [BUGGY]  parent!=  null)  {  return  clone(array2);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent!=  null)  {  return  clone(array2);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent!=  null)  {  return  clone(array2);  }	  parent    ==    null)    {    return    clone(array2);    }    	non-compiled	[CE]  not  a  statement	28	None	replace
85	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  array1.length,  array2.length);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  array1.length,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length  +  array1.length,  array2.length);	  return(T[])Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
86	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length,  array2.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length,  array2.length);	  return(T[])Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clonedArray,  0,  array1.length  +  array2.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clonedArray,  0,  array1.length  +  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clonedArray,  0,  array1.length  +  array2.length);	  System.arraycopy(array1,    0,    clonedArray,    0,    array1.length);    	non-compiled	[CE]  not  a  statement	43	None	replace
88	[BUG]  [BUGGY]  return  Array.newInstance(array1.length,  array2.length  +  2);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1.length,  array2.length  +  2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1.length,  array2.length  +  2);	  return    Array.newInstance(array1.length,    array2.length    +    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
89	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  /  array2.length  +  1);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  /  array2.length  +  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  /  array2.length  +  1);	  return(T[])Array.newInstance(array1.length    /    array2.length);    	non-compiled	[CE]  not  a  statement	40	None	replace
90	[BUG]  [BUGGY]  return  Array.newInstance(array1,  array2.length  +  array1.length);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1,  array2.length  +  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1,  array2.length  +  array1.length);	  return    Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	22	None	replace
91	[BUG]  [BUGGY]  array1  =(T[])Array.newInstance(array2,  0);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =(T[])Array.newInstance(array2,  0);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =(T[])Array.newInstance(array2,  0);	  array1    =(T[])Array.newInstance(array2,    array1);    	non-compiled	[CE]  not  a  statement	31	None	replace
92	[BUG]  [BUGGY]  return  Array.newInstance(array1,  array2.length,  array1.length  +  array2.length);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1,  array2.length,  array1.length  +  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1,  array2.length,  array1.length  +  array2.length);	  return    Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	35	None	replace
93	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  array1.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length  +  array1.length);	  return(T[])Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
94	[BUG]  [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array1,    array2);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
95	[BUG]  [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array1,  array2);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array1,    array2);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
96	[BUG]  [BUGGY]  return(T[])clone(array1,  array2);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])clone(array1,  array2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])clone(array1,  array2);	  return    clone(array1,    array2);    	non-compiled	[CE]  not  a  statement	2	None	replace
97	[BUG]  [BUGGY]  return  clone(array2,  array1);  [CE]  not  a  statement  [FE]                        ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  clone(array2,  array1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  clone(array2,  array1);	  return    clone(array1,    array2);    	non-compiled	[CE]  not  a  statement	2	None	replace
98	[BUG]  [BUGGY]  return(T[])clone(array1);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])clone(array1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])clone(array1);	  return    clone(array2);    	non-compiled	[CE]  not  a  statement	13	None	replace
99	[BUG]  [BUGGY]  array1  =  array2!=  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [CE]  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =  array2!=  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =  array2!=  null)  {  return(T[])Array.newInstance(array1,  array2);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array2,    array1);    }    	non-compiled	[CE]  	38	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(array1,  1,  array2,  0,  array1.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  1,  array2,  0,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  1,  array2,  0,  array1.length);	  System.arraycopy(array1,    0,    Array.length,    0,    array1.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
101	[BUG]  [BUGGY]  array2  =(T[])Array.newInstance(array1.length,  array2.length);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =(T[])Array.newInstance(array1.length,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =(T[])Array.newInstance(array1.length,  array2.length);	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	26	None	replace
102	[BUG]  [BUGGY]  array1  =(T[])Array.newInstance(array2.length,  array1.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  =(T[])Array.newInstance(array2.length,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  =(T[])Array.newInstance(array2.length,  array1.length);	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	26	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clone,  array2.length,  array1.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clone,  array2.length,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clone,  array2.length,  array1.length);	  System.arraycopy(array1,    0,    clone,    array2.length);    	non-compiled	[CE]  not  a  statement	5	None	replace
104	[BUG]  [BUGGY]  array1  ==  null)  {  return  clone(array2);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null)  {  return  clone(array2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null)  {  return  clone(array2);	  array2    ==    null)    {    return    clone(array1);    	non-compiled	[CE]  not  a  statement	10	None	replace
105	[BUG]  [BUGGY]  array1  ==  null)  {  return  clone(array1);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array1  ==  null)  {  return  clone(array1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array1  ==  null)  {  return  clone(array1);	  array2    ==    null)    {    return    clone(array1);    	non-compiled	[CE]  not  a  statement	10	None	replace
106	[BUG]  [BUGGY]  array2  =(T[])Array.newInstance(array2,  array1);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =(T[])Array.newInstance(array2,  array1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =(T[])Array.newInstance(array2,  array1);	  array2    =(T[])Array.newInstance(array1,    array2);    	non-compiled	[CE]  not  a  statement	30	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  array2,  0,  array1.length  +  array2.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  array2,  0,  array1.length  +  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  array2,  0,  array1.length  +  array2.length);	  System.arraycopy(array1,    0,    array2,    0,    array1.length,    array2.length);    	non-compiled	[CE]  not  a  statement	4	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clone,  array2,  array1.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clone,  array2,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clone,  array2,  array1.length);	  System.arraycopy(array1,    0,    clone,    array1.length);    	non-compiled	[CE]  not  a  statement	34	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clone,  array1.length,  array2.length);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clone,  array1.length,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clone,  array1.length,  array2.length);	  System.arraycopy(array1,    0,    clone,    array1.length);    	non-compiled	[CE]  not  a  statement	34	None	replace
110	[BUG]  [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return(T[])Array.newInstance(array2,  array1);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
111	[BUG]  [BUGGY]  array2  =  array1.getParent();  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =  array1.getParent();  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =  array1.getParent();	  array2    =    array1.clone();    	non-compiled	[CE]  not  a  statement	16	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(array1,  0,  clone(array2),  0,  array2.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  System.arraycopy(array1,  0,  clone(array2),  0,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	System.arraycopy(array1,  0,  clone(array2),  0,  array2.length);	  System.arraycopy(array1,    0,    clone(array1),    0,    array2.length);    	non-compiled	[CE]  not  a  statement	44	None	replace
113	[BUG]  [BUGGY]  Parent  <?>  parent  ==  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  Parent  <?>  parent  ==  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	Parent  <?>  parent  ==  null  ||  array2  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    array1    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	20	None	replace
114	[BUG]  [BUGGY]  }  else  if(array2.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array2.length!=  0)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array2.length!=  0)  {	  }    else    if(array2.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
115	[BUG]  [BUGGY]  if(array1  ==  null)  {  array2  =(T[])Array.newInstance(array2,  array1);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1  ==  null)  {  array2  =(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1  ==  null)  {  array2  =(T[])Array.newInstance(array2,  array1);  }	  array2    =(T[])Array.newInstance(array1,    array2);    	non-compiled	[CE]  not  a  statement	30	None	replace
116	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  /  2  +  array2.length  -  1);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  /  2  +  array2.length  -  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  /  2  +  array2.length  -  1);	  return(T[])Array.newInstance(array1.length    +    array2.length    -    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
117	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1.length  *  array2.length  -  1);  [CE]  not  a  statement  [FE]                      ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1.length  *  array2.length  -  1);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1.length  *  array2.length  -  1);	  return(T[])Array.newInstance(array1.length    +    array2.length    -    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
118	[BUG]  [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2.length,  array1.length);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null)  {  return(T[])Array.newInstance(array2.length,  array1.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null)  {  return(T[])Array.newInstance(array2.length,  array1.length);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	26	None	replace
119	[BUG]  [BUGGY]  array2  =  array1.toString();  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  array2  =  array1.toString();  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	array2  =  array1.toString();	  array2    =    array1;    	non-compiled	[CE]  not  a  statement	32	None	replace
120	[BUG]  [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array1.length,  array2.length);  }  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array1.length,  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1  ==  null)  {  return  Array.newInstance(array1.length,  array2.length);  }	  if(array1    ==    null)    {    return    Array.newInstance(array2.length,    array1.length);    }    	non-compiled	[CE]  not  a  statement	24	None	replace
121	[BUG]  [BUGGY]  return  Array.newInstance(array1.length  +  INDEX_NOT_FOUND,  array2.length);  [CE]  not  a  statement  [FE]                    ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return  Array.newInstance(array1.length  +  INDEX_NOT_FOUND,  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return  Array.newInstance(array1.length  +  INDEX_NOT_FOUND,  array2.length);	  return    Array.newInstance(array1.length,    array2.length    +    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	25	None	replace
122	[BUG]  [BUGGY]  }  else  if(array1!=  null  &&  array2!=  null)  {  [CE]  illegal  start  of  type  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array1!=  null  &&  array2!=  null)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1!=  null  &&  array2!=  null)  {	  }    else    if(array1    ==    null    ||    array2!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
123	[BUG]  [BUGGY]  parent  ==  null  ||!parent.isAssignableFrom(array1))  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [CE]  not  a  statement  [FE]            ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent  ==  null  ||!parent.isAssignableFrom(array1))  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent  ==  null  ||!parent.isAssignableFrom(array1))  {  return(T[])Array.newInstance(array2,  array1);  }  else  {  return(T[])Array.newInstance(array2,  array1);  }	  if(array1    ==    null)    {    return(T[])Array.newInstance(array2,    array1);    }    else    {    return(T[])Array.newInstance(array1,    array2);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
124	[BUG]  [BUGGY]  }  else  if(array1!=  null  &&  array2  ==  null)  {  [CE]  illegal  start  of  type  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  }  else  if(array1!=  null  &&  array2  ==  null)  {  [BUGGY]      return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1!=  null  &&  array2  ==  null)  {	  }    else    if(array1!=    null    ||    array2    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
125	[BUG]  [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array2.length  +  1);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array2.length  +  1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1  ==  null)  {  return  Array.newInstance(array2.length  +  1);  }	  return    Array.newInstance(array1.length    +    array2.length);    	non-compiled	[CE]  not  a  statement	48	None	replace
126	[BUG]  [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array1.length  +  array2.length);  }  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array1.length  +  array2.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1  ==  null)  {  return  Array.newInstance(array1.length  +  array2.length);  }	  return    Array.newInstance(array1.length    +    array2.length);    	non-compiled	[CE]  not  a  statement	48	None	replace
127	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  2);  [CE]  not  a  statement  [FE]                  ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  2);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length  +  2);	  return(T[])Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
128	[BUG]  [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array2,  array1.length);  }  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  if(array1  ==  null)  {  return  Array.newInstance(array2,  array1.length);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	if(array1  ==  null)  {  return  Array.newInstance(array2,  array1.length);  }	  return    Array.newInstance(array1,    array2.length);    	non-compiled	[CE]  not  a  statement	22	None	replace
129	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length,  array1.length  +  array2.length);  [CE]  not  a  statement  [FE]              ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length,  array1.length  +  array2.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length,  array1.length  +  array2.length);	  return(T[])Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
130	[BUG]  [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  1,  array1.length);  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  return(T[])Array.newInstance(array1,  array2.length  +  1,  array1.length);  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	return(T[])Array.newInstance(array1,  array2.length  +  1,  array1.length);	  return(T[])Array.newInstance(array1,    array2.length,    array1.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
131	[BUG]  [BUGGY]  parent!=  null)  {  return  clone(array1);  }  [CE]  not  a  statement  [FE]                ArrayStoreException      [CONTEXT]      public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);      [BUGGY]  parent!=  null)  {  return  clone(array1);  }  [BUGGY]      }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	parent!=  null)  {  return  clone(array1);  }	  parent    ==    null)    {    return    clone(array1);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
