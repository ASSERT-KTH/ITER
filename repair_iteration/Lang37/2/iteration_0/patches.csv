bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    return(T[])Array.newInstance(array1,  array2);  [CE]  not  a  statement  [FE]    ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    return(T[])Array.newInstance(array1,  array2);  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    return(T[])Array.newInstance(array1,  array2);		non-compiled	[CE]  not  a  statement	4	None	add
2	[BUG]  [BUGGY]    return(T[])Array.newInstance(array1.length,  array2.length);  [CE]  not  a  statement  [FE]      ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    return(T[])Array.newInstance(array1.length,  array2.length);  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    return(T[])Array.newInstance(array1.length,  array2.length);		non-compiled	[CE]  not  a  statement	4	None	add
3	[BUG]  [BUGGY]    System.arraycopy(array1,  0,  array2,  0,  array1.length);  [CE]  not  a  statement  [FE]        ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    System.arraycopy(array1,  0,  array2,  0,  array1.length);  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    System.arraycopy(array1,  0,  array2,  0,  array1.length);		non-compiled	[CE]  not  a  statement	4	None	add
4	[BUG]  [BUGGY]    if(array1  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    if(array1  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    if(array1  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  not  a  statement	4	None	add
5	[BUG]  [BUGGY]    return  clone(array1);  [CE]  not  a  statement  [FE]            ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    return  clone(array1);  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    return  clone(array1);		non-compiled	[CE]  not  a  statement	4	None	add
6	[BUG]  [BUGGY]  }  else  if(array1  ==  null)  {  [CE]  illegal  start  of  type  [FE]    ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]  }  else  if(array1  ==  null)  {  [BUGGY]  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1  ==  null)  {	}  else  if  (array2  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  }  else  if(array1  ==  null  ||  array2  ==  null)  {  [CE]  illegal  start  of  type  [FE]      ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]  }  else  if(array1  ==  null  ||  array2  ==  null)  {  [BUGGY]  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1  ==  null  ||  array2  ==  null)  {	}  else  if  (array2  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  }  else  if(array1!=  null)  {  [CE]  illegal  start  of  type  [FE]        ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]  }  else  if(array1!=  null)  {  [BUGGY]  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array1!=  null)  {	}  else  if  (array2  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]    if(array1  ==  null)  {  return  clone(array2);  }  [CE]  not  a  statement  [FE]    ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    if(array1  ==  null)  {  return  clone(array2);  }  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    if(array1  ==  null)  {  return  clone(array2);  }		non-compiled	[CE]  not  a  statement	4	None	add
10	[BUG]  [BUGGY]    return  Array.newInstance(array1.length,  array2.length);  [CE]  not  a  statement  [FE]      ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    return  Array.newInstance(array1.length,  array2.length);  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    return  Array.newInstance(array1.length,  array2.length);		non-compiled	[CE]  not  a  statement	4	None	add
11	[BUG]  [BUGGY]    if(array1  ==  null)  {  if(array2  ==  null)  {  return  clone(array1);  }  [CE]  not  a  statement  [FE]    ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    if(array1  ==  null)  {  if(array2  ==  null)  {  return  clone(array1);  }  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    if(array1  ==  null)  {  if(array2  ==  null)  {  return  clone(array1);  }		non-compiled	[CE]  not  a  statement	4	None	add
12	[BUG]  [BUGGY]    if(array1  ==  null)  {  if(array2  ==  null)  {  return  clone(array2);  }  [CE]  not  a  statement  [FE]      ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    if(array1  ==  null)  {  if(array2  ==  null)  {  return  clone(array2);  }  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    if(array1  ==  null)  {  if(array2  ==  null)  {  return  clone(array2);  }		non-compiled	[CE]  not  a  statement	4	None	add
13	[BUG]  [BUGGY]    if(array2  ==  null)  {  return  clone(array1);  }  [CE]  not  a  statement  [FE]        ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    if(array2  ==  null)  {  return  clone(array1);  }  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    if(array2  ==  null)  {  return  clone(array1);  }		non-compiled	[CE]  not  a  statement	4	None	add
14	[BUG]  [BUGGY]    return(T[])Array.newInstance(array1.length  +  array2.length);  [CE]  not  a  statement  [FE]          ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]    return(T[])Array.newInstance(array1.length  +  array2.length);  [BUGGY]  }  else  if  (array2  ==  null)  {  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	    return(T[])Array.newInstance(array1.length  +  array2.length);		non-compiled	[CE]  not  a  statement	4	None	add
15	[BUG]  [BUGGY]  }  else  if(array2  ==  null  ||  array1.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]    ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]  }  else  if(array2  ==  null  ||  array1.length  ==  0)  {  [BUGGY]  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array2  ==  null  ||  array1.length  ==  0)  {	}  else  if  (array2  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  }  else  if(array2  ==  null  ||  array1  ==  null)  {  [CE]  illegal  start  of  type  [FE]      ArrayStoreException  [CONTEXT]  public  static  <T>  T[]  addAll(T[]  array1,  T...  array2)  {  if  (array1  ==  null)  {  return  clone(array2);  [BUGGY]  }  else  if(array2  ==  null  ||  array1  ==  null)  {  [BUGGY]  return  clone(array1);  }  final  Class<?>  type1  =  array1.getClass().getComponentType();  T[]  joinedArray  =  (T[])  Array.newInstance(type1,  array1.length  +  array2.length);  System.arraycopy(array1,  0,  joinedArray,  0,  array1.length);  System.arraycopy(array2,  0,  joinedArray,  array1.length,  array2.length);  return  joinedArray;  }  [CLASS]  ArrayUtils  [METHOD]  addAll  [RETURN_TYPE]  <T>  T[]  array1  array2  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  result  subarray  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array1  array2  joinedArray  Class  type1  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang37/src/java/org/apache/commons/lang3/ArrayUtils.java	0.7071067811865475	2956	2956	1	replace	}  else  if(array2  ==  null  ||  array1  ==  null)  {	}  else  if  (array2  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
