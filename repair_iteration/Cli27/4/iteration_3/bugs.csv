bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
2	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
3	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
4	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
5	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
6	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
7	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
8	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	6	6	add
9	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  this  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]            StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  this  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  this  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	6	None	add
10	[BUG]  [BUGGY]  String  selected  =  optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);	          String    selected    =(String)optionMap.get(this.selected);    String    selection    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	26	None	replace
11	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(0);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(0);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(0);	          String    selected    =(String)optionMap.get(this.selected);    String    selection    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	26	None	replace
12	[BUG]  [BUGGY]  return  this.selected.toString();  String  selected  =  this.selected.toString();  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  String  selected  =  this.selected.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    String  selected  =  this.selected.toString();	  	non-compiled	[CE]  unreachable  statement	52	None	add
13	[BUG]  [BUGGY]  return  this.selected.toString();  this.selected.toString();  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  this.selected.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    this.selected.toString();	  	non-compiled	[CE]  unreachable  statement	52	None	add
14	[BUG]  [BUGGY]  return  this.selected.toString();  String  selected  =(String)this.optionMap.get(selected);  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  String  selected  =(String)this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    String  selected  =(String)this.optionMap.get(selected);	  	non-compiled	[CE]  unreachable  statement	52	None	add
15	[BUG]  [BUGGY]  return  this.selected.toString();  String  selected  =  getSelectedValue();  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  String  selected  =  getSelectedValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    String  selected  =  getSelectedValue();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
16	[BUG]  [BUGGY]  return  this.selected.toString();  String  selected  =(String)this.selected.getValue();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  String  selected  =(String)this.selected.getValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    String  selected  =(String)this.selected.getValue();	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
17	[BUG]  [BUGGY]  String  selected  =  this.selected.getValue();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.selected.getValue();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.selected.getValue();	  String    selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
18	[BUG]  [BUGGY]  String  selected  =  options.get(this.selected);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  options.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  options.get(this.selected);	  String    selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  cannot  find  symbol  options	36	None	replace
19	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  this.selected  =(this.selected!=  null)?  this.selected  :  selected;  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  this.selected  =(this.selected!=  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    this.selected  =(this.selected!=  null)?  this.selected  :  selected;	  	non-compiled	[CE]  unreachable  statement	85	None	add
20	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  (this.selected!=  null)?  this.selected  :  selected;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  (this.selected!=  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    (this.selected!=  null)?  this.selected  :  selected;	  	non-compiled	[CE]  not  a  statement	85	None	add
21	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    if(this.selected!=  null)?  this.selected  :  selected;	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
22	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  this.selected  =(this.selected  ==  null)?  this.selected  :  selected;  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  this.selected  =(this.selected  ==  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    this.selected  =(this.selected  ==  null)?  this.selected  :  selected;	  	non-compiled	[CE]  unreachable  statement	85	None	add
23	[BUG]  [BUGGY]  return  optionMap.select(0);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.select(0);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  optionMap.select(0);	  return    this.optionMap.select(0);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
24	[BUG]  [BUGGY]  String  selected  =  this.optionMap.select(0);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.select(0);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.select(0);	  return    this.optionMap.select(0);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
25	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(0);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(0);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(0);	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	17	None	replace
26	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  [CE]  missing  return  statement  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  missing  return  statement	17	None	replace
27	[BUG]  [BUGGY]  string  selected  =(String)this.optionMap.get(selected);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  string  selected  =(String)this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	string  selected  =(String)this.optionMap.get(selected);	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
28	[BUG]  [BUGGY]  String  selected  =  getSelected();  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelected();	  return    this.selected;    String    selected    =    getSelected();    	non-compiled	[CE]  missing  return  statement	33	None	replace
29	[BUG]  [BUGGY]  if(selected!=  null)  {  return  this.selected;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  this.selected;  }	  return    this.selected;    String    selected    =    getSelected();    	non-compiled	[CE]  missing  return  statement	33	None	replace
30	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  selected;  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  selected;  }	  return    this.selected;    String    selected    =    getSelected();    	non-compiled	[CE]  missing  return  statement	33	None	replace
31	[BUG]  [BUGGY]  if(selected  ==  null)  {  return  this.selected;  }  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected  ==  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected  ==  null)  {  return  this.selected;  }	  return    this.selected;    String    selected    =    getSelected();    	non-compiled	[CE]  missing  return  statement	33	None	replace
32	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  (this.selected!=  null)?  null  :  this.selected;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  (this.selected!=  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    (this.selected!=  null)?  null  :  this.selected;	  	non-compiled	[CE]  not  a  statement	15	None	add
33	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected!=  null)?  null  :  this.selected;  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected!=  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    this.selected!=  null)?  null  :  this.selected;	  	non-compiled	[CE]  not  a  statement	15	None	add
34	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  if(this.selected!=  null)?  null  :  this.selected;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  if(this.selected!=  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    if(this.selected!=  null)?  null  :  this.selected;	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
35	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected  ==  null)?  null  :  this.selected;  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected  ==  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    this.selected  ==  null)?  null  :  this.selected;	  	non-compiled	[CE]  not  a  statement	15	None	add
36	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelected;  [CE]  cannot  find  symbol  getSelected  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.getSelected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.getSelected;	  return    selectionMap.getSelected;    	non-compiled	[CE]  cannot  find  symbol  getSelected	44	None	replace
37	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( "select   "));  [CE]  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( "select   "));  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( "select   "));	          String    selected    =(String)optionMap.get(       "select       ");    String    selected    =(String)optionMap.get(   "select       "));    	non-compiled	[CE]  	2	None	replace
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected  ==  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return(this.selected  ==  null)?  this.selected  :  selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
39	[BUG]  [BUGGY]  return(this.selected  ==  null)?  this.selected  :  selected;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected  ==  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected  ==  null)?  this.selected  :  selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(selected!=  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return(selected!=  null)?  this.selected  :  selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
41	[BUG]  [BUGGY]  return(selected!=  null)?  this.selected  :  selected;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(selected!=  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(selected!=  null)?  this.selected  :  selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(selected  ==  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return(selected  ==  null)?  this.selected  :  selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
43	[BUG]  [BUGGY]  return(selected  ==  null)?  this.selected  :  selected;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(selected  ==  null)?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(selected  ==  null)?  this.selected  :  selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
44	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(selected);  if(selected!=  null)  {  return  selected;  }  [CE]  variable  selected  might  not  have  been  initialized  [FE]                NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(selected);  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(selected);  if(selected!=  null)  {  return  selected;  }	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  variable  selected  might  not  have  been  initialized	21	None	replace
45	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(0);  if(selected!=  null)  {  return  selected;  }  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(0);  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(0);  if(selected!=  null)  {  return  selected;  }	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	21	None	replace
46	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(selected);  if(selected  ==  null)  {  return  selected;  }  [CE]  variable  selected  might  not  have  been  initialized  [FE]                    NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(selected);  if(selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(selected);  if(selected  ==  null)  {  return  selected;  }	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  variable  selected  might  not  have  been  initialized	21	None	replace
47	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(this.selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(this.selected);  }	  return    this.selected;    String    selected    =    this.optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	32	None	replace
48	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  if(this.optionMap!=  null)  {  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  if(this.optionMap!=  null)  {  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  }  if(this.optionMap!=  null)  {  selected  =  this.optionMap.get(selected);  }	  return    this.selected;    String    selected    =    this.optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	32	None	replace
49	[BUG]  [BUGGY]  this.selected  =  getOptionMap().get(this.optionMap);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected  =  getOptionMap().get(this.optionMap);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected  =  getOptionMap().get(this.optionMap);	  return    this.selected;    this.selected    =    getOptionMap().get(this.optionMap);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
50	[BUG]  [BUGGY]  String  selected  =  getOptionMap().get(this.optionMap);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getOptionMap().get(this.optionMap);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getOptionMap().get(this.optionMap);	  return    this.selected;    this.selected    =    getOptionMap().get(this.optionMap);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
51	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  this.selected  =  getOptionMap().get(this.optionMap);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  this.selected  =  getOptionMap().get(this.optionMap);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  this.selected  =  getOptionMap().get(this.optionMap);  }	  return    this.selected;    this.selected    =    getOptionMap().get(this.optionMap);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
52	[BUG]  [BUGGY]  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    String    selected    =    this.selected;    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	78	None	replace
53	[BUG]  [BUGGY]  if(this.selected!=  null)  {  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    String    selected    =    this.selected;    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
54	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  }	  return    this.selected;    if(this.selected!=    null)    {    String    selected    =    this.selected;    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	78	None	replace
55	[BUG]  [BUGGY]  String  selected  =  this.selected;  if(selected  ==  null)  {  return  selected;  }  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.selected;  if(selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.selected;  if(selected  ==  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    String    selected    =    this.selected;    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	78	None	replace
56	[BUG]  [BUGGY]  selected  =  this.optionMap.getSelected();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  selected  =  this.optionMap.getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	selected  =  this.optionMap.getSelected();	  selected    =    getSelected();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
57	[BUG]  [BUGGY]  selected  =  getSelectedItem();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  selected  =  getSelectedItem();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	selected  =  getSelectedItem();	  selected    =    getSelected();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
58	[BUG]  [BUGGY]  selected  =  getSelected(optionMap);  [CE]  method  getSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  selected  =  getSelected(optionMap);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	selected  =  getSelected(optionMap);	  selected    =    getSelected();    	non-compiled	[CE]  method  getSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;	56	None	replace
59	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get( "selected ");  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get( "selected ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get( "selected ");	  String    selected    =(String)optionMap.get(   "selected   ");    	non-compiled	[CE]  missing  return  statement	27	None	replace
60	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( "Selected ");  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( "Selected ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( "Selected ");	  String    selected    =(String)optionMap.get(   "selected   ");    	non-compiled	[CE]  missing  return  statement	27	None	replace
61	[BUG]  [BUGGY]  String  selected  =  optionMap.toString();  [CE]  missing  return  statement  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.toString();	  return    optionMap.toString();    	non-compiled	[CE]  missing  return  statement	55	None	replace
62	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get( "Select ");  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get( "Select ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get( "Select ");	  String    selected    =(String)this.optionMap.get(   "select   ");    	non-compiled	[CE]  missing  return  statement	28	None	replace
63	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get( "Selected ");  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get( "Selected ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get( "Selected ");	  String    selected    =(String)this.optionMap.get(   "select   ");    	non-compiled	[CE]  missing  return  statement	28	None	replace
64	[BUG]  [BUGGY]  String  selected  =  map.getSelected();  [CE]  cannot  find  symbol  map  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  map.getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  map.getSelected();	  String    selected    =    options.getSelected();    	non-compiled	[CE]  cannot  find  symbol  map	10	None	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected  ==  null?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return  this.selected  ==  null?  this.selected  :  selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
66	[BUG]  [BUGGY]  return  this.selected  ==  null?  this.selected  :  selected;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected  ==  null?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected  ==  null?  this.selected  :  selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  selected!=  null?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return  selected!=  null?  this.selected  :  selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
68	[BUG]  [BUGGY]  return  selected!=  null?  this.selected  :  selected;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  selected!=  null?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  selected!=  null?  this.selected  :  selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return  this.selected!=  null?  selected  :  selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
70	[BUG]  [BUGGY]  return  this.selected!=  null?  selected  :  selected;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected!=  null?  selected  :  selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
71	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.getSelected();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.getSelected();	  String    selected    =(String)this.selected;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
72	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(0);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(0);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(0);	  return    selected.toString();    String    selected    =(String)optionMap.get(selected);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	61	None	replace
73	[BUG]  [BUGGY]  this.selected  =  getSelected();  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected  =  getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected  =  getSelected();	          if(selected!=    null)    {    selected    =    getSelected();    }    If(selected!=    null)    {    selected    =    getSelected();    }    	non-compiled	[CE]  missing  return  statement	65	None	replace
74	[BUG]  [BUGGY]  if(selected!=  null)  {  return  this.selected;  selected  =  getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  this.selected;  selected  =  getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  this.selected;  selected  =  getSelectedValue();  }	  return    this.selected;    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
75	[BUG]  [BUGGY]  if(selected!=  null)  {  return  this.selected;  }  else  {  selected  =  getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  this.selected;  }  else  {  selected  =  getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  this.selected;  }  else  {  selected  =  getSelectedValue();  }	  return    this.selected;    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
76	[BUG]  [BUGGY]  if(selected!=  null)  {  return  this.selected;  }  else  {  String  selected  =  getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  this.selected;  }  else  {  String  selected  =  getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  this.selected;  }  else  {  String  selected  =  getSelectedValue();  }	  return    this.selected;    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
77	[BUG]  [BUGGY]  String  selected  =  this.optionMap.get(this.selected,  this.selected);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.get(this.selected,  this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.get(this.selected,  this.selected);	  String    selected    =    this.optionMap.get(this.selected);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	50	None	replace
78	[BUG]  [BUGGY]  String  selected  =  this.optionMap.get(this.selected,  null);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.get(this.selected,  null);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.get(this.selected,  null);	  String    selected    =    this.optionMap.get(this.selected);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	50	None	replace
79	[BUG]  [BUGGY]  string  selected  =  this.optionMap.getSelected();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  string  selected  =  this.optionMap.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	string  selected  =  this.optionMap.getSelected();	  return    this.selected;    String    selected    =    this.optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
80	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( " "))  {  selected  =  optionMap.get(selected);  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( " "))  {  selected  =  optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( " "))  {  selected  =  optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	62	None	replace
81	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( "null "))  {  selected  =  optionMap.get(selected);  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( "null "))  {  selected  =  optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( "null "))  {  selected  =  optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	62	None	replace
82	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( "- "))  {  selected  =  optionMap.get(selected);  }  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( "- "))  {  selected  =  optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( "- "))  {  selected  =  optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	62	None	replace
83	[BUG]  [BUGGY]  String  selected  =  optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);	          String    selected    =(String)optionMap.get(this.selected);    String    chosen    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	24	None	replace
84	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(key);  [CE]  cannot  find  symbol  key  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(key);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(key);	  String    selected    =(String)optionMap.get(key);    	non-compiled	[CE]  cannot  find  symbol  key	43	None	replace
85	[BUG]  [BUGGY]  String  selected  =  this.optionMap.selected;  [CE]  cannot  find  symbol  selected  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.selected;	  return    this.optionMap.selected;    	non-compiled	[CE]  cannot  find  symbol  selected	14	None	replace
86	[BUG]  [BUGGY]  return  optionMap.selected;  [CE]  cannot  find  symbol  selected  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  optionMap.selected;	  return    this.optionMap.selected;    	non-compiled	[CE]  cannot  find  symbol  selected	14	None	replace
87	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( ",select ");  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( ",select ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( ",select ");	          String    selected    =(String)optionMap.get(       "select       ");    String    selected    =(String)optionMap.get(   ",select       ");    	non-compiled	[CE]  missing  return  statement	3	None	replace
88	[BUG]  [BUGGY]  this.selected  =  optionMap.get(this.selected);  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected  =  optionMap.get(this.selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected  =  optionMap.get(this.selected);	  return    this.selected;    this.selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	69	None	replace
89	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  this.selected  =  optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  this.selected  =  optionMap.get(this.selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  this.selected  =  optionMap.get(this.selected);  }	  return    this.selected;    this.selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	69	None	replace
90	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  else  {  this.selected  =  optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  else  {  this.selected  =  optionMap.get(this.selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  }  else  {  this.selected  =  optionMap.get(this.selected);  }	  return    this.selected;    this.selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	69	None	replace
91	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( " "))  {  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( " "))  {  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.equals( " "))  {  selected  =  this.optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	20	None	replace
92	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]                NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  this.optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	20	None	replace
93	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.length()  ==  0)  {  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]                  NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.length()  ==  0)  {  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  if(selected.length()  ==  0)  {  selected  =  this.optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	20	None	replace
94	[BUG]  [BUGGY]  return  this.optionMap.toString();  this.optionMap.toString();  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  this.optionMap.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    this.optionMap.toString();	  	non-compiled	[CE]  unreachable  statement	59	None	add
95	[BUG]  [BUGGY]  return  this.optionMap.toString();  String  selected  =(String)this.optionMap.get(selected);  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  String  selected  =(String)this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    String  selected  =(String)this.optionMap.get(selected);	  	non-compiled	[CE]  unreachable  statement	59	None	add
96	[BUG]  [BUGGY]  return  this.optionMap.toString();  String  selected  =  this.optionMap.get(selected);  [CE]  incompatible  types  [FE]        junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  String  selected  =  this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    String  selected  =  this.optionMap.get(selected);	  	non-compiled	[CE]  incompatible  types	59	None	add
97	[BUG]  [BUGGY]  return  this.optionMap.toString();  String  selected  =  this.optionMap.toString();  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  String  selected  =  this.optionMap.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    String  selected  =  this.optionMap.toString();	  	non-compiled	[CE]  unreachable  statement	59	None	add
98	[BUG]  [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected  ==  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected  ==  null)  {  return  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
99	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected  /  1);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected  /  1);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected  /  1);	  String    selected    =(String)optionMap.get(this.selected    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	40	None	replace
100	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected  *  1);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected  *  1);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected  *  1);	  String    selected    =(String)optionMap.get(this.selected    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	74	None	replace
101	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected  *  this.selected  -  1);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected  *  this.selected  -  1);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected  *  this.selected  -  1);	  String    selected    =(String)optionMap.get(this.selected    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	74	None	replace
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  ComparisonFailure  	4	6	add
103	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  ComparisonFailure  	4	6	add
104	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	4	6	add
105	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [FE]  StackOverflowError  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	4	6	add
106	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	4	6	add
107	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [FE]  StackOverflowError  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	compilable	  [FE]  StackOverflowError  	4	6	add
108	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  >=  null)  {  selected  =  getSelected();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  >=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  >=  null)  {  selected  =  getSelected();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	4	None	add
109	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  this  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]            ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  this  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  this  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	4	None	add
110	[BUG]  [BUGGY]  return  optionMap.select(selected);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.select(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  optionMap.select(selected);	  return    this.optionMap.select(selected);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
111	[BUG]  [BUGGY]  String  selected  =  this.optionMap.select(selected);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.select(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.select(selected);	  return    this.optionMap.select(selected);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
112	[BUG]  [BUGGY]  return  this.optionMap.select(this.selected);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.select(this.selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap.select(this.selected);	  return    this.optionMap.select(selected);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
113	[BUG]  [BUGGY]  String  selected  =  this.optionMap.get(this.selected.toString());  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.get(this.selected.toString());  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.get(this.selected.toString());	  String    selected    =    this.optionMap.get(selected.toString());    	non-compiled	[CE]  incompatible  types	51	None	replace
114	[BUG]  [BUGGY]  String  selected  =  this.optionMap.get(selected.toString(),  true);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.get(selected.toString(),  true);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.get(selected.toString(),  true);	  String    selected    =    this.optionMap.get(selected.toString());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	51	None	replace
115	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(option);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(option);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(option);	  String    selected    =(String)optionMap.get(option);    	non-compiled	[CE]  cannot  find  symbol  option	72	None	replace
116	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  return  this.selected;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)  {  return  this.selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	79	None	replace
117	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  return  selected;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	79	None	replace
118	[BUG]  [BUGGY]  String  selected  =  this.optionMap.selection;  [CE]  cannot  find  symbol  selection  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.selection;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.selection;	  return    this.optionMap.selection;    	non-compiled	[CE]  cannot  find  symbol  selection	41	None	replace
119	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    chosen    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	23	None	add
120	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    chosen    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	23	None	add
121	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [CE]  variable  chosen  is  already  defined  in  method  getSelected()  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    chosen    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  chosen  is  already  defined  in  method  getSelected()	23	None	add
122	[BUG]  [BUGGY]  String  selected  =  this.selected;  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.selected;	  return    this.selected;    this.selected;    	non-compiled	[CE]  missing  return  statement	30	None	replace
123	[BUG]  [BUGGY]  this.selected;  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected;	  return    this.selected;    this.selected;    	non-compiled	[CE]  not  a  statement	30	None	replace
124	[BUG]  [BUGGY]  this.selected  =  null;  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected  =  null;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected  =  null;	  return    this.selected;    this.selected;    	non-compiled	[CE]  missing  return  statement	30	None	replace
125	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(selected);  }	  return    this.selected;    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	34	None	replace
126	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  if(selected!=  null)  {  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  if(selected!=  null)  {  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  }  if(selected!=  null)  {  selected  =  this.optionMap.get(selected);  }	  return    this.selected;    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	34	None	replace
127	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  else  {  String  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  }  else  {  String  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  }  else  {  String  selected  =  this.optionMap.get(selected);  }	  return    this.selected;    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	34	None	replace
128	[BUG]  [BUGGY]  if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  this.selected;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  this.selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    this.selected;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
129	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  if(this.selected!=  null)  {  return  this.selected;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)  {  if(this.selected!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)  {  if(this.selected!=  null)  {  return  this.selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    this.selected;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
130	[BUG]  [BUGGY]  if(this.selected!=  null)  {  if(this.selected  ==  null)  {  return  this.selected;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  if(this.selected  ==  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  if(this.selected  ==  null)  {  return  this.selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    this.selected;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
131	[BUG]  [BUGGY]  String  selected  =(String)this.selected.get(optionMap).toLowerCase();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.selected.get(optionMap).toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.selected.get(optionMap).toLowerCase();	  String    selected    =(String)optionMap.get(this.selected).toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
132	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(selected).toLowerCase();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(selected).toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(selected).toLowerCase();	  String    selected    =(String)optionMap.get(this.selected).toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
133	[BUG]  [BUGGY]  String  selected  =(String)this.selected.get(0).toLowerCase();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.selected.get(0).toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.selected.get(0).toLowerCase();	  String    selected    =(String)optionMap.get(this.selected).toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
134	[BUG]  [BUGGY]  String  selected  =  this.optionMap.select;  [CE]  cannot  find  symbol  select  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.select;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.select;	  return    this.optionMap.select;    	non-compiled	[CE]  cannot  find  symbol  select	66	None	replace
135	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(selected,  required);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(selected,  required);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(selected,  required);	  String    selected    =(String)optionMap.get(required);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	42	None	replace
136	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(selectedItem);  [CE]  cannot  find  symbol  selectedItem  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(selectedItem);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(selectedItem);	  String    selected    =(String)optionMap.get(required);    	non-compiled	[CE]  cannot  find  symbol  selectedItem	42	None	replace
137	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(optionName);  [CE]  cannot  find  symbol  optionName  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(optionName);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(optionName);	  String    selected    =(String)optionMap.get(optionName);    	non-compiled	[CE]  cannot  find  symbol  optionName	73	None	replace
138	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(selection);  [CE]  cannot  find  symbol  selection  [FE]        NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(selection);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(selection);	  return    selected.toString();    String    selected    =(String)this.optionMap.get(select);    	non-compiled	[CE]  cannot  find  symbol  selection	87	None	replace
139	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(select);  [CE]  cannot  find  symbol  select  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(select);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(select);	  return    selected.toString();    String    selected    =(String)this.optionMap.get(select);    	non-compiled	[CE]  cannot  find  symbol  select	87	None	replace
140	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(seelected);  [CE]  cannot  find  symbol  seelected  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(seelected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(seelected);	  return    selected.toString();    String    selected    =(String)this.optionMap.get(select);    	non-compiled	[CE]  cannot  find  symbol  seelected	87	None	replace
141	[BUG]  [BUGGY]  if(select  ==  null)  {  selected  =  getSelected();  }  [CE]  cannot  find  symbol  select  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(select  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(select  ==  null)  {  selected  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    select    =    getSelected();    }    	non-compiled	[CE]  cannot  find  symbol  select	64	None	replace
142	[BUG]  [BUGGY]  if(selected!=  null)  {  select  =  getSelected();  }  [CE]  cannot  find  symbol  select  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  select  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  select  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    select    =    getSelected();    }    	non-compiled	[CE]  cannot  find  symbol  select	64	None	replace
143	[BUG]  [BUGGY]  String  selected  =  getSelectedItem().toString();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedItem().toString();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedItem().toString();	  String    selected    =    getSelectedItem();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
144	[BUG]  [BUGGY]  String  selected  =  getSelectedText()  + "n ";  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedText()  + "n ";  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedText()  + "n ";	  String    selected    =    getSelectedText();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
145	[BUG]  [BUGGY]  String  selected  =  getSelectedText()  + ", ";  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedText()  + ", ";  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedText()  + ", ";	  String    selected    =    getSelectedText();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
146	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(this.selected);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(this.selected);	  String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  missing  return  statement	38	None	replace
147	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(required);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(required);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(required);	  String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	38	None	replace
148	[BUG]  [BUGGY]  return  optionMap.toString();  String  optionMap  =(String)optionMap.get(selected);  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  String  optionMap  =(String)optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    String  optionMap  =(String)optionMap.get(selected);	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
149	[BUG]  [BUGGY]  return  optionMap.toString();  String  optionMap  =(String)this.optionMap.get(selected);  [CE]  unreachable  statement  [FE]      junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  String  optionMap  =(String)this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    String  optionMap  =(String)this.optionMap.get(selected);	  	non-compiled	[CE]  unreachable  statement	54	None	add
150	[BUG]  [BUGGY]  return  optionMap.toString();  String  optionMap  =  getOptionMap();  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  String  optionMap  =  getOptionMap();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    String  optionMap  =  getOptionMap();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
151	[BUG]  [BUGGY]  return  optionMap.toString();  String  optionMap  =  null;  [CE]  unreachable  statement  [FE]          junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  String  optionMap  =  null;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    String  optionMap  =  null;	  	non-compiled	[CE]  unreachable  statement	54	None	add
152	[BUG]  [BUGGY]  return  optionMap.toString();  String  optionMap  =  getSelectedOptionMap();  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  String  optionMap  =  getSelectedOptionMap();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    String  optionMap  =  getSelectedOptionMap();	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
153	[BUG]  [BUGGY]  String  selected  =  getSelectedKey(optionMap);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedKey(optionMap);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedKey(optionMap);	  String    selected    =    getSelectedKey();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
154	[BUG]  [BUGGY]  String  selected  =  getSelectedKey()  + "n ";  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedKey()  + "n ";  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedKey()  + "n ";	  String    selected    =    getSelectedKey();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
155	[BUG]  [BUGGY]  if(selected  ==  null)  {  this  =  getSelected();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected  ==  null)  {  this  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected  ==  null)  {  this  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    this    =    getSelected();    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	8	None	replace
156	[BUG]  [BUGGY]  if(selected!=  null)  {  this  =  getSelected();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  this  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  this  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    this    =    getSelected();    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	8	None	replace
157	[BUG]  [BUGGY]  String  optionMap.getSelected();  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  optionMap.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  optionMap.getSelected();	  return    optionsMap.getSelected();    	non-compiled	[CE]  ';'  expected	13	None	replace
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected  ==  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return(this.selected  ==  null)?  null  :  this.selected;	  return(this.selected!=    null)?    null    :    this.selected;    	compilable	  [FE]  ComparisonFailure  	16	3	replace
159	[BUG]  [BUGGY]  return(this.selected  ==  null)?  null  :  this.selected;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected  ==  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected  ==  null)?  null  :  this.selected;	  return(this.selected!=    null)?    null    :    this.selected;    	compilable	  [FE]  ComparisonFailure  	16	3	replace
160	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected  ==  null)?  null  :  this.selected  + ", ";  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return(this.selected  ==  null)?  null  :  this.selected  + ", ";	  return(this.selected!=    null)?    null    :    this.selected;    	compilable	  [FE]  ComparisonFailure  	16	6	replace
161	[BUG]  [BUGGY]  return(this.selected  ==  null)?  null  :  this.selected  + ", ";  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected  ==  null)?  null  :  this.selected  + ", ";  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected  ==  null)?  null  :  this.selected  + ", ";	  return(this.selected!=    null)?    null    :    this.selected;    	compilable	  [FE]  ComparisonFailure  	16	6	replace
162	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  true);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  true);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.toString(),  true);	  String    selected    =    optionMap.get(selected.toString());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	35	None	replace
163	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  false);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  false);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.toString(),  false);	  String    selected    =    optionMap.get(selected.toString());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	35	None	replace
164	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  null);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  null);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.toString(),  null);	  String    selected    =    optionMap.get(selected.toString());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	35	None	replace
165	[BUG]  [BUGGY]  String  selected  =  getSelectedValue();  if(selected!=  null)  {  return  selected.toString();  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedValue();  if(selected!=  null)  {  return  selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedValue();  if(selected!=  null)  {  return  selected.toString();  }	  return    selected.toString();    String    selected    =    getSelectedValue();    if(selected!=    null)    {    return    selected.toString();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
166	[BUG]  [BUGGY]  String  selected  =  getSelectedValue();  if(selected  ==  null)  {  return  selected.toString();  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedValue();  if(selected  ==  null)  {  return  selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedValue();  if(selected  ==  null)  {  return  selected.toString();  }	  return    selected.toString();    String    selected    =    getSelectedValue();    if(selected!=    null)    {    return    selected.toString();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
167	[BUG]  [BUGGY]  String  selected  =  getSelectedValue();  if(selected!=  null)  {  return  this.selected.toString();  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedValue();  if(selected!=  null)  {  return  this.selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedValue();  if(selected!=  null)  {  return  this.selected.toString();  }	  return    selected.toString();    String    selected    =    getSelectedValue();    if(selected!=    null)    {    return    selected.toString();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
168	[BUG]  [BUGGY]  String  selected  =  getSelectedValue();  if(selected  >=  null)  {  return  selected.toString();  }  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedValue();  if(selected  >=  null)  {  return  selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedValue();  if(selected  >=  null)  {  return  selected.toString();  }	  return    selected.toString();    String    selected    =    getSelectedValue();    if(selected!=    null)    {    return    selected.toString();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
169	[BUG]  [BUGGY]  String  selected  =  this.optionGroup.getSelected();  [CE]  cannot  find  symbol  optionGroup  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionGroup.getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionGroup.getSelected();	  String    selected    =    optionsMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol  optionGroup	11	None	replace
170	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  this.selected!=  null?  this.selected  :  selected;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  this.selected!=  null?  this.selected  :  selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    this.selected!=  null?  this.selected  :  selected;	  	non-compiled	[CE]  not  a  statement	82	None	add
171	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.optionMap.get(this.selected);  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.optionMap.get(this.selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    String  selected  =  this.optionMap.get(this.selected);	  	non-compiled	[CE]  incompatible  types	82	None	add
172	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =(String)this.optionMap.get(selected);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =(String)this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    String  selected  =(String)this.optionMap.get(selected);	  	non-compiled	[CE]  unreachable  statement	82	None	add
173	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  getSelected();  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    String  selected  =  getSelected();	  	non-compiled	[CE]  unreachable  statement	82	None	add
174	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.optionMap.get(selected);  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    String  selected  =  this.optionMap.get(selected);	  	non-compiled	[CE]  incompatible  types	82	None	add
175	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  required);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  required);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.trim(),  required);	  String    selected    =    optionMap.get(selected.trim());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	37	None	replace
176	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  true);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  true);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.trim(),  true);	  String    selected    =    optionMap.get(selected.trim());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	37	None	replace
177	[BUG]  [BUGGY]  return  this.selected.getValue();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.getValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected.getValue();	  return    this.selected.toString();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
178	[BUG]  [BUGGY]  String  selected  =  this.selected.toString();  [CE]  missing  return  statement  [FE]      NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.selected.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.selected.toString();	  return    this.selected.toString();    	non-compiled	[CE]  missing  return  statement	53	None	replace
179	[BUG]  [BUGGY]  return  this.selected.getKey();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.getKey();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected.getKey();	  return    this.selected.toString();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
180	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    selection    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	25	None	add
181	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  [CE]  variable  selection  is  already  defined  in  method  getSelected()  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    selection    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selection  is  already  defined  in  method  getSelected()	25	None	add
182	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  select  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  select  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    selection    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);  String  select  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	25	None	add
183	[BUG]  [BUGGY]  return  this.options.getSelected;  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.options.getSelected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.options.getSelected;	  return    options.getSelected;    	non-compiled	[CE]  cannot  find  symbol  options	63	None	replace
184	[BUG]  [BUGGY]  if(selected!=  null)  {  selection  =  getSelected();  }  [CE]  cannot  find  symbol  selection  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  selection  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  selection  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    selection    =    getSelected();    }    	non-compiled	[CE]  cannot  find  symbol  selection	81	None	replace
185	[BUG]  [BUGGY]  if(selected  ==  null)  {  selection  =  getSelected();  }  [CE]  cannot  find  symbol  selection  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected  ==  null)  {  selection  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected  ==  null)  {  selection  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    selection    =    getSelected();    }    	non-compiled	[CE]  cannot  find  symbol  selection	81	None	replace
186	[BUG]  [BUGGY]  return  selected.getSelected();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  selected.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  selected.getSelected();	  return    options.getSelected();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
187	[BUG]  [BUGGY]  return  this.optionMap  + "=   "  +  this.selected.getSelected();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap  + "=   "  +  this.selected.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap  + "=   "  +  this.selected.getSelected();	  return    this.selected    +   "=   "    +    this.optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
188	[BUG]  [BUGGY]  return  this.optionMap.selected  + "=   "  +  this.selected.getSelected();  [CE]  cannot  find  symbol  selected  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.selected  + "=   "  +  this.selected.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap.selected  + "=   "  +  this.selected.getSelected();	  return    this.selected    +   "=   "    +    this.optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol  selected	68	None	replace
189	[BUG]  [BUGGY]  String  selected  =  nullValue();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  nullValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  nullValue();	  return    selected.toString();    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
190	[BUG]  [BUGGY]  String  selected  =  getSelectedValue().toString();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedValue().toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedValue().toString();	  return    selected.toString();    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
191	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  if(selected!=  null)  {  selected  =(String)optionMap.get(this.selected);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  if(selected!=  null)  {  selected  =(String)optionMap.get(this.selected);  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected);  if(selected!=  null)  {  selected  =(String)optionMap.get(this.selected);  }	          String    selected    =(String)optionMap.get(this.selected);    String    chosen    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  missing  return  statement	24	None	replace
192	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected).toLowerCase();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected).toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected).toLowerCase();	          String    selected    =(String)optionMap.get(this.selected);    String    chosen    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
193	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =(String)optionMap.get(selected);  }  [CE]  variable  selected  might  not  have  been  initialized  [FE]        NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =(String)optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =(String)optionMap.get(selected);  }	  return    selected.toString();    String    selected    =(String)optionMap.get(selected);    	non-compiled	[CE]  variable  selected  might  not  have  been  initialized	61	None	replace
194	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  String  selected  =(String)optionMap.get(selected);  }  [CE]  unreachable  statement  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  String  selected  =(String)optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  String  selected  =(String)optionMap.get(selected);  }	  return    selected.toString();    String    selected    =(String)optionMap.get(selected);    	non-compiled	[CE]  unreachable  statement	61	None	replace
195	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( "select. ");  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( "select. ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( "select. ");	          String    selected    =(String)optionMap.get(       "select       ");    String    selected    =(String)optionMap.get(   ".select       ");    	non-compiled	[CE]  missing  return  statement	75	None	replace
196	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(selected,  option);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(selected,  option);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(selected,  option);	  String    selected    =(String)optionMap.get(required);    	non-compiled	[CE]  cannot  find  symbol  option	42	None	replace
197	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  if(selected!=  null)  {  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  if(selected!=  null)  {  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  if(selected!=  null)  {  selected  =  this.optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	20	None	replace
198	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  if(this.selected  ==  null)  {  return  this.selected;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)  {  if(this.selected  ==  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)  {  if(this.selected  ==  null)  {  return  this.selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected    ==    null)    {    return    this.selected;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
199	[BUG]  [BUGGY]  selected  =  getSelected(0);  [CE]  method  getSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  selected  =  getSelected(0);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	selected  =  getSelected(0);	  selected    =    getSelected();    	non-compiled	[CE]  method  getSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;	56	None	replace
200	[BUG]  [BUGGY]  return  this.optionMap;  String  selected  =  this.optionMap.getSelected();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap;  String  selected  =  this.optionMap.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap;  String  selected  =  this.optionMap.getSelected();	  return    this.selected;    String    selected    =    this.optionMap.getSelected();    	non-compiled	[CE]  incompatible  types	71	None	replace
201	[BUG]  [BUGGY]  return  this.optionMap;  String  selected  =  this.selected.getSelected();  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap;  String  selected  =  this.selected.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap;  String  selected  =  this.selected.getSelected();	  return    this.selected;    String    selected    =    this.optionMap.getSelected();    	non-compiled	[CE]  incompatible  types	71	None	replace
202	[BUG]  [BUGGY]  if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
203	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  if(this.selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)  {  if(this.selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)  {  if(this.selected!=  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
204	[BUG]  [BUGGY]  if(this.selected!=  null)  {  if(this.selected  ==  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  if(this.selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  if(this.selected  ==  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return  this.selected!=  null?  this.selected  :  this.selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
206	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  this.selected;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected!=  null?  this.selected  :  this.selected;	  return    this.selected!=    null?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	83	3	replace
207	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected;  selected  =  getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected;  selected  =  getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected;  selected  =  getSelectedValue();  }	  return    this.selected;    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
208	[BUG]  [BUGGY]  if(selected!=  null)  {  return  this.selected;  String  selected  =  getSelected();  }  [CE]  unreachable  statement  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  this.selected;  String  selected  =  getSelected();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  this.selected;  String  selected  =  getSelected();  }	  return    this.selected;    String    selected    =    getSelected();    	non-compiled	[CE]  unreachable  statement	33	None	replace
209	[BUG]  [BUGGY]  if(selected  ==  null)  {  return  this.selected;  String  selected  =  getSelected();  }  [CE]  unreachable  statement  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected  ==  null)  {  return  this.selected;  String  selected  =  getSelected();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected  ==  null)  {  return  this.selected;  String  selected  =  getSelected();  }	  return    this.selected;    String    selected    =    getSelected();    	non-compiled	[CE]  unreachable  statement	33	None	replace
210	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  String  selected  =  getSelected();  }  [CE]  unreachable  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  this.selected;  String  selected  =  getSelected();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  this.selected;  String  selected  =  getSelected();  }	  return    this.selected;    String    selected    =    getSelected();    	non-compiled	[CE]  unreachable  statement	33	None	replace
211	[BUG]  [BUGGY]  return  this.optionMap;  this.selected  =  getOptionMap().get(this.selected);  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap;  this.selected  =  getOptionMap().get(this.selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap;  this.selected  =  getOptionMap().get(this.selected);	  return    this.selected;    this.selected    =    getOptionMap().get(this.optionMap);    	non-compiled	[CE]  incompatible  types	70	None	replace
212	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap  + "=   "  +  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return  this.optionMap  + "=   "  +  this.selected;	  return    this.selected    +   "=   "    +    this.optionMap.getSelected();    	compilable	  [FE]  junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar    ::  null  ]  	68	6	replace
213	[BUG]  [BUGGY]  return  this.optionMap  + "=   "  +  this.selected;  [FE]  junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap  + "=   "  +  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap  + "=   "  +  this.selected;	  return    this.selected    +   "=   "    +    this.optionMap.getSelected();    	compilable	  [FE]  junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar    ::  null  ]  	68	6	replace
214	[BUG]  [BUGGY]  return  optionMap.toString();  String  optionMap  =  OptionGroup.class.getSimpleName();  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  String  optionMap  =  OptionGroup.class.getSimpleName();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    String  optionMap  =  OptionGroup.class.getSimpleName();	  	non-compiled	[CE]  unreachable  statement	54	None	add
215	[BUG]  [BUGGY]  return  optionMap.toString();  OptionGroup  optionMap  =(OptionGroup)optionMap.get(selected);  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  OptionGroup  optionMap  =(OptionGroup)optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    OptionGroup  optionMap  =(OptionGroup)optionMap.get(selected);	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
216	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(select);  [CE]  cannot  find  symbol  select  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(select);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(select);	  String    selected    =(String)optionMap.get(key);    	non-compiled	[CE]  cannot  find  symbol  select	43	None	replace
217	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return(this.selected!=  null)?  this.selected  :  this.selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
218	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  this.selected;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=  null)?  this.selected  :  this.selected;	  return(this.selected!=    null)?    this.selected    :    selected;    	compilable	  [FE]  ComparisonFailure  	86	3	replace
219	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  selected  =  getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  selected  =  getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  selected  =  getSelectedValue();  }	  return    selected.toString();    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
220	[BUG]  [BUGGY]  return  optionMap.toString();  String  selected  =  getSelectedValue();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  String  selected  =  getSelectedValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  optionMap.toString();  String  selected  =  getSelectedValue();	  return    selected.toString();    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
221	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  getSelectedValue();  }	  return    selected.toString();    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
222	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  options);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  options);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.trim(),  options);	  String    selected    =    optionMap.get(selected.trim());    	non-compiled	[CE]  cannot  find  symbol  options	37	None	replace
223	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  null);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.trim(),  null);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.trim(),  null);	  String    selected    =    optionMap.get(selected.trim());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	37	None	replace
224	[BUG]  [BUGGY]  if(select!=  null)  {  selected  =  getSelected();  }  [CE]  cannot  find  symbol  select  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(select!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(select!=  null)  {  selected  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    select    =    getSelected();    }    	non-compiled	[CE]  cannot  find  symbol  select	64	None	replace
225	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(this.optionName);  [CE]  cannot  find  symbol  optionName  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(this.optionName);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(this.optionName);	  String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  cannot  find  symbol  optionName	38	None	replace
226	[BUG]  [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  options);  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(selected.toString(),  options);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(selected.toString(),  options);	  String    selected    =    optionMap.get(selected.toString());    	non-compiled	[CE]  cannot  find  symbol  options	35	None	replace
227	[BUG]  [BUGGY]  String  selected  =  optionMap.get(optionName.toString());  [CE]  cannot  find  symbol  optionName  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(optionName.toString());  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(optionName.toString());	  String    selected    =    optionMap.get(selected.toString());    	non-compiled	[CE]  cannot  find  symbol  optionName	35	None	replace
228	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected).toLowerCase();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected).toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected).toLowerCase();	          String    selected    =(String)optionMap.get(this.selected);    String    selection    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
229	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected  +  1);  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected  +  1);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected  +  1);	          String    selected    =(String)optionMap.get(this.selected);    String    selection    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  missing  return  statement	26	None	replace
230	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( ", ");  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( ", ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( ", ");	          String    selected    =(String)optionMap.get(       "select       ");    String    selected    =(String)optionMap.get(   ",select       ");    	non-compiled	[CE]  missing  return  statement	3	None	replace
231	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    selection    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	25	None	add
232	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    selection    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	25	None	add
233	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  selection  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    selection    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	25	None	add
234	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return(this.selected!=  null)?  this.selected  :  selected;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return(this.selected!=  null)?  this.selected  :  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return(this.selected!=  null)?  this.selected  :  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
235	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected  ==  null)  {  return(this.selected!=  null)?  this.selected  :  selected;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected  ==  null)  {  return(this.selected!=  null)?  this.selected  :  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected  ==  null)  {  return(this.selected!=  null)?  this.selected  :  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
236	[BUG]  [BUGGY]  String  selected  =  options.get(selected.toString());  [CE]  cannot  find  symbol  options  [FE]                    ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  options.get(selected.toString());  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  options.get(selected.toString());	  String    selected    =    this.optionMap.get(selected.toString());    	non-compiled	[CE]  cannot  find  symbol  options	51	None	replace
237	[BUG]  [BUGGY]  if(this.selected!=  null)  {  return  selected;  }  else  {  String  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  return  selected;  }  else  {  String  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  return  selected;  }  else  {  String  selected  =  this.optionMap.get(selected);  }	  return    this.selected;    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	34	None	replace
238	[BUG]  [BUGGY]  this.elected  =  getSelected();  [CE]  cannot  find  symbol  elected  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.elected  =  getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.elected  =  getSelected();	  elected    =    getSelected();    	non-compiled	[CE]  cannot  find  symbol  elected	58	None	replace
239	[BUG]  [BUGGY]  if(this.optionMap!=  null)  {  return  this.optionMap.getSelected();  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.optionMap!=  null)  {  return  this.optionMap.getSelected();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.optionMap!=  null)  {  return  this.optionMap.getSelected();  }	  return    this.selected;    if(this.selected!=    null)    {    if(this.selected!=    null)    {    return    this.selected;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
240	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( "selected ").toLowerCase();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( "selected ").toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( "selected ").toLowerCase();	  String    selected    =(String)optionMap.get(   "selected   ");    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
241	[BUG]  [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  this.selected.toString();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  this.selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    if(this.selected!=  null)  {  if(this.selected!=  null)  {  return  this.selected.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
242	[BUG]  [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  String  selected  =  this.selected.toString();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  String  selected  =  this.selected.toString();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    if(this.selected!=  null)  {  String  selected  =  this.selected.toString();  if(selected!=  null)  {  return  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
243	[BUG]  [BUGGY]  return  this.selected.toString();  String  selected  =  this.optionMap.get(this.selected);  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  String  selected  =  this.optionMap.get(this.selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    String  selected  =  this.optionMap.get(this.selected);	  	non-compiled	[CE]  incompatible  types	52	None	add
244	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.selected.toString();  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.selected.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    String  selected  =  this.selected.toString();	  	non-compiled	[CE]  unreachable  statement	82	None	add
245	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.selected.getValue();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  String  selected  =  this.selected.getValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    String  selected  =  this.selected.getValue();	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
246	[BUG]  [BUGGY]  if(selected!=  null)  {  return  optionMap.toString();  selected  =  optionMap.get(selected);  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  optionMap.toString();  selected  =  optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  optionMap.toString();  selected  =  optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	62	None	replace
247	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  optionMap.get(selected);  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  }  else  {  String  selected  =  optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	62	None	replace
248	[BUG]  [BUGGY]  if(selected!=  null)  {  return  optionMap.toString();  }  else  {  String  selected  =  optionMap.get(selected);  }  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  optionMap.toString();  }  else  {  String  selected  =  optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  optionMap.toString();  }  else  {  String  selected  =  optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	62	None	replace
249	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
250	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  select  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [CE]  cannot  find  symbol  select  [FE]      StackOverflowError    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected  ==  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  select  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected    ==    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  select  =  getSelected();  }  if(selected  ==  null)  {  selected  =  getSelected();  }	  	non-compiled	[CE]  cannot  find  symbol  select	6	None	add
251	[BUG]  [BUGGY]  if(selection!=  null)  {  selected  =  getSelected();  }  [CE]  cannot  find  symbol  selection  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selection!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selection!=  null)  {  selected  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=    null)    {    selection    =    getSelected();    }    	non-compiled	[CE]  cannot  find  symbol  selection	81	None	replace
252	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  return  this.selected;  this.selected  =  optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)  {  return  this.selected;  this.selected  =  optionMap.get(this.selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)  {  return  this.selected;  this.selected  =  optionMap.get(this.selected);  }	  return    this.selected;    this.selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	69	None	replace
253	[BUG]  [BUGGY]  if(this.optionMap!=  null)  {  return  selected.toString();  }  [CE]  missing  return  statement  [FE]                NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.optionMap!=  null)  {  return  selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.optionMap!=  null)  {  return  selected.toString();  }	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	21	None	replace
254	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  null  :  this.selected.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return  this.selected!=  null?  null  :  this.selected.toString();	  return    this.selected.toString();    	compilable	  [FE]  NullPointerException  	53	6	replace
255	[BUG]  [BUGGY]  return  this.selected!=  null?  null  :  this.selected.toString();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  null  :  this.selected.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected!=  null?  null  :  this.selected.toString();	  return    this.selected.toString();    	compilable	  [FE]  NullPointerException  	53	6	replace
256	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
257	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)  {  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)  {  String  selected  =  this.selected;  if(selected!=  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    String    selected    =    this.selected;    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
258	[BUG]  [BUGGY]  if(this.selected!=  null)  {  String  selected  =  this.selected;  if(selected  ==  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  String  selected  =  this.selected;  if(selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  String  selected  =  this.selected;  if(selected  ==  null)  {  return  selected;  }	  return    this.selected;    if(this.selected!=    null)    {    String    selected    =    this.selected;    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
259	[BUG]  [BUGGY]  if(this.optionMap!=  null)  {  return  this.selected;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.optionMap!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.optionMap!=  null)  {  return  this.selected;  }	  return    this.selected;    if(this.selected!=    null)    {    String    selected    =    this.selected;    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	78	None	replace
260	[BUG]  [BUGGY]  return  this.optionMap.get(selected);  [CE]  incompatible  types  [FE]        NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap.get(selected);	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	17	None	replace
261	[BUG]  [BUGGY]  String  selected  =  optionsMap.get(this.selected);  [CE]  cannot  find  symbol  optionsMap  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionsMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionsMap.get(this.selected);	  String    selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	36	None	replace
262	[BUG]  [BUGGY]  String  selected  =  this.optionMap.get(this.selected  +  1);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.get(this.selected  +  1);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.get(this.selected  +  1);	  String    selected    =    this.optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	50	None	replace
263	[BUG]  [BUGGY]  String  selected  =  getSelectedText(optionMap);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  getSelectedText(optionMap);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  getSelectedText(optionMap);	  String    selected    =    getSelectedText();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
264	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(selected).toLowerCase();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(selected).toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(selected).toLowerCase();	  String    selected    =(String)optionMap.get(this.selected).toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
265	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected),  optionMap.toLowerCase();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected),  optionMap.toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected),  optionMap.toLowerCase();	  String    selected    =(String)optionMap.get(this.selected).toLowerCase();    	non-compiled	[CE]  ';'  expected	84	None	replace
266	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected,  this.version).toLowerCase();  [CE]  cannot  find  symbol  version  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected,  this.version).toLowerCase();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected,  this.version).toLowerCase();	  String    selected    =(String)optionMap.get(this.selected).toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  version	84	None	replace
267	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  if(this.selected  ==  null)?  null  :  this.selected;  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  if(this.selected  ==  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    if(this.selected  ==  null)?  null  :  this.selected;	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
268	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  String  selected  =  this.selected.toString();  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  String  selected  =  this.selected.toString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    String  selected  =  this.selected.toString();	  	non-compiled	[CE]  unreachable  statement	15	None	add
269	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  String  selected  =  this.selected.getValue();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  String  selected  =  this.selected.getValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    String  selected  =  this.selected.getValue();	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
270	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected  =  null;  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected  =  null;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    this.selected  =  null;	  	non-compiled	[CE]  unreachable  statement	15	None	add
271	[BUG]  [BUGGY]  return  this.optionmap.getSelected;  [CE]  cannot  find  symbol  optionmap  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionmap.getSelected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionmap.getSelected;	  return    options.getSelected;    	non-compiled	[CE]  cannot  find  symbol  optionmap	63	None	replace
272	[BUG]  [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [CE]  variable  selected  is  already  defined  in  method  getSelected()  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          String    selected    =(String)optionMap.get(this.selected);    String  chosen  =(String)optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                String        selected        =(String)optionMap.get(this.selected);        String    chosen    =(String)optionMap.get(this.selected);    String  selected  =(String)optionMap.get(this.selected);	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  getSelected()	23	None	add
273	[BUG]  [BUGGY]  return  this.optionMap.toString();  String  selected  =(String)this.optionMap.get(select);  [CE]  cannot  find  symbol  select  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  String  selected  =(String)this.optionMap.get(select);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    String  selected  =(String)this.optionMap.get(select);	  	non-compiled	[CE]  cannot  find  symbol  select	59	None	add
274	[BUG]  [BUGGY]  char  selected  =  this.optionMap.get(selected);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  char  selected  =  this.optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	char  selected  =  this.optionMap.get(selected);	  return    selected.toString();    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	20	None	replace
275	[BUG]  [BUGGY]  return  optionMap.select(1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.select(1);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  optionMap.select(1);	  return    this.optionMap.select(0);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
276	[BUG]  [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  select  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [CE]  cannot  find  symbol  select  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]          if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  selected  =  getSelected();  }  if(selected!=  null)  {  select  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	                if(selected!=        null)        {        selected        =        getSelected();        }        if(selected!=    null)    {    selected    =    getSelected();    }    if(selected!=  null)  {  select  =  getSelected();  }  if(selected!=  null)  {  selected  =  getSelected();  }	  	non-compiled	[CE]  cannot  find  symbol  select	4	None	add
277	[BUG]  [BUGGY]  if(this.optionMap!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(selected);  }  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.optionMap!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.optionMap!=  null)  {  return  this.selected;  selected  =  this.optionMap.get(selected);  }	  return    this.selected;    String    selected    =    this.optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	34	None	replace
278	[BUG]  [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  selected  =(String)optionMap.get(this.selected);  }	          String    selected    =(String)optionMap.get(this.selected);    String    selected    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	22	None	replace
279	[BUG]  [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  selected  =(String)optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  selected  =(String)optionMap.get(this.selected);  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  selected  =(String)optionMap.get(this.selected);  }	          String    selected    =(String)optionMap.get(this.selected);    String    selected    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	22	None	replace
280	[BUG]  [BUGGY]  return  optionMap.get(selected);  [CE]  incompatible  types  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  optionMap.get(selected);	  return    optionMap.toString();    	non-compiled	[CE]  incompatible  types	55	None	replace
281	[BUG]  [BUGGY]  return  optionMap.get(this);  [CE]  incompatible  types  [FE]      junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.get(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  optionMap.get(this);	  return    optionMap.toString();    	non-compiled	[CE]  incompatible  types	55	None	replace
282	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(required,  optionMap.size());  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(required,  optionMap.size());  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(required,  optionMap.size());	  String    selected    =(String)optionMap.get(required);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	42	None	replace
283	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString()  + "n ";  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	add	return  this.selected.toString()  + "n ";	  return    this.selected.toString();    	compilable	  [FE]  NullPointerException  	53	6	replace
284	[BUG]  [BUGGY]  return  this.selected.toString()  + "n ";  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString()  + "n ";  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected.toString()  + "n ";	  return    this.selected.toString();    	compilable	  [FE]  NullPointerException  	53	6	replace
285	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(selection);  [CE]  cannot  find  symbol  selection  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(selection);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(selection);	  String    selected    =(String)optionMap.get(optionName);    	non-compiled	[CE]  cannot  find  symbol  selection	73	None	replace
286	[BUG]  [BUGGY]  if(this.optionMap!=  null)  {  return  this.selected.toString();  }  [CE]  missing  return  statement  [FE]                NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.optionMap!=  null)  {  return  this.selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.optionMap!=  null)  {  return  this.selected.toString();  }	  return    selected.toString();    String    selected    =(String)this.optionMap.get(selected);    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  missing  return  statement	21	None	replace
287	[BUG]  [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  chosen  =(String)optionMap.get(this.selected);  }	          String    selected    =(String)optionMap.get(this.selected);    String    chosen    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	24	None	replace
288	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  if(selected!=  null)  {  chosen  =(String)optionMap.get(this.selected);  }  [CE]  cannot  find  symbol  chosen  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected);  if(selected!=  null)  {  chosen  =(String)optionMap.get(this.selected);  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected);  if(selected!=  null)  {  chosen  =(String)optionMap.get(this.selected);  }	          String    selected    =(String)optionMap.get(this.selected);    String    chosen    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  cannot  find  symbol  chosen	24	None	replace
289	[BUG]  [BUGGY]  String  selected  =  this.optionMap.get(optionMap);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.optionMap.get(optionMap);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.optionMap.get(optionMap);	  String    selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	36	None	replace
290	[BUG]  [BUGGY]  String  selected  =  optionMap.get(this.selected,  this.optionGroup);  [CE]  cannot  find  symbol  optionGroup  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  optionMap.get(this.selected,  this.optionGroup);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  optionMap.get(this.selected,  this.optionGroup);	  String    selected    =    optionMap.get(this.selected);    	non-compiled	[CE]  cannot  find  symbol  optionGroup	36	None	replace
291	[BUG]  [BUGGY]  string  selected  =  getSelectedValue();  if(selected!=  null)  {  return  selected.toString();  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  string  selected  =  getSelectedValue();  if(selected!=  null)  {  return  selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	string  selected  =  getSelectedValue();  if(selected!=  null)  {  return  selected.toString();  }	  return    selected.toString();    String    selected    =    getSelectedValue();    if(selected!=    null)    {    return    selected.toString();    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
292	[BUG]  [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected!=  null)  {  return  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
293	[BUG]  [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  getSelected();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  getSelected();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    if(optionMap!=  null)  {  String  selected  =  getSelected();  if(selected!=  null)  {  return  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
294	[BUG]  [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected  ==  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected  ==  null)  {  return  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
295	[BUG]  [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  for(String  option  :  optionMap.keySet())  {  return  selected;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  for(String  option  :  optionMap.keySet())  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    if(optionMap!=  null)  {  for(String  option  :  optionMap.keySet())  {  return  selected;  }	  	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	54	None	add
296	[BUG]  [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected!=  null)  {  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  optionMap.toString();  if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected!=  null)  {  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    optionMap.toString();    if(optionMap!=  null)  {  String  selected  =  optionMap.toString();  if(selected!=  null)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
297	[BUG]  [BUGGY]  if(selection  ==  null)  {  selected  =  getSelected();  }  [CE]  cannot  find  symbol  selection  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selection  ==  null)  {  selected  =  getSelected();  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selection  ==  null)  {  selected  =  getSelected();  }	          if(selected!=    null)    {    selected    =    getSelected();    }    If(selected!=    null)    {    selected    =    getSelected();    }    	non-compiled	[CE]  cannot  find  symbol  selection	65	None	replace
298	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( ".select ");  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( ".select ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( ".select ");	          String    selected    =(String)optionMap.get(       "select       ");    String    selected    =(String)optionMap.get(   ".select       ");    	non-compiled	[CE]  missing  return  statement	75	None	replace
299	[BUG]  [BUGGY]  return  this.optionMap.selected;  String  selected  =  this.optionMap.getSelected();  [CE]  cannot  find  symbol  selected  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.selected;  String  selected  =  this.optionMap.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap.selected;  String  selected  =  this.optionMap.getSelected();	  return    this.selected;    String    selected    =    this.optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol  selected	71	None	replace
300	[BUG]  [BUGGY]  String  selected  =  this.options.getSelected();  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =  this.options.getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =  this.options.getSelected();	  String    selected    =    optionsMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol  options	11	None	replace
301	[BUG]  [BUGGY]  select  =  getSelected();  [CE]  cannot  find  symbol  select  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  select  =  getSelected();  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	select  =  getSelected();	  elected    =    getSelected();    	non-compiled	[CE]  cannot  find  symbol  select	58	None	replace
302	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get(this.selected  +  2);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get(this.selected  +  2);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get(this.selected  +  2);	  String    selected    =(String)optionMap.get(this.selected    +    1);    	non-compiled	[CE]  missing  return  statement	40	None	replace
303	[BUG]  [BUGGY]  if(selected!=  null)  {  return  selected.toString();  selected  =  optionMap.get(selected);  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  selected.toString();  selected  =  optionMap.get(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  selected.toString();  selected  =  optionMap.get(selected);  }	  return    selected.toString();    String    selected    =    optionMap.get(selected);    	non-compiled	[CE]  incompatible  types	62	None	replace
304	[BUG]  [BUGGY]  return  this.optionMap.select(this);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.select(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap.select(this);	  return    this.optionMap.select(selected);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
305	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected  =(this.selected!=  null)?  null  :  this.selected;  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  this.selected  =(this.selected!=  null)?  null  :  this.selected;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    this.selected  =(this.selected!=  null)?  null  :  this.selected;	  	non-compiled	[CE]  unreachable  statement	15	None	add
306	[BUG]  [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  if(this.selected!=  null)?  null  :  this.selected;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  null  :  this.selected;  if(this.selected!=  null)?  null  :  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    null    :    this.selected;    if(this.selected!=  null)?  null  :  this.selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
307	[BUG]  [BUGGY]  this.selected  =(String)this.optionMap.get(this.selected);  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected  =(String)this.optionMap.get(this.selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected  =(String)this.optionMap.get(this.selected);	  return    this.selected;    this.selected;    	non-compiled	[CE]  missing  return  statement	30	None	replace
308	[BUG]  [BUGGY]  this.selected  =  new  String(this.optionMap.size());  [CE]  no  suitable  constructor  found  for  String(int)  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected  =  new  String(this.optionMap.size());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected  =  new  String(this.optionMap.size());	  return    this.selected;    this.selected;    	non-compiled	[CE]  no  suitable  constructor  found  for  String(int)	30	None	replace
309	[BUG]  [BUGGY]  this.selected  =  String.valueOf(this.selected);  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  this.selected  =  String.valueOf(this.selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	this.selected  =  String.valueOf(this.selected);	  return    this.selected;    this.selected;    	non-compiled	[CE]  missing  return  statement	30	None	replace
310	[BUG]  [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected!=  null)  {  return  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
311	[BUG]  [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.get(selected);  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.get(selected);  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.get(selected);  if(selected!=  null)  {  return  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
312	[BUG]  [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.toString();  if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.optionMap.toString();    if(this.optionMap!=  null)  {  String  selected  =  this.optionMap.toString();  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
313	[BUG]  [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  return  this.selected.toString();  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  return  this.selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    if(this.selected!=  null)  {  return  this.selected.toString();  }	  	non-compiled	[CE]  unreachable  statement	52	None	add
314	[BUG]  [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  String  selected  =  this.selected.toString();  if(selected!=  null)  {  return  selected.toString();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected.toString();  if(this.selected!=  null)  {  String  selected  =  this.selected.toString();  if(selected!=  null)  {  return  selected.toString();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected.toString();    if(this.selected!=  null)  {  String  selected  =  this.selected.toString();  if(selected!=  null)  {  return  selected.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
315	[BUG]  [BUGGY]  return  this.optionMap.get(this);  [CE]  incompatible  types  [FE]    junit.framework.ComparisonFailure:  selected  option  expected:<[bar]>  but  was:<[{bar=[  option:  null  bar  ::  null  ]    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.get(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap.get(this);	  return    this.optionMap.toString();    	non-compiled	[CE]  incompatible  types	60	None	replace
316	[BUG]  [BUGGY]  if(selected!=  null)  {  return  this.selected;  String  selected  =  getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(selected!=  null)  {  return  this.selected;  String  selected  =  getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(selected!=  null)  {  return  this.selected;  String  selected  =  getSelectedValue();  }	  return    this.selected;    String    selected    =    getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
317	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  this.optionMap.getSelected();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  this.optionMap.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.selected!=  null?  this.selected  :  this.optionMap.getSelected();	  return    this.selected!=    null?    this.selected    :    selected;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
318	[BUG]  [BUGGY]  return  this.optionMap.keySet();  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.optionMap.keySet();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return  this.optionMap.keySet();	  return    this.optionMap.selected;    	non-compiled	[CE]  incompatible  types	14	None	replace
319	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(Selection.class);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(Selection.class);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(Selection.class);	  String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
320	[BUG]  [BUGGY]  String  selected  =(String)this.optionMap.get(this.selection);  [CE]  cannot  find  symbol  selection  [FE]          ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)this.optionMap.get(this.selection);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)this.optionMap.get(this.selection);	  String    selected    =(String)this.optionMap.get(selected);    	non-compiled	[CE]  cannot  find  symbol  selection	38	None	replace
321	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected);  if(this.selected!=  null)  {  return  this.selected;  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected);  if(this.selected!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    if(this.selected!=  null?  this.selected  :  selected);  if(this.selected!=  null)  {  return  this.selected;  }	  	non-compiled	[CE]  incompatible  types	82	None	add
322	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected);  if(this.selected!=  null?  this.selected  :  selected;  }  [CE]  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected);  if(this.selected!=  null?  this.selected  :  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    if(this.selected!=  null?  this.selected  :  selected);  if(this.selected!=  null?  this.selected  :  selected;  }	  	non-compiled	[CE]  	82	None	add
323	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected);  if(this.selected  ==  null)  {  return  this.selected;  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected);  if(this.selected  ==  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    if(this.selected!=  null?  this.selected  :  selected);  if(this.selected  ==  null)  {  return  this.selected;  }	  	non-compiled	[CE]  incompatible  types	82	None	add
324	[BUG]  [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected;  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return  this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return    this.selected!=    null?    this.selected    :    selected;    if(this.selected!=  null?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected;  }	  	non-compiled	[CE]  ')'  expected	82	None	add
325	[BUG]  [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  }  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected!=  null)  {  String  selected  =  optionMap.get(this.selected);  String  selection  =(String)optionMap.get(this.selected);  }	          String    selected    =(String)optionMap.get(this.selected);    String    selection    =(String)optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	26	None	replace
326	[BUG]  [BUGGY]  if(this.selected  ==  null)?  null  :  this.selected;  if(this.selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)?  null  :  this.selected;  if(this.selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)?  null  :  this.selected;  if(this.selected!=  null)  {  return  selected;  }	  return(this.selected!=    null)?    null    :    this.selected;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
327	[BUG]  [BUGGY]  if(this.selected  ==  null)?  null  :  this.selected;  if(this.selected!=  null)  {  return  this.selected;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  if(this.selected  ==  null)?  null  :  this.selected;  if(this.selected!=  null)  {  return  this.selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	if(this.selected  ==  null)?  null  :  this.selected;  if(this.selected!=  null)  {  return  this.selected;  }	  return(this.selected!=    null)?    null    :    this.selected;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
328	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  :  selected;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  :  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  :  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
329	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  = " ";  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  = " ";  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    if(this.selected!=  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  = " ";  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
330	[BUG]  [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected  ==  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  :  selected;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      public  String  getSelected()  {      [BUGGY]  return(this.selected!=  null)?  this.selected  :  selected;  if(this.selected  ==  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  :  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	return(this.selected!=    null)?    this.selected    :    selected;    if(this.selected  ==  null)?  this.selected  :  selected;  if(this.selected!=  null)  {  return  this.selected  :  selected;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
331	[BUG]  [BUGGY]  char  selected  =  this.optionMap.get(this.selected);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  char  selected  =  this.optionMap.get(this.selected);  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	char  selected  =  this.optionMap.get(this.selected);	  String    selected    =    this.optionMap.get(this.selected);    	non-compiled	[CE]  incompatible  types	50	None	replace
332	[BUG]  [BUGGY]  String  selected  =(String)optionMap.get( ",selected ");  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  String  getSelected()  {      [BUGGY]  String  selected  =(String)optionMap.get( ",selected ");  [BUGGY]      return  selected;  }  [CLASS]  OptionGroup  [METHOD]  getSelected  [RETURN_TYPE]  String  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	113	113	3	replace	String  selected  =(String)optionMap.get( ",selected ");	          String    selected    =(String)optionMap.get(       "select       ");    String    selected    =(String)optionMap.get(   ",select       ");    	non-compiled	[CE]  missing  return  statement	3	None	replace
