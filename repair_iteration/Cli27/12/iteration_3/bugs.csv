bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected    =    option.getKey();    this.selected  =  option.getKey();	  	compilable	  [FE]  NullPointerException  	85	9	add
2	[BUG]  [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    this.selected  =  option.getKey();	  	compilable	  [FE]  NullPointerException  	85	9	add
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
4	[BUG]  [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
5	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
6	[BUG]  [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
8	[BUG]  [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
9	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
10	[BUG]  [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    this.selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	46	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.getOption(selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.getOption(selected);	  Option    option    =    options.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	46	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(),  selected);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.getOption(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.getOption(),  selected);	  Option    option    =    options.getOption();    	non-compiled	[CE]  ';'  expected	46	None	replace
14	[BUG]  [BUGGY]  String  selected  =  this.optionMap.getSelectedString();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  this.optionMap.getSelectedString();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  this.optionMap.getSelectedString();	  String    selected    =    options.getSelectedString();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
15	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	107	None	replace
17	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  +  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  +  1);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getOpt()  +  1);	  Option    option    =    optionMap.get(selected    +    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	59	None	replace
18	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected,  selected  +  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(selected,  selected  +  1);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(selected,  selected  +  1);	  Option    option    =    optionMap.get(selected    +    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	59	None	replace
19	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  this);  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  optionMap.put(option.getKey(),  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getKey(),  this);	  Option    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	99	None	replace
20	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  options);  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  optionMap.put(option.getKey(),  options);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getKey(),  options);	  Option    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	99	None	replace
21	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	10	9	add
22	[BUG]  [BUGGY]  selected  =  option.getOpt();  selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	10	9	add
23	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
24	[BUG]  [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
25	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    if(option.getOpt()  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
26	[BUG]  [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    if(option.getOpt()  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
27	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
28	[BUG]  [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
29	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
30	[BUG]  [BUGGY]  selected  =  option.getOpt();  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
31	[BUG]  [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  OptionGroup  optionMap.put(option.getKey(),  selected);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  OptionGroup  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  OptionGroup  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    OptionGroup    optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  ';'  expected	32	None	replace
32	[BUG]  [BUGGY]  OptionGroup  optionMap.put(option.getKey(),  selected);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  optionMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  optionMap.put(option.getKey(),  selected);	          optionMap.put(option.getKey(),    selected);    OptionGroup    optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  ';'  expected	32	None	replace
33	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    OptionGroup    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	32	9	replace
34	[BUG]  [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    OptionGroup    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	32	9	replace
35	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	74	9	add
36	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	74	9	add
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	74	9	add
38	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	74	9	add
39	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	74	9	add
40	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	74	9	add
41	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get	  	non-compiled	[CE]  ';'  expected	74	None	add
42	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
43	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	61	9	add
44	[BUG]  [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	61	9	add
45	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	61	9	add
46	[BUG]  [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	61	9	add
47	[BUG]  [BUGGY]  Thread.currentThread().setContext(option);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setContext(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setContext(option);	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
48	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	Thread.currentThread().interrupt();	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	timeout	102	1	replace
49	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  timeout  [FE]      AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().interrupt();	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	timeout	102	1	replace
50	[BUG]  [BUGGY]  Thread.currentThread().setCurrentLocation(option);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setCurrentLocation(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setCurrentLocation(option);	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
51	[BUG]  [BUGGY]  Thread.currentThread().setContext(null);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setContext(null);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setContext(null);	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
52	[BUG]  [BUGGY]  safeName();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeName();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeName();	  safeTree();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
53	[BUG]  [BUGGY]  safeString();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeString();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeString();	  safeTree();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
54	[BUG]  [BUGGY]  this.selected  =  option.getSelectedIndex();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getSelectedIndex();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getSelectedIndex();	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
55	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	68	None	replace
56	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getOpt()));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]            IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getOpt()));  }	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	68	None	replace
57	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( " ");  [CE]  not  a  statement  [FE]          UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throw  new  UnsupportedOperationException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throw    new    UnsupportedOperationException(       "       ");    	non-compiled	[CE]  not  a  statement	44	None	replace
58	[BUG]  [BUGGY]  vice.setSelected(option.getOpt());  [CE]  cannot  find  symbol  vice  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice.setSelected(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice.setSelected(option.getOpt());	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  vice	40	None	replace
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	39	3	add
60	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( "   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	39	3	add
61	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	39	9	add
62	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	39	9	add
63	[BUG]  [BUGGY]  optionsMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  optionsMap  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionsMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionsMap.put(option.getKey(),  option);	          optionMap.put(option.getKey(),    option);    optionsMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	5	None	replace
64	[BUG]  [BUGGY]  if(option.getKey()!=  null)  {  optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);  }  [CE]  cannot  find  symbol  optionsMap  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getKey()!=  null)  {  optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getKey()!=  null)  {  optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionsMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	5	None	replace
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	18	9	add
66	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	18	9	add
67	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
68	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	18	9	add
69	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	18	9	add
70	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	18	9	add
71	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	18	9	add
72	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }  [CE]  cannot  find  symbol  chosen  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  chosen	18	None	add
73	[BUG]  [BUGGY]  OptionMap.put(option.getKey(),  selected);  [CE]  cannot  find  symbol  OptionMap  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionMap.put(option.getKey(),  selected);	          optionMap.put(option.getKey(),    selected);    OptionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  cannot  find  symbol  OptionMap	31	None	replace
74	[BUG]  [BUGGY]  options.put(option.getKey(),  selected);  [CE]  cannot  find  symbol  options  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  options.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	options.put(option.getKey(),  selected);	          optionMap.put(option.getKey(),    selected);    OptionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  cannot  find  symbol  options	31	None	replace
75	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  -  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  -  1);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getOpt()  -  1);	  Option    option    =    optionMap.get(selected    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	126	None	replace
76	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  *  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(selected  *  1);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(selected  *  1);	  Option    option    =    optionMap.get(selected    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	126	None	replace
77	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	93	9	add
78	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	93	9	add
79	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(option!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	93	9	add
80	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(option!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	93	9	add
81	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(option.getName()));  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(option.getName()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalStateException( " ".equals(option.getName()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
82	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(option.getOpt()));  [CE]  <identifier>  expected  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(option.getOpt()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalStateException( " ".equals(option.getOpt()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
83	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(option.getLocalName()));  [CE]  <identifier>  expected  [FE]              IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(option.getLocalName()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalStateException( " ".equals(option.getLocalName()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
84	[BUG]  [BUGGY]  safeMultiply(selected);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(selected);	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
85	[BUG]  [BUGGY]  safeMultiply(selected.getValue());  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(selected.getValue());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(selected.getValue());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
86	[BUG]  [BUGGY]  safeMultiply(option.getSelected());  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getSelected());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getSelected());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
87	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  ComparisonFailure  	49	3	add
88	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  ComparisonFailure  	49	3	add
89	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(selected  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	49	9	add
90	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [FE]  UnsupportedOperationException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(selected  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	49	9	add
91	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(option.getName()));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(option.getName()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(option.getName()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
92	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(option.getClass()));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(option.getClass()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(option.getClass()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
93	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(option.getLocalName()));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(option.getLocalName()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(option.getLocalName()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
94	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getOpt());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getSelectedString(option.getOpt());	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
95	[BUG]  [BUGGY]  optionMap.put(option.getName(),  options);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getName(),  options);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getName(),  options);	  optionMap.put(option.getName(),    option);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
96	[BUG]  [BUGGY]  While(required)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  While(required)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	While(required)  {  throw  new  UnsupportedOperationException( " ");  }	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	115	None	replace
97	[BUG]  [BUGGY]  While(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  While(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	While(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	115	None	replace
98	[BUG]  [BUGGY]  While(required)  {  throw  new  UnsupportedOperationException( " ".equals(option.getName()));  }  [CE]  [FE]        UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  While(required)  {  throw  new  UnsupportedOperationException( " ".equals(option.getName()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	While(required)  {  throw  new  UnsupportedOperationException( " ".equals(option.getName()));  }	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	115	None	replace
99	[BUG]  [BUGGY]  safeAdd(selected);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeAdd(selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeAdd(selected);	  safeTwin();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
100	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  null);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getKey(),  null);	  optionMap.put(option.getKey(),    this);    	compilable	  [FE]  NullPointerException  	79	9	replace
101	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  null);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getKey(),  null);	  optionMap.put(option.getKey(),    this);    	compilable	  [FE]  NullPointerException  	79	9	replace
102	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  selected));  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  optionMap.put(option.getKey(),  selected));  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getKey(),  selected));	  Option    optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  ';'  expected	87	None	replace
103	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	114	6	add
104	[BUG]  [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	114	6	add
105	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getOpt(),  selected);	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	60	None	replace
106	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.getOpt());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(selected.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(selected.getOpt());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	60	None	replace
107	[BUG]  [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  Option  optionMap.put(option.getKey(),  selected);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  Option  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  Option  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    Option    optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  ';'  expected	30	None	replace
108	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setSelected(option);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().getContextClassLoader().setSelected(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().getContextClassLoader().setSelected(option);	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
109	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setSelected(option.getOpt());  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().getContextClassLoader().setSelected(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().getContextClassLoader().setSelected(option.getOpt());	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
110	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().removeChild(selected);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().getContextClassLoader().removeChild(selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().getContextClassLoader().removeChild(selected);	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
111	[BUG]  [BUGGY]  Thread.currentThread().setCurrentLocation(option.getOpt());  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setCurrentLocation(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setCurrentLocation(option.getOpt());	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
112	[BUG]  [BUGGY]  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
113	[BUG]  [BUGGY]  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
114	[BUG]  [BUGGY]  Aleger  <  N>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <  N>  selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <  N>  selected  =  option.getOpt();	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    chosen    =    option.getOpt();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
115	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	117	9	add
116	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	117	9	add
117	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	117	9	add
118	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	117	9	add
119	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selection  =  option.getOpt();  }  [CE]  cannot  find  symbol  selection  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selection  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selection  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  selection	117	None	add
120	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  chosen  =  option.getOpt();  }  [CE]  cannot  find  symbol  chosen  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  chosen  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  chosen  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  chosen	117	None	add
121	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  selected,  required);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  option.getOption(),  selected,  required);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption(),  selected,  required);	  Option    option    =    option.getOption(),    selected);    	non-compiled	[CE]  ';'  expected	48	None	replace
122	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  selected,  this);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  option.getOption(),  selected,  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption(),  selected,  this);	  Option    option    =    option.getOption(),    selected);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
123	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  this);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  option.getOption(),  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption(),  this);	  Option    option    =    option.getOption(),    selected);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
124	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()!=  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
125	[BUG]  [BUGGY]  if(option  ==  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
126	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(       "       ");    	compilable	  [FE]  UnsupportedOperationException  	43	9	replace
127	[BUG]  [BUGGY]  if(selected  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(       "       ");    	compilable	  [FE]  UnsupportedOperationException  	43	9	replace
128	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getSelected();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <?>  selected  =  option.getSelected();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <?>  selected  =  option.getSelected();	  Aleger    <?>    selected    =    option.getOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
129	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getKey();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <?>  selected  =  option.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <?>  selected  =  option.getKey();	  Aleger    <?>    selected    =    option.getOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
130	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getSelectedOption();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <?>  selected  =  option.getSelectedOption();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <?>  selected  =  option.getSelectedOption();	  Aleger    <?>    selected    =    option.getOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }	  	compilable	  [FE]  AssertionFailedError  	101	9	add
132	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }	  	compilable	  [FE]  AssertionFailedError  	101	9	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(option!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(option!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }	  	compilable	  [FE]  AssertionFailedError  	101	9	add
134	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(option!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(option!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(option!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }	  	compilable	  [FE]  AssertionFailedError  	101	9	add
135	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "null ";  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getText()  + "null ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + "null ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
136	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "   ";  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getText()  + "   ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + "   ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
137	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "  - ";  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getText()  + "  - ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + "  - ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
138	[BUG]  [BUGGY]  this.selected  =  Option.getOpt();  [CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  Option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  Option.getOpt();	          this.selected    =    option.getOpt();    this.selected    =    Option.getOpt();    	non-compiled	[CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context	120	None	replace
139	[BUG]  [BUGGY]  this.selected  =  options.getOpt();  [CE]  cannot  find  symbol  options  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  options.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  options.getOpt();	          this.selected    =    option.getOpt();    this.selected    =    Option.getOpt();    	non-compiled	[CE]  cannot  find  symbol  options	120	None	replace
140	[BUG]  [BUGGY]  Aleger  <  K,  V>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <  K,  V>  selected  =  option.getOpt();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <  K,  V>  selected  =  option.getOpt();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
141	[BUG]  [BUGGY]  Aleger  <  K,  V>  selected  =  option.getSelected();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <  K,  V>  selected  =  option.getSelected();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <  K,  V>  selected  =  option.getSelected();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
142	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getOption();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <?>  selected  =  option.getOption();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <?>  selected  =  option.getOption();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
143	[BUG]  [BUGGY]  selected  =  option.getSelected();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getSelected();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected  =  option.getSelected();	  selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
144	[BUG]  [BUGGY]  selected  =  option.getName();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getName();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected  =  option.getName();	  selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
145	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected  =  option.getKey();	  selected    =    option.getOpt();    	compilable	  [FE]  NullPointerException  	11	9	replace
146	[BUG]  [BUGGY]  selected  =  option.getKey();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected  =  option.getKey();	  selected    =    option.getOpt();    	compilable	  [FE]  NullPointerException  	11	9	replace
147	[BUG]  [BUGGY]  String  selected  =  optionMap.getText(option.getOpt());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.getText(option.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getText(option.getOpt());	  String    selected    =    optionMap.getText();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
148	[BUG]  [BUGGY]  String  selected  =  optionMap.getText(option.getName());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.getText(option.getName());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getText(option.getName());	  String    selected    =    optionMap.getText();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
149	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedValue();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.getSelectedValue();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getSelectedValue();	  String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
150	[BUG]  [BUGGY]  String  selected  =  options.getSelectedValue();  [CE]  cannot  find  symbol  options  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  options.getSelectedValue();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  options.getSelectedValue();	  String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol  options	25	None	replace
151	[BUG]  [BUGGY]  String  selected  =  option.getSelectedKey();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getSelectedKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getSelectedKey();	  String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
152	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalStateException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	compilable	  [FE]  NullPointerException  	58	9	replace
153	[BUG]  [BUGGY]  new  IllegalStateException( " ");  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalStateException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	compilable	  [FE]  NullPointerException  	58	9	replace
154	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	compilable	  [FE]  IllegalStateException  	58	9	replace
155	[BUG]  [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	compilable	  [FE]  IllegalStateException  	58	9	replace
156	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ".equals(option.getOpt()));  }  [CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)  [FE]                IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ".equals(option.getOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  IllegalStateException( " ".equals(option.getOpt()));  }	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)	58	None	replace
157	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	103	9	add
158	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	103	9	add
159	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	103	9	add
160	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	103	9	add
161	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
162	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
163	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
164	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  NullPointerException  [FE]          UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
165	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option.getOpt()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
166	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]            UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
167	[BUG]  [BUGGY]  Thread.currentThread().setCurrentLocation(selected);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setCurrentLocation(selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setCurrentLocation(selected);	  if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
168	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	70	9	add
169	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	70	9	add
170	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	70	9	add
171	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	70	9	add
172	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  This.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [CE]  cannot  find  symbol  This  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  This.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    This.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	non-compiled	[CE]  cannot  find  symbol  This	70	None	add
173	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  Option.getOpt();  this.selected  =  option.getOpt();  [CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  Option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  Option.getOpt();  this.selected  =  option.getOpt();	  	non-compiled	[CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context	70	None	add
174	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionFailedError      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  AlreadySelectedException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	new  AlreadySelectedException( " ");	  throw    new    AlreadySelectedException(       "       ");    new    AlreadySelectedException(       "       ");    	compilable	  [FE]  NullPointerException  	108	9	replace
175	[BUG]  [BUGGY]  new  AlreadySelectedException( " ");  [FE]  NullPointerException  [FE]        AssertionFailedError      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  AlreadySelectedException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  AlreadySelectedException( " ");	  throw    new    AlreadySelectedException(       "       ");    new    AlreadySelectedException(       "       ");    	compilable	  [FE]  NullPointerException  	108	9	replace
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(       "       ");    new    AlreadySelectedException(       "       ");    	compilable	  [FE]  AssertionFailedError  	108	9	replace
177	[BUG]  [BUGGY]  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(       "       ");    new    AlreadySelectedException(       "       ");    	compilable	  [FE]  AssertionFailedError  	108	9	replace
178	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOption(),  selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getOption(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getOption(),  selected);	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	112	None	replace
179	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.getOption());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(selected.getOption());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(selected.getOption());	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	112	None	replace
180	[BUG]  [BUGGY]  Option  option  =  options.get(option.getOption());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.get(option.getOption());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.get(option.getOption());	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	112	None	replace
181	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	75	9	replace
182	[BUG]  [BUGGY]  if(selected!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	75	9	replace
183	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	75	9	replace
184	[BUG]  [BUGGY]  if(selected  ==  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	75	9	replace
185	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  this);  optionMap.put(option.getKey(),  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getKey(),    this);    optionMap.put(option.getKey(),  this);	  	compilable	  [FE]  NullPointerException  	78	9	add
186	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  this);  optionMap.put(option.getKey(),  this);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  this);  optionMap.put(option.getKey(),  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getKey(),    this);    optionMap.put(option.getKey(),  this);	  	compilable	  [FE]  NullPointerException  	78	9	add
187	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  this);  Option  optionMap.put(option.getKey(),  this);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  this);  Option  optionMap.put(option.getKey(),  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getKey(),    this);    Option  optionMap.put(option.getKey(),  this);	  	non-compiled	[CE]  ';'  expected	78	None	add
188	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  this);  OptionMap.put(option.getKey(),  this);  [CE]  cannot  find  symbol  OptionMap  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  this);  OptionMap.put(option.getKey(),  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getKey(),    this);    OptionMap.put(option.getKey(),  this);	  	non-compiled	[CE]  cannot  find  symbol  OptionMap	78	None	add
189	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  this);  OptionGroup  optionMap  =  optionMap.get(option.getKey());  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  this);  OptionGroup  optionMap  =  optionMap.get(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getKey(),    this);    OptionGroup  optionMap  =  optionMap.get(option.getKey());	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
190	[BUG]  [BUGGY]  this.selected  =  optionMap.getSelectedValue();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  optionMap.getSelectedValue();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.getSelectedValue();	  this.selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
191	[BUG]  [BUGGY]  this.selected  =  options.getSelectedValue();  [CE]  cannot  find  symbol  options  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  options.getSelectedValue();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  options.getSelectedValue();	  this.selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol  options	34	None	replace
192	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
193	[BUG]  [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
194	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
195	[BUG]  [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
196	[BUG]  [BUGGY]  optionMap.put(selected.getName(),  option);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(selected.getName(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(selected.getName(),  option);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
197	[BUG]  [BUGGY]  OptionMap.put(option.getName(),  selected);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionMap.put(option.getName(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionMap.put(option.getName(),  selected);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
198	[BUG]  [BUGGY]  vice(option,  option.getOpt()).setSelected(selected);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option,  option.getOpt()).setSelected(selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option,  option.getOpt()).setSelected(selected);	  vice(option.getOpt()).setSelected(selected);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
199	[BUG]  [BUGGY]  vice(selected.getOpt()).setSelected(option);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(selected.getOpt()).setSelected(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(selected.getOpt()).setSelected(option);	  vice(option.getOpt()).setSelected(selected);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
200	[BUG]  [BUGGY]  vice(option.getOpt()).setSelected(selected,  required);  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option.getOpt()).setSelected(selected,  required);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt()).setSelected(selected,  required);	  vice(option.getOpt()).setSelected(selected);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
201	[BUG]  [BUGGY]  safeSet();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeSet();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeSet();	  safeGet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
202	[BUG]  [BUGGY]  safeAccess();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeAccess();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeAccess();	  safeGet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
203	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
204	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	118	9	replace
205	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	118	9	replace
206	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
207	[BUG]  [BUGGY]  String  selected  =  option.selectText(selected);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.selectText(selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.selectText(selected);	  String    selected    =    option.selectText();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
208	[BUG]  [BUGGY]  String  selected  =  option.selectText()  + "n ";  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.selectText()  + "n ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.selectText()  + "n ";	  String    selected    =    option.selectText();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
209	[BUG]  [BUGGY]  String  selected  =  option.selectText()  + ", ";  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.selectText()  + ", ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.selectText()  + ", ";	  String    selected    =    option.selectText();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
210	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(       "       ");    	compilable	  [FE]  NullPointerException  	56	9	replace
211	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]        IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(       "       ");    	compilable	  [FE]  NullPointerException  	56	9	replace
212	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.getOption(selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.getOption(selected);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	113	None	replace
213	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionsMap.getOption(option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionsMap.getOption(option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	113	None	replace
214	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.getOption(this.option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	113	None	replace
215	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	83	3	add
216	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	83	3	add
217	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	83	3	add
218	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	83	3	add
219	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	83	9	add
220	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	83	9	add
221	[BUG]  [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    Option    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	4	None	replace
222	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    Option    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	4	9	replace
223	[BUG]  [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    Option    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	4	9	replace
224	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	37	3	add
225	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( "   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	37	3	add
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected  ==  null)  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	37	9	add
227	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( "   ");  }  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected  ==  null)  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	37	9	add
228	[BUG]  [BUGGY]  String  selected  =  option.getSelectedText()  + "n ";  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getSelectedText()  + "n ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getSelectedText()  + "n ";	  String    selected    =    option.getSelectedText();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
229	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedText();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.getSelectedText();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getSelectedText();	  String    selected    =    option.getSelectedText();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
230	[BUG]  [BUGGY]  selected!=  null  &&  this.selected.equals(option.getSelected());  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected!=  null  &&  this.selected.equals(option.getSelected());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected!=  null  &&  this.selected.equals(option.getSelected());	  elected!=    null    &&    this.selected.equals(option.getSelected());    	non-compiled	[CE]  not  a  statement	124	None	replace
231	[BUG]  [BUGGY]  if(this.selected!=  null)  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(this.selected!=  null)  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(this.selected!=  null)  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }	  elected!=    null    &&    this.selected.equals(option.getSelected());    	non-compiled	[CE]  not  a  statement	124	None	replace
232	[BUG]  [BUGGY]  if(this.selected!=  option.getSelected())  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(this.selected!=  option.getSelected())  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(this.selected!=  option.getSelected())  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }	  elected!=    null    &&    this.selected.equals(option.getSelected());    	non-compiled	[CE]  not  a  statement	124	None	replace
233	[BUG]  [BUGGY]  this.selected  =  optionMap.getSelected(option.getOpt());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  optionMap.getSelected(option.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.getSelected(option.getOpt());	  this.selected    =    optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
234	[BUG]  [BUGGY]  this.selected  =  optionMap.getSelected(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  optionMap.getSelected(option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.getSelected(option);	  this.selected    =    optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
235	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().removeChild(option);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().getContextClassLoader().removeChild(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().getContextClassLoader().removeChild(option);	  if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
236	[BUG]  [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(option.getOpt());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  K,  V>  selected  =  optionMap.get(option.getOpt());	  if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	90	None	replace
237	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  NullPointerException  	1	9	add
238	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  NullPointerException  	1	9	add
239	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    Option  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  ';'  expected	1	None	add
240	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  options.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  options  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  options.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    options.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  cannot  find  symbol  options	1	None	add
241	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  selected);  optionMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getOpt(),    selected);    optionMap.put(option.getOpt(),  selected);	  	compilable	  [FE]  NullPointerException  	14	9	add
242	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  optionMap.put(option.getOpt(),  selected);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  selected);  optionMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),    selected);    optionMap.put(option.getOpt(),  selected);	  	compilable	  [FE]  NullPointerException  	14	9	add
243	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  Option  optionMap.put(option.getOpt(),  selected);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  selected);  Option  optionMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),    selected);    Option  optionMap.put(option.getOpt(),  selected);	  	non-compiled	[CE]  ';'  expected	14	None	add
244	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  OptionMap.put(option.getOpt(),  selected);  [CE]  cannot  find  symbol  OptionMap  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  selected);  OptionMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),    selected);    OptionMap.put(option.getOpt(),  selected);	  	non-compiled	[CE]  cannot  find  symbol  OptionMap	14	None	add
245	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  OptionGroup  optionMap.put(option.getOpt(),  selected);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  selected);  OptionGroup  optionMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),    selected);    OptionGroup  optionMap.put(option.getOpt(),  selected);	  	non-compiled	[CE]  ';'  expected	14	None	add
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  ComparisonFailure  	105	3	add
247	[BUG]  [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  ComparisonFailure  	105	3	add
248	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	105	9	add
249	[BUG]  [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	105	9	add
250	[BUG]  [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  option  =  option.getOpt();  }  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  option  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  option  =  option.getOpt();  }	  	non-compiled	[CE]  incompatible  types	105	None	add
251	[BUG]  [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selection  =  option.getOpt();  }  [CE]  cannot  find  symbol  selection  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selection  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selection  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  selection	105	None	add
252	[BUG]  [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }  [CE]  cannot  find  symbol  chosen  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  chosen  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  chosen	105	None	add
253	[BUG]  [BUGGY]  option  =  optionMap.getOption();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  option  =  optionMap.getOption();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	option  =  optionMap.getOption();	  option    =    option.getOption();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
254	[BUG]  [BUGGY]  option  =  options.getOption();  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  option  =  options.getOption();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	option  =  options.getOption();	  option    =    option.getOption();    	non-compiled	[CE]  cannot  find  symbol  options	47	None	replace
255	[BUG]  [BUGGY]  Option  option  =  options.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.get(selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.get(selected);	  Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	81	None	replace
256	[BUG]  [BUGGY]  Option  option  =  options.get(option.getOpt());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.get(option.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.get(option.getOpt());	  Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	81	None	replace
257	[BUG]  [BUGGY]  option  =  options.get(selected);  [CE]  cannot  find  symbol  options  [FE]                        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  option  =  options.get(selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	option  =  options.get(selected);	  Option    option    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol  options	81	None	replace
258	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalArgumentException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	compilable	  [FE]  NullPointerException  	69	9	replace
259	[BUG]  [BUGGY]  new  IllegalArgumentException( " ");  [FE]  NullPointerException  [FE]            IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalArgumentException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	compilable	  [FE]  NullPointerException  	69	9	replace
260	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(option.getOpt()));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]              IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalArgumentException( " ".equals(option.getOpt()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  IllegalArgumentException( " ".equals(option.getOpt()));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	69	None	replace
261	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(option.getName()));  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalArgumentException( " ".equals(option.getName()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  IllegalArgumentException( " ".equals(option.getName()));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
262	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throw  new  IllegalStateException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    Throw    new    IllegalStateException(       "       ");    	non-compiled	[CE]  not  a  statement	57	None	replace
263	[BUG]  [BUGGY]  OptionMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  OptionMap  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionMap.put(option.getKey(),  option);	          optionMap.put(option.getKey(),    option);    OptionMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol  OptionMap	3	None	replace
264	[BUG]  [BUGGY]  options.put(option.getKey(),  option);  [CE]  cannot  find  symbol  options  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  options.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	options.put(option.getKey(),  option);	          optionMap.put(option.getKey(),    option);    OptionMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol  options	3	None	replace
265	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }	  	compilable	  [FE]  IllegalStateException  	89	9	add
266	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }	  	compilable	  [FE]  IllegalStateException  	89	9	add
267	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }	  	compilable	  [FE]  IllegalStateException  	89	9	add
268	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }	  	compilable	  [FE]  IllegalStateException  	89	9	add
269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	51	3	add
270	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	51	3	add
271	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	51	3	add
272	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  ComparisonFailure  	51	3	add
273	[BUG]  [BUGGY]  selection  =  option.getOpt();  [CE]  cannot  find  symbol  selection  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selection  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selection  =  option.getOpt();	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    selection    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol  selection	21	None	replace
274	[BUG]  [BUGGY]  selected!=  null  &&  this.selected.equals(option.getLongOpt());  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected!=  null  &&  this.selected.equals(option.getLongOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected!=  null  &&  this.selected.equals(option.getLongOpt());	  elected!=    null    &&    this.selected.equals(option.getLongOpt());    	non-compiled	[CE]  not  a  statement	125	None	replace
275	[BUG]  [BUGGY]  selected!=  null  &&  this.selected.equals(option.getOpt());  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected!=  null  &&  this.selected.equals(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected!=  null  &&  this.selected.equals(option.getOpt());	  elected!=    null    &&    this.selected.equals(option.getLongOpt());    	non-compiled	[CE]  not  a  statement	125	None	replace
276	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
277	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
278	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
279	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
280	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
281	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
282	[BUG]  [BUGGY]  elected!=  null  &&  this.selected.equals(option.getSelectedIndex());  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null  &&  this.selected.equals(option.getSelectedIndex());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  this.selected.equals(option.getSelectedIndex());	  elected!=    null    &&    this.selected.equals(option.getOpt());    	non-compiled	[CE]  not  a  statement	123	None	replace
283	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  UnsupportedOperationException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    new    UnsupportedOperationException(       "       ");    	compilable	  [FE]  NullPointerException  	45	9	replace
284	[BUG]  [BUGGY]  new  UnsupportedOperationException( " ");  [FE]  NullPointerException  [FE]            UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  UnsupportedOperationException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    new    UnsupportedOperationException(       "       ");    	compilable	  [FE]  NullPointerException  	45	9	replace
285	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionsMap.get(selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionsMap.get(selected);	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	80	None	replace
286	[BUG]  [BUGGY]  Option  option  =  this.optionMap.get(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  this.optionMap.get(option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  this.optionMap.get(option);	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	80	None	replace
287	[BUG]  [BUGGY]  option  =  optionsMap.get(selected);  [CE]  cannot  find  symbol  optionsMap  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  option  =  optionsMap.get(selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	option  =  optionsMap.get(selected);	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	80	None	replace
288	[BUG]  [BUGGY]  selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  elected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	122	None	replace
289	[BUG]  [BUGGY]  selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  elected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	122	None	replace
290	[BUG]  [BUGGY]  this.elected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.elected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.elected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  elected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	122	None	replace
291	[BUG]  [BUGGY]  gewählt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  gewählt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	gewählt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  elected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	122	None	replace
292	[BUG]  [BUGGY]  this.selected  =  options.getName();  [CE]  cannot  find  symbol  options  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  options.getName();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  options.getName();	  this.selected    =    option.getName();    	non-compiled	[CE]  cannot  find  symbol  options	33	None	replace
293	[BUG]  [BUGGY]  this.selected  =  option.getName()  + ": ";  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getName()  + ": ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getName()  + ": ";	  this.selected    =    option.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
294	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  AlreadySelectedException(this,  option));  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setContext(new  AlreadySelectedException(this,  option));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setContext(new  AlreadySelectedException(this,  option));	  if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
295	[BUG]  [BUGGY]  vice(option,  option.getOpt());  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option,  option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option,  option.getOpt());	  vice(option.getOpt());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
296	[BUG]  [BUGGY]  vice(selected.getOpt());  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(selected.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(selected.getOpt());	  vice(option.getOpt());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
297	[BUG]  [BUGGY]  optionMap.put(option.getLowerCase(),  selected);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getLowerCase(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getLowerCase(),  selected);	  optionMap.put(option.getOpt(),    selected);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
298	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
299	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
300	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
301	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
302	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
303	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
304	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
305	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
306	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	16	9	add
307	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	72	9	add
308	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	72	9	add
309	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	72	9	add
310	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	72	9	add
311	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	72	9	add
312	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	72	9	add
313	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
314	[BUG]  [BUGGY]  This.selected  =  option.getOpt();  [CE]  cannot  find  symbol  This  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  This.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	This.selected  =  option.getOpt();	          this.selected    =    option.getOpt();    This.selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol  This	119	None	replace
315	[BUG]  [BUGGY]  String  selected  =  option.getText()  + ",: ";  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getText()  + ",: ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + ",: ";	  String    selected    =    option.getText()    +   ":   ";    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
316	[BUG]  [BUGGY]  String  selected  =  option.getText()  + ".: ";  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getText()  + ".: ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + ".: ";	  String    selected    =    option.getText()    +   ":   ";    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
317	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
318	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
319	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getValue();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected  =  option.getValue();	  this.selected    =    option.getKey();    	compilable	  [FE]  NullPointerException  	86	9	replace
320	[BUG]  [BUGGY]  this.selected  =  option.getValue();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getValue();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getValue();	  this.selected    =    option.getKey();    	compilable	  [FE]  NullPointerException  	86	9	replace
321	[BUG]  [BUGGY]  selector  =  option.getOpt();  [CE]  cannot  find  symbol  selector  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selector  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selector  =  option.getOpt();	  elected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol  selector	12	None	replace
322	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
323	[BUG]  [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
324	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
325	[BUG]  [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	91	3	add
327	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( "   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	91	3	add
328	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	91	9	add
329	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	91	9	add
330	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	compilable	  [FE]  NullPointerException  	42	9	replace
331	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	compilable	  [FE]  NullPointerException  	42	9	replace
332	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	compilable	  [FE]  IllegalStateException  	42	9	replace
333	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	compilable	  [FE]  IllegalStateException  	42	9	replace
334	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ").getMessage());  }  [CE]  [FE]                IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ").getMessage());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ").getMessage());  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  	42	None	replace
335	[BUG]  [BUGGY]  optionsMap.put(option.getKey(),  selected);  [CE]  cannot  find  symbol  optionsMap  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionsMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionsMap.put(option.getKey(),  selected);	          optionMap.put(option.getKey(),    selected);    optionsMap.put(option.getKey(),    selected);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	98	None	replace
336	[BUG]  [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionsMap.put(option.getKey(),  selected);  }  [CE]  cannot  find  symbol  optionsMap  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionsMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  optionsMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionsMap.put(option.getKey(),    selected);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	98	None	replace
337	[BUG]  [BUGGY]  Throw  new  AlreadySelectedException( " ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throw  new  AlreadySelectedException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throw  new  AlreadySelectedException( " ");	  throw    new    AlreadySelectedException(       "       ");    Throw    new    AlreadySelectedException(       "       ");    	non-compiled	[CE]  not  a  statement	36	None	replace
338	[BUG]  [BUGGY]  selected  =  option;  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected  =  option;	  elected    =    null;    	non-compiled	[CE]  incompatible  types	7	None	replace
339	[BUG]  [BUGGY]  this.elected  =  null;  [CE]  cannot  find  symbol  elected  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.elected  =  null;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.elected  =  null;	  elected    =    null;    	non-compiled	[CE]  cannot  find  symbol  elected	7	None	replace
340	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException(   "   ");  }  if(!required)  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    if(!required)  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  AlreadySelectedException  	110	6	add
341	[BUG]  [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException(   "   ");  }  if(!required)  {  throw  new  AlreadySelectedException( "   ");  }  [FE]  AlreadySelectedException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException(   "   ");  }  if(!required)  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    if(!required)  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  AlreadySelectedException  	110	6	add
342	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException(   "   ");  }  if(!required)  {  throw  new  AlreadySelectedException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    if(!required)  {  throw  new  AlreadySelectedException( ".   ");  }	  	compilable	  [FE]  AlreadySelectedException  	110	6	add
343	[BUG]  [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException(   "   ");  }  if(!required)  {  throw  new  AlreadySelectedException( ".   ");  }  [FE]  AlreadySelectedException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException(   "   ");  }  if(!required)  {  throw  new  AlreadySelectedException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    if(!required)  {  throw  new  AlreadySelectedException( ".   ");  }	  	compilable	  [FE]  AlreadySelectedException  	110	6	add
344	[BUG]  [BUGGY]  vice(selected.getOpt(),  option);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(selected.getOpt(),  option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(selected.getOpt(),  option);	  vice(option.getOpt(),    selected);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
345	[BUG]  [BUGGY]  vice(option,  option.getOpt(),  selected);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option,  option.getOpt(),  selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option,  option.getOpt(),  selected);	  vice(option.getOpt(),    selected);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
346	[BUG]  [BUGGY]  vice(option.getOpt(),  selected));  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option.getOpt(),  selected));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt(),  selected));	  vice(option.getOpt(),    selected);    	non-compiled	[CE]  ';'  expected	8	None	replace
347	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  required);  [CE]  method  put  in  interface  Map  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  required);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),  required);	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  method  put  in  interface  Map  cannot  be  applied  to  given  types;	111	None	replace
348	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  null);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getOpt(),  null);	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	  [FE]  NullPointerException  	111	9	replace
349	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  null);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  null);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),  null);	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	  [FE]  NullPointerException  	111	9	replace
350	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                optionMap.put(option.getKey(),        selected);        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);	  	compilable	  [FE]  NullPointerException  	28	9	add
351	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        selected);        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);	  	compilable	  [FE]  NullPointerException  	28	9	add
352	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  Option  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  Option  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        selected);        optionMap.put(option.getKey(),    selected);    Option  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);	  	non-compiled	[CE]  ';'  expected	28	None	add
353	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
354	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  selection  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  selection	18	None	add
355	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getOpt(),  option);	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	  [FE]  NullPointerException  	102	9	replace
356	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  option);  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),  option);	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	  [FE]  NullPointerException  	102	9	replace
357	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  String>  selected  =  option.getOpt();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  String>  selected  =  option.getOpt();	  if(option    ==    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	102	None	replace
358	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
359	[BUG]  [BUGGY]  if(option!=  null)  {  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  if(selected  ==  null)  {  selected  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=    null)    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
360	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option  ==  null)  {  selected  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	19	9	replace
361	[BUG]  [BUGGY]  if(option  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  selected  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	19	9	replace
362	[BUG]  [BUGGY]  this.selected  =  optionMap.getSelected(option.getOption());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  optionMap.getSelected(option.getOption());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.getSelected(option.getOption());	  this.selected    =    optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
363	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  option  =  option.getOpt();  }  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  option  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  option  =  option.getOpt();  }	  	non-compiled	[CE]  incompatible  types	117	None	add
364	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
365	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	72	9	add
366	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	72	9	add
367	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.selected  -  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.selected  -  1);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.selected  -  1);	  Option    option    =    optionMap.get(selected    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	126	None	replace
368	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getSelected  -  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getSelected  -  1);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getSelected  -  1);	  Option    option    =    optionMap.get(selected    -    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	126	None	replace
369	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	73	9	replace
370	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	73	9	replace
371	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option  ==  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	73	9	replace
372	[BUG]  [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	73	9	replace
373	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	88	9	replace
374	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	88	9	replace
375	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeThan  <  =  false)  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	40	None	replace
376	[BUG]  [BUGGY]  safeThan  <  =  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeThan  <  =  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeThan  <  =  null)  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	40	None	replace
377	[BUG]  [BUGGY]  safeThan  <  String>empty())  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeThan  <  String>empty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeThan  <  String>empty())  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	40	None	replace
378	[BUG]  [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    Option    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	4	None	replace
379	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected    =    option.getKey();    if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
380	[BUG]  [BUGGY]  this.selected  =  option.getKey();  if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }	  	compilable	  [FE]  NullPointerException  	85	9	add
381	[BUG]  [BUGGY]  this.selected  =  option.getKey();  if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    if(option.getKey()!=  null)  {  this.selected  =  option.getKey();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	add
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(required)  {  throw  new  AlreadySelectedException( " ");  }	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	111	9	replace
383	[BUG]  [BUGGY]  if(required)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(required)  {  throw  new  AlreadySelectedException( " ");  }	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	compilable	  [FE]  AssertionFailedError  	111	9	replace
384	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  required)  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  required)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),  required)  {  throw  new  AlreadySelectedException( " ");  }	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	111	None	replace
385	[BUG]  [BUGGY]  if(required)  {  throw  new  AlreadySelectedException( " ".equals(option.getOpt()));  }  [CE]  no  suitable  constructor  found  for  AlreadySelectedException(boolean)  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  throw  new  AlreadySelectedException( " ".equals(option.getOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(required)  {  throw  new  AlreadySelectedException( " ".equals(option.getOpt()));  }	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  AlreadySelectedException(boolean)	111	None	replace
386	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	83	3	add
387	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	83	3	add
388	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	83	None	add
389	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  option.getSelected();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  String>  selected  =  option.getSelected();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  String>  selected  =  option.getSelected();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
390	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  option.getOptionGroup();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  String>  selected  =  option.getOptionGroup();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  String>  selected  =  option.getOptionGroup();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
391	[BUG]  [BUGGY]  Option  optionMap.put(option.getName(),  selected);  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  optionMap.put(option.getName(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getName(),  selected);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  ';'  expected	82	None	replace
392	[BUG]  [BUGGY]  options.put(option.getName(),  selected);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  options.put(option.getName(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	options.put(option.getName(),  selected);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
393	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(required)  {  selected  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    selection    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	21	9	replace
394	[BUG]  [BUGGY]  if(required)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(required)  {  selected  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    selection    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	21	9	replace
395	[BUG]  [BUGGY]  if(selected  ==  null)  {  selection  =  option.getOpt();  }  [CE]  cannot  find  symbol  selection  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  selection  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  selection  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    selection    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol  selection	21	None	replace
396	[BUG]  [BUGGY]  vice(option.getOpt()).setSelected(selected,  option.getOpt());  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option.getOpt()).setSelected(selected,  option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt()).setSelected(selected,  option.getOpt());	  vice(option.getOpt()).setSelected(selected);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
397	[BUG]  [BUGGY]  vice(option.getOpt()),  selected.setSelected(option.getOpt());  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option.getOpt()),  selected.setSelected(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt()),  selected.setSelected(option.getOpt());	  vice(option.getOpt()).setSelected(selected);    	non-compiled	[CE]  ';'  expected	9	None	replace
398	[BUG]  [BUGGY]  vice(option.getOpt()),  option.setSelected(selected);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option.getOpt()),  option.setSelected(selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt()),  option.setSelected(selected);	  vice(option.getOpt()).setSelected(selected);    	non-compiled	[CE]  ';'  expected	9	None	replace
399	[BUG]  [BUGGY]  Option  option  =  options.getOption(this);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.getOption(this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.getOption(this);	  Option    option    =    options.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	46	None	replace
400	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	54	None	replace
401	[BUG]  [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  	54	None	replace
402	[BUG]  [BUGGY]  safeMultiply(option.getSelectedIndex(),  selected)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getSelectedIndex(),  selected)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getSelectedIndex(),  selected)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  	54	None	replace
403	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ".equals(option.getLocalTarget());  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ".equals(option.getLocalTarget());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ".equals(option.getLocalTarget());  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	54	None	replace
404	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  selected  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  option.getOption(),  selected  +  1;  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption(),  selected  +  1;	  Option    option    =    option.getOption(),    selected);    	non-compiled	[CE]  ';'  expected	48	None	replace
405	[BUG]  [BUGGY]  this.selected  =  option;  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option;	  elected    =    null;    	non-compiled	[CE]  incompatible  types	7	None	replace
406	[BUG]  [BUGGY]  this.elected  =  option;  [CE]  cannot  find  symbol  elected  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.elected  =  option;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.elected  =  option;	  elected    =    null;    	non-compiled	[CE]  cannot  find  symbol  elected	7	None	replace
407	[BUG]  [BUGGY]  selection  =  null;  [CE]  cannot  find  symbol  selection  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selection  =  null;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selection  =  null;	  elected    =    null;    	non-compiled	[CE]  cannot  find  symbol  selection	7	None	replace
408	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
409	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getOpt());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionsMap.get(option.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionsMap.get(option.getOpt());	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	80	None	replace
410	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.toString();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected  =  option.toString();	  this.selected    =    option.getName();    	compilable	  [FE]  NullPointerException  	33	9	replace
411	[BUG]  [BUGGY]  this.selected  =  option.toString();  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.toString();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.toString();	  this.selected    =    option.getName();    	compilable	  [FE]  NullPointerException  	33	9	replace
412	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException( " ".equals(option.getName()));  }  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException( " ".equals(option.getName()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  IllegalStateException( " ".equals(option.getName()));  }	  if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
413	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException( " ".equals(option.getName()));  }  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException( " ".equals(option.getName()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  throw  new  IllegalStateException( " ".equals(option.getName()));  }	  if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
414	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
415	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	74	9	add
416	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	74	9	add
417	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
418	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
419	[BUG]  [BUGGY]  selected  =  option.getOpt();  option  =  option.getOpt();  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  option  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    option  =  option.getOpt();	  	non-compiled	[CE]  incompatible  types	10	None	add
420	[BUG]  [BUGGY]  selected  =  option.getOpt();  Option  option  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  Option  option  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    Option  option  =  option.getOpt();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	10	None	add
421	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    if(option!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
422	[BUG]  [BUGGY]  selected  =  option.getOpt();  if(option!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  if(option!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    if(option!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	10	9	add
423	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    String  selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	10	9	add
424	[BUG]  [BUGGY]  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    String  selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	10	9	add
425	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  NullPointerException  	84	9	replace
426	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  NullPointerException  	84	9	replace
427	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  this);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getOpt(),  this);	  if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	compilable	  [FE]  NullPointerException  	50	9	replace
428	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  this);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  this);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),  this);	  if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	compilable	  [FE]  NullPointerException  	50	9	replace
429	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	62	None	replace
430	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt());  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeThan  <  =  false)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt());  }	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	62	None	replace
431	[BUG]  [BUGGY]  this.selected  =  option.getOpt();  Theme.selected  =  option.getOpt();  [CE]  cannot  find  symbol  Theme  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getOpt();  Theme.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getOpt();  Theme.selected  =  option.getOpt();	          this.selected    =    option.getOpt();    This.selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol  Theme	119	None	replace
432	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getName()));  }  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getName()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getName()));  }	  if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
433	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }	  if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	104	None	replace
434	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getOption());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionsMap.get(option.getOption());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionsMap.get(option.getOption());	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	112	None	replace
435	[BUG]  [BUGGY]  vice(option.getOpt(),  option);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option.getOpt(),  option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt(),  option);	  vice(option.getOpt());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
436	[BUG]  [BUGGY]  Option  option  =  options.get(option.getKey());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.get(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.get(option.getKey());	  Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	81	None	replace
437	[BUG]  [BUGGY]  Option  optionMap.put(option.getValue(),  option);  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  optionMap.put(option.getValue(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getValue(),  option);	  Option    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	99	None	replace
438	[BUG]  [BUGGY]  Option  optionMap.put(option.getName(),  option);  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  optionMap.put(option.getName(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getName(),  option);	  optionMap.put(option.getName(),    option);    	non-compiled	[CE]  ';'  expected	121	None	replace
439	[BUG]  [BUGGY]  Option  option  =  option.getOption( "selected ");  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  option.getOption( "selected ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption( "selected ");	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	115	None	replace
440	[BUG]  [BUGGY]  Option  option  =  option.getOption( "option ");  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  option.getOption( "option ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption( "option ");	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	115	None	replace
441	[BUG]  [BUGGY]  Option  option  =  option.getOption( "select ");  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]        UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  option.getOption( "select ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption( "select ");	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	115	None	replace
442	[BUG]  [BUGGY]  String  selected  =  options.getSelectedText();  [CE]  cannot  find  symbol  options  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  options.getSelectedText();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  options.getSelectedText();	  String    selected    =    option.getSelectedText();    	non-compiled	[CE]  cannot  find  symbol  options	64	None	replace
443	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " "  +  option.getMessage());  }  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " "  +  option.getMessage());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  IllegalStateException( " "  +  option.getMessage());  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
444	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ").getMessage();  }  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ").getMessage();  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  IllegalStateException( " ").getMessage();  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ".getMessage());    }    	non-compiled	[CE]  incompatible  types	42	None	replace
445	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	39	3	add
446	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( ".   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	39	3	add
447	[BUG]  [BUGGY]  String  selected  =  option.selectText(select);  [CE]  cannot  find  symbol  select  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.selectText(select);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.selectText(select);	  String    selected    =    option.selectText();    	non-compiled	[CE]  cannot  find  symbol  select	100	None	replace
448	[BUG]  [BUGGY]  String  selected  =  option.selectText(option.getName());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.selectText(option.getName());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.selectText(option.getName());	  String    selected    =    option.selectText();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
449	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=  null)  {  selected  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    option    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	20	9	replace
450	[BUG]  [BUGGY]  if(option!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  selected  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    option    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	20	9	replace
451	[BUG]  [BUGGY]  SafeTwin();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  SafeTwin();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	SafeTwin();	  safeTwin();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
452	[BUG]  [BUGGY]  safeTwin(option);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeTwin(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeTwin(option);	  safeTwin();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
453	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  selection);  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  optionMap.put(option.getKey(),  selection);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getKey(),  selection);	  Option    optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  ';'  expected	87	None	replace
454	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  <identifier>  expected	51	None	add
455	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	51	9	add
456	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	51	9	add
457	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option.getOpt()  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
458	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
459	[BUG]  [BUGGY]  safeAdd(option);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeAdd(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeAdd(option);	  safeGet();    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
460	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue()  +  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getSelectedValue()  +  1;  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getSelectedValue()  +  1;	  String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
461	[BUG]  [BUGGY]  if(option  ==  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
462	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getSelected  +  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getSelected  +  1);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getSelected  +  1);	  Option    option    =    optionMap.get(selected    +    1);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	59	None	replace
463	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	91	3	add
464	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( ".   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	91	3	add
465	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	70	9	add
466	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	70	9	add
467	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.option  =  option.getOpt();  this.selected  =  option.getOpt();  [CE]  cannot  find  symbol  option  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.option  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.option  =  option.getOpt();  this.selected  =  option.getOpt();	  	non-compiled	[CE]  cannot  find  symbol  option	70	None	add
468	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
469	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	107	None	replace
470	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException( " ".equals(option.getOpt()));  }  [CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException( " ".equals(option.getOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  IllegalStateException( " ".equals(option.getOpt()));  }	  if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)	92	None	replace
471	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
472	[BUG]  [BUGGY]  this.selected  =  option.getString();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getString();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getString();	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
473	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                optionMap.put(option.getKey(),        selected);        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);	  	compilable	  [FE]  NullPointerException  	28	9	add
474	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        selected);        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);	  	compilable	  [FE]  NullPointerException  	28	9	add
475	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
476	[BUG]  [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
477	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
478	[BUG]  [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
479	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  optionsMap.put(option.getOpt(),  selected);  [CE]  cannot  find  symbol  optionsMap  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  selected);  optionsMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),    selected);    optionsMap.put(option.getOpt(),  selected);	  	non-compiled	[CE]  cannot  find  symbol  optionsMap	14	None	add
480	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
481	[BUG]  [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
482	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  else  {  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  else  {  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
483	[BUG]  [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  else  {  optionMap.put(option.getKey(),  selected);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  else  {  optionMap.put(option.getKey(),  selected);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  optionMap.put(option.getKey(),  selected);  }  else  {  optionMap.put(option.getKey(),  selected);  }	          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),    selected);    	compilable	  [FE]  NullPointerException  	29	9	replace
484	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getSelected();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getSelected();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
485	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(optionMap.containsKey(selected))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(optionMap.containsKey(selected))  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
486	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  NullPointerException  [FE]        UnsupportedOperationException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(optionMap.containsKey(selected))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(optionMap.containsKey(selected))  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    if(option.getOpt()    ==    null)    {    throw    new    UnsupportedOperationException(       "       ");    }    	compilable	  [FE]  NullPointerException  	116	9	replace
487	[BUG]  [BUGGY]  OptionGroup  <?>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <?>  selected  =  option.getOpt();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <?>  selected  =  option.getOpt();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
488	[BUG]  [BUGGY]  OptionGroup  <  K,  V>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  K,  V>  selected  =  option.getOpt();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  K,  V>  selected  =  option.getOpt();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
489	[BUG]  [BUGGY]  OptionGroup  <  K,  V>  selected  =  option.getSelected();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  K,  V>  selected  =  option.getSelected();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  K,  V>  selected  =  option.getSelected();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
490	[BUG]  [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(selected);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(selected);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  K,  V>  selected  =  optionMap.get(selected);	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    >=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	55	None	replace
491	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option.getOpt()!=  null)  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
492	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  optionMap.put(option.getKey(),  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()!=  null)  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	2	9	replace
493	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  else  {  setSelected(option.getOpt());  }  [CE]  method  setSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  else  {  setSelected(option.getOpt());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  else  {  setSelected(option.getOpt());  }	  throw    new    AlreadySelectedException(       "       ");    new    AlreadySelectedException(       "       ");    	non-compiled	[CE]  method  setSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;	108	None	replace
494	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getLongOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getLongOpt(),  selected);	  optionMap.put(option.getOpt(),    selected);    	compilable	  [FE]  NullPointerException  	15	9	replace
495	[BUG]  [BUGGY]  optionMap.put(option.getLongOpt(),  selected);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getLongOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getLongOpt(),  selected);	  optionMap.put(option.getOpt(),    selected);    	compilable	  [FE]  NullPointerException  	15	9	replace
496	[BUG]  [BUGGY]  optionMap.put(option.getLocation(),  selected);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getLocation(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getLocation(),  selected);	  optionMap.put(option.getOpt(),    selected);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
497	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  IllegalArgumentException  	61	9	add
498	[BUG]  [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  IllegalArgumentException  	61	9	add
499	[BUG]  [BUGGY]  elected!=  null  &&  option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null  &&  option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  option.getOpt()!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
500	[BUG]  [BUGGY]  elected!=  null  &&  this.selected.equals(option.getOpt()))  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null  &&  this.selected.equals(option.getOpt()))  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  this.selected.equals(option.getOpt()))  {  throw  new  UnsupportedOperationException( " ");  }	  if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
501	[BUG]  [BUGGY]  elected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  not  a  statement	50	None	replace
502	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	37	3	add
503	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( ",   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	37	3	add
504	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	37	3	add
505	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( ".   ");  }  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	37	3	add
506	[BUG]  [BUGGY]  OptionGroup  optionMap  =  option.getOptionMap();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  optionMap  =  option.getOptionMap();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  optionMap  =  option.getOptionMap();	          optionMap.put(option.getKey(),    selected);    OptionGroup    optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
507	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  options.getOpt();  this.selected  =  option.getOpt();  [CE]  cannot  find  symbol  options  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  options.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  options.getOpt();  this.selected  =  option.getOpt();	  	non-compiled	[CE]  cannot  find  symbol  options	70	None	add
508	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getValue();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <?>  selected  =  option.getValue();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <?>  selected  =  option.getValue();	  Aleger    <?>    selected    =    option.getOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
509	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getName());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getName());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getSelectedString(option.getName());	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
510	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getKey());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getSelectedString(option.getKey());	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
511	[BUG]  [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  this  =  option.getOpt();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  this  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  this  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	105	None	add
512	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "no-selected ";  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  option.getText()  + "no-selected ";  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + "no-selected ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
513	[BUG]  [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(option);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  K,  V>  selected  =  optionMap.get(option);	  if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	90	None	replace
514	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  [Delete]  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	[Delete]	  if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
515	[BUG]  [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(option.getKey());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(option.getKey());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	OptionGroup  <  K,  V>  selected  =  optionMap.get(option.getKey());	  if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	90	None	replace
516	[BUG]  [BUGGY]  if(selected  ==  null)  {  chosen  =  option.getOpt();  }  [CE]  cannot  find  symbol  chosen  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  chosen  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  chosen  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    chosen    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol  chosen	22	None	replace
517	[BUG]  [BUGGY]  Aleger  <  N,  V>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Aleger  <  N,  V>  selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <  N,  V>  selected  =  option.getOpt();	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    chosen    =    option.getOpt();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
518	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get	  	non-compiled	[CE]  ';'  expected	72	None	add
519	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.get	  	non-compiled	[CE]  ';'  expected	72	None	add
520	[BUG]  [BUGGY]  Option  <?>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  <?>  selected  =  option.getOpt();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  <?>  selected  =  option.getOpt();	  if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	104	None	replace
521	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	118	9	replace
522	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	118	9	replace
523	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.getOptionMap();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.getOptionMap();	  Option    option    =    options.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	46	None	replace
524	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getKey());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getKey());	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	112	None	replace
525	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  IllegalStateException  	89	9	add
526	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException( ".   ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  IllegalStateException  	89	9	add
527	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
528	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
529	[BUG]  [BUGGY]  if(selected!=  null)  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  elected!=  null  &&  this.selected.equals(option.getSelected());  }	  elected!=    null    &&    this.selected.equals(option.getSelected());    	non-compiled	[CE]  not  a  statement	124	None	replace
530	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  OptionGroup  optionMap  =  optionMap.get(option.getOpt());  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getOpt(),  selected);  OptionGroup  optionMap  =  optionMap.get(option.getOpt());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),    selected);    OptionGroup  optionMap  =  optionMap.get(option.getOpt());	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
531	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getKey());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionsMap.get(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionsMap.get(option.getKey());	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	80	None	replace
532	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	91	3	add
533	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( ",   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(option!=  null)  {  throw  new  IllegalStateException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(option!=  null)  {  throw  new  IllegalStateException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	91	3	add
534	[BUG]  [BUGGY]  optionMap.put(option.getName(),  this);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getName(),  this);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getName(),  this);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
535	[BUG]  [BUGGY]  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	107	None	replace
536	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	compilable	  [FE]  NullPointerException  	107	9	replace
537	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	compilable	  [FE]  NullPointerException  	107	9	replace
538	[BUG]  [BUGGY]  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    System.arraycopy(optionMap,    0,    this.selected,    0,    option.getOpt());    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	107	None	replace
539	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  selection  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  selection	16	None	add
540	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.getOption();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.getOption();	  option    =    option.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	47	None	replace
541	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
542	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
543	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
544	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
545	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
546	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	53	9	add
547	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  null;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected  =  null;	  elected    =    null;    	compilable	  [FE]  NullPointerException  	7	9	replace
548	[BUG]  [BUGGY]  this.selected  =  null;  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  null;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  null;	  elected    =    null;    	compilable	  [FE]  NullPointerException  	7	9	replace
549	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  selection  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selection  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  selection	18	None	add
550	[BUG]  [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }  [CE]  cannot  find  symbol  chosen  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                if(selected        ==        null)        {        selected        =        option.getOpt();        }        if(selected!=    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  chosen  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  chosen	18	None	add
551	[BUG]  [BUGGY]  new  IllegalStateException( " ".equals(option.getOpt()));  [CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalStateException( " ".equals(option.getOpt()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  IllegalStateException( " ".equals(option.getOpt()));	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)	58	None	replace
552	[BUG]  [BUGGY]  new  IllegalStateException( " ".equals(option.getName()));  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalStateException( " ".equals(option.getName()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  IllegalStateException( " ".equals(option.getName()));	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
553	[BUG]  [BUGGY]  this.selected  =  option.getOpt();  if(this.selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getOpt();  if(this.selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getOpt();  if(this.selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
554	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option.getKey());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.getOption(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.getOption(option.getKey());	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	113	None	replace
555	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	51	9	add
556	[BUG]  [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(selected!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	51	9	add
557	[BUG]  [BUGGY]  vice(selected,  option.getOpt());  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(selected,  option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(selected,  option.getOpt());	  vice(option.getOpt());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
558	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option  ==  null)  {  throw  new  UnsupportedOperationException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(option  ==  null)  {  throw  new  UnsupportedOperationException( ",   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	93	9	add
559	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option  ==  null)  {  throw  new  UnsupportedOperationException( ",   ");  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(option  ==  null)  {  throw  new  UnsupportedOperationException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(option  ==  null)  {  throw  new  UnsupportedOperationException( ",   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	93	9	add
560	[BUG]  [BUGGY]  this.selected  =  option.getKey();  This.selected  =  option.getKey();  [CE]  cannot  find  symbol  This  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  This.selected  =  option.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    This.selected  =  option.getKey();	  	non-compiled	[CE]  cannot  find  symbol  This	85	None	add
561	[BUG]  [BUGGY]  this.selected  =  option.getKey();  this.selected  =  Option.getKey();  [CE]  non-static  method  getKey()  cannot  be  referenced  from  a  static  context  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  Option.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    this.selected  =  Option.getKey();	  	non-compiled	[CE]  non-static  method  getKey()  cannot  be  referenced  from  a  static  context	85	None	add
562	[BUG]  [BUGGY]  this.selected  =  option.getKey();  this.selected  =  options.getKey();  [CE]  cannot  find  symbol  options  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getKey();  this.selected  =  options.getKey();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected    =    option.getKey();    this.selected  =  options.getKey();	  	non-compiled	[CE]  cannot  find  symbol  options	85	None	add
563	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    Option    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	4	9	replace
564	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  optionMap.put(option.getKey(),  option);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    Option    optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	4	9	replace
565	[BUG]  [BUGGY]  if(selected  ==  null)  {  this  =  option.getOpt();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null)  {  this  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  this  =  option.getOpt();  }	          if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected    ==    null)    {    this    =    option.getOpt();    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	127	None	replace
566	[BUG]  [BUGGY]  safeMultiply(option.getOpt(),  selected)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getOpt(),  selected)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getOpt(),  selected)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
567	[BUG]  [BUGGY]  safeMultiply(option.getSelectedIndex(),  selected))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getSelectedIndex(),  selected))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getSelectedIndex(),  selected))  {  throw  new  IllegalArgumentException( " ");  }	  if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
568	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected    =    option.getOpt();    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	10	9	add
569	[BUG]  [BUGGY]  selected  =  option.getOpt();  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected    =    option.getOpt();    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	10	9	add
570	[BUG]  [BUGGY]  elected!=  null  &&  new  AlreadySelectedException( " ");  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null  &&  new  AlreadySelectedException( " ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  new  AlreadySelectedException( " ");	  if(selected!=    null)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	38	None	replace
571	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().getContextClassLoader().reset();	  if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
572	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(option);  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setContextClassLoader(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setContextClassLoader(option);	  if(option    ==    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	94	None	replace
573	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  this);  Option  optionMap  =  optionMap.get(option.getKey());  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  optionMap.put(option.getKey(),  this);  Option  optionMap  =  optionMap.get(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getKey(),    this);    Option  optionMap  =  optionMap.get(option.getKey());	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
574	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  options);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  options);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getOpt(),  options);	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	60	None	replace
575	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setContextClassLoader(this);	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	115	None	replace
576	[BUG]  [BUGGY]  Thread.currentThread().setContextClass(option.getClass());  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Thread.currentThread().setContextClass(option.getClass());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Thread.currentThread().setContextClass(option.getClass());	  if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
577	[BUG]  [BUGGY]  String  selected  =  optionMap.selectText();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  String  selected  =  optionMap.selectText();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.selectText();	  String    selected    =    option.selectText();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
578	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(!required)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(!required)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    Throw    new    IllegalStateException(       "       ");    	compilable	  [FE]  NullPointerException  	57	9	replace
579	[BUG]  [BUGGY]  if(!required)  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]          IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(!required)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(!required)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    Throw    new    IllegalStateException(       "       ");    	compilable	  [FE]  NullPointerException  	57	9	replace
580	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getLongOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected  =  option.getLongOpt();	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    	compilable	  [FE]  NullPointerException  	71	9	replace
581	[BUG]  [BUGGY]  this.selected  =  option.getLongOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getLongOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getLongOpt();	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    	compilable	  [FE]  NullPointerException  	71	9	replace
582	[BUG]  [BUGGY]  this.selected  =  optionMap.getName();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  optionMap.getName();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.getName();	  this.selected    =    option.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
583	[BUG]  [BUGGY]  this.selected  =  optionMap.get(option.getName());  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  optionMap.get(option.getName());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.get(option.getName());	  this.selected    =    option.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
584	[BUG]  [BUGGY]  MutableMap.this.setSelected(option.getOpt());  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  MutableMap.this.setSelected(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	MutableMap.this.setSelected(option.getOpt());	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
585	[BUG]  [BUGGY]  MutableMap.this.required  =  true;  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  MutableMap.this.required  =  true;  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	MutableMap.this.required  =  true;	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
586	[BUG]  [BUGGY]  MutableMap.this.select(option);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  MutableMap.this.select(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	MutableMap.this.select(option);	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
587	[BUG]  [BUGGY]  MutableMap.this.setSelected(option);  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  MutableMap.this.setSelected(option);  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	MutableMap.this.setSelected(option);	  if(!required)    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
588	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(       "       ");    	compilable	  [FE]  IllegalArgumentException  	67	9	replace
589	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(       "       ");    	compilable	  [FE]  IllegalArgumentException  	67	9	replace
590	[BUG]  [BUGGY]  safeMultiply(option.getLongOpt());  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getLongOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getLongOpt());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
591	[BUG]  [BUGGY]  safeMultiply(option.getOpt());  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getOpt());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getOpt());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
592	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]            IllegalArgumentException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	new  IllegalArgumentException( " ".equals(option.getLongOpt()));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	69	None	replace
593	[BUG]  [BUGGY]  elected!=  null  &&  this.selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null  &&  this.selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  this.selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
594	[BUG]  [BUGGY]  elected!=  null  &&  option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null  &&  option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  option.getOpt()!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
595	[BUG]  [BUGGY]  elected!=  null  &&  this.selected.equals(option.getLongOpt()))  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  elected!=  null  &&  this.selected.equals(option.getLongOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  this.selected.equals(option.getLongOpt()))  {  throw  new  IllegalStateException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	40	None	replace
596	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  select  =  option.getOpt();  }  [CE]  cannot  find  symbol  select  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  select  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  select  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  select	117	None	add
597	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected!=  null)  {  throw  new  UnsupportedOperationException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(selected!=  null)  {  throw  new  UnsupportedOperationException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	49	3	add
598	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected!=  null)  {  throw  new  UnsupportedOperationException( ",   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(selected!=  null)  {  throw  new  UnsupportedOperationException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(selected!=  null)  {  throw  new  UnsupportedOperationException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	49	3	add
599	[BUG]  [BUGGY]  this.selected  =  option.getOpt(),  Option.getOpt();  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getOpt(),  Option.getOpt();  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getOpt(),  Option.getOpt();	          this.selected    =    option.getOpt();    this.selected    =    Option.getOpt();    	non-compiled	[CE]  ';'  expected	120	None	replace
600	[BUG]  [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getOpt()));  }  [CE]  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getOpt()));  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  	84	None	replace
601	[BUG]  [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }  [CE]  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getLongOpt()));  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  	84	None	replace
602	[BUG]  [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getName()));  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getName()));  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeMultiply(option.getOpt())  {  throw  new  IllegalArgumentException( " ".equals(option.getName()));  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(selected!=    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  	84	None	replace
603	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalStateException( ", ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
604	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]            IllegalStateException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalStateException( " ")	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
605	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  NullPointerException  	1	9	add
606	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  NullPointerException  	1	9	add
607	[BUG]  [BUGGY]  vice(option.getOpt(),  selected,  option.getSelected());  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  vice(option.getOpt(),  selected,  option.getSelected());  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt(),  selected,  option.getSelected());	  vice(option.getOpt(),    selected);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
608	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(required)  {  throw  new  UnsupportedOperationException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(required)  {  throw  new  UnsupportedOperationException( ".   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	114	6	add
609	[BUG]  [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(required)  {  throw  new  UnsupportedOperationException( ".   ");  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException(   "   ");  }  if(required)  {  throw  new  UnsupportedOperationException( ".   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(required)    {    throw    new    UnsupportedOperationException(   "   ");    }    if(required)  {  throw  new  UnsupportedOperationException( ".   ");  }	  	compilable	  [FE]  UnsupportedOperationException  	114	6	add
610	[BUG]  [BUGGY]  this.selected  =  optionMap.getSelected(option.getKey());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  optionMap.getSelected(option.getKey());  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.getSelected(option.getKey());	  this.selected    =    optionMap.getSelected();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
611	[BUG]  [BUGGY]  this.selected  =  option.getOpt();  if(this.selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  this.selected  =  option.getOpt();  if(this.selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getOpt();  if(this.selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
612	[BUG]  [BUGGY]  Option  option  =  options.get(select);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.get(select);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.get(select);	  Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	81	None	replace
613	[BUG]  [BUGGY]  Option  option  =  options.get(required);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  Option  option  =  options.get(required);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.get(required);	  Option    option    =    options.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	81	None	replace
614	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
615	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	                optionMap.put(option.getKey(),        selected);        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getOpt(),  selected);	  	compilable	  [FE]  NullPointerException  	28	9	add
616	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getOpt(),  selected);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]          optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);  optionMap.put(option.getOpt(),  selected);  [BUGGY]      return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	                optionMap.put(option.getKey(),        selected);        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getOpt(),  selected);	  	compilable	  [FE]  NullPointerException  	28	9	add
617	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalStateException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	39	3	add
618	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( ",   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalStateException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalStateException( ",   ");  }	  	compilable	  [FE]  ComparisonFailure  	39	3	add
619	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  IllegalArgumentException  	103	9	add
620	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(option  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(option  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  IllegalArgumentException  	103	9	add
