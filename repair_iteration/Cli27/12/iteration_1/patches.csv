bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  NullPointerException  	16	9	add
2	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  NullPointerException  	16	9	add
3	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  option);  OptionMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  OptionMap  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  option);  OptionMap.put(option.getKey(),  option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    option);    OptionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  cannot  find  symbol  OptionMap	16	None	add
4	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    option);    Option  optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  ';'  expected	16	None	add
5	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  optionsMap  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    option);    optionsMap.put(option.getKey(),  option);	  	non-compiled	[CE]  cannot  find  symbol  optionsMap	16	None	add
6	[BUG]  [BUGGY]  vice(option.getOpt());  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  vice(option.getOpt());  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
7	[BUG]  [BUGGY]  elected  =  null;  [CE]  cannot  find  symbol  elected  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  elected  =  null;  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected  =  null;	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  elected	23	None	replace
8	[BUG]  [BUGGY]  vice(option.getOpt(),  selected);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  vice(option.getOpt(),  selected);  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt(),  selected);	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
9	[BUG]  [BUGGY]  vice(option.getOpt()).setSelected(selected);  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  vice(option.getOpt()).setSelected(selected);  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	vice(option.getOpt()).setSelected(selected);	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
10	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  selected  =  option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	selected  =  option.getOpt();	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
11	[BUG]  [BUGGY]  selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  selected  =  option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	selected  =  option.getOpt();	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
12	[BUG]  [BUGGY]  elected  =  option.getOpt();  [CE]  cannot  find  symbol  elected  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  elected  =  option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected  =  option.getOpt();	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol  elected	5	None	replace
13	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Aleger  <?>  selected  =  option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Aleger  <?>  selected  =  option.getOpt();	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
14	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  optionMap.put(option.getOpt(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getOpt(),  selected);	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
15	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  optionMap.put(option.getOpt(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getOpt(),  selected);	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
16	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	4	9	add
17	[BUG]  [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	4	9	add
18	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	4	9	add
19	[BUG]  [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected!=  null)  {  selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	4	9	add
20	[BUG]  [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  option  =  option.getOpt();  }  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  option  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  option  =  option.getOpt();  }	  	non-compiled	[CE]  incompatible  types	4	None	add
21	[BUG]  [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  [CE]  cannot  find  symbol  selection  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  selection  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  selection  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  selection	4	None	add
22	[BUG]  [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  chosen  =  option.getOpt();  }  [CE]  cannot  find  symbol  chosen  [FE]            NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  chosen  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  chosen  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol  chosen	4	None	add
23	[BUG]  [BUGGY]  this.selected  =  optionMap.getSelected();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  this.selected  =  optionMap.getSelected();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  optionMap.getSelected();	      this.selected    =    option.getSelected();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
24	[BUG]  [BUGGY]  this.selected  =  options.getSelected();  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  this.selected  =  options.getSelected();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  options.getSelected();	      this.selected    =    option.getSelected();    	non-compiled	[CE]  cannot  find  symbol  options	3	None	replace
25	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  option.getSelectedValue();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getSelectedValue();	      String    selected    =    option.getSelectedString();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
26	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedString();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  optionMap.getSelectedString();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getSelectedString();	      String    selected    =    option.getSelectedString();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
27	[BUG]  [BUGGY]  String  selected  =  options.getSelectedString();  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  options.getSelectedString();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  options.getSelectedString();	      String    selected    =    option.getSelectedString();    	non-compiled	[CE]  cannot  find  symbol  options	6	None	replace
28	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);	  	compilable	  [FE]  NullPointerException  	19	9	add
29	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  selected);  optionMap.put(option.getKey(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    selected);    optionMap.put(option.getKey(),  selected);	  	compilable	  [FE]  NullPointerException  	19	9	add
30	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  selected);  Option  optionMap.put(option.getKey(),  selected);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  selected);  Option  optionMap.put(option.getKey(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    selected);    Option  optionMap.put(option.getKey(),  selected);	  	non-compiled	[CE]  ';'  expected	19	None	add
31	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  selected);  OptionMap.put(option.getKey(),  selected);  [CE]  cannot  find  symbol  OptionMap  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  selected);  OptionMap.put(option.getKey(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    selected);    OptionMap.put(option.getKey(),  selected);	  	non-compiled	[CE]  cannot  find  symbol  OptionMap	19	None	add
32	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  selected);  OptionGroup  optionMap.put(option.getKey(),  selected);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  selected);  OptionGroup  optionMap.put(option.getKey(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    selected);    OptionGroup  optionMap.put(option.getKey(),  selected);	  	non-compiled	[CE]  ';'  expected	19	None	add
33	[BUG]  [BUGGY]  this.selected  =  option.getName();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  this.selected  =  option.getName();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getName();	      this.selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
34	[BUG]  [BUGGY]  this.selected  =  option.getSelectedValue();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  this.selected  =  option.getSelectedValue();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getSelectedValue();	      this.selected    =    option.getOpt();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
35	[BUG]  [BUGGY]  throw  new  AlreadySelectedException(   "   ");  throw  new  AlreadySelectedException(   "   ");  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  AlreadySelectedException(   "   ");  throw  new  AlreadySelectedException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    AlreadySelectedException(   "   ");    throw  new  AlreadySelectedException(   "   ");	  	non-compiled	[CE]  unreachable  statement	8	None	add
36	[BUG]  [BUGGY]  throw  new  AlreadySelectedException(   "   ");  Throw  new  AlreadySelectedException(   "   ");  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  AlreadySelectedException(   "   ");  Throw  new  AlreadySelectedException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    AlreadySelectedException(   "   ");    Throw  new  AlreadySelectedException(   "   ");	  	non-compiled	[CE]  not  a  statement	8	None	add
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(   "   ");    	compilable	  [FE]  NullPointerException  	9	9	replace
38	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(   "   ");    	compilable	  [FE]  NullPointerException  	9	9	replace
39	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  NullPointerException  	13	9	replace
40	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  NullPointerException  	13	9	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]      IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
43	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException(   "   ");  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    UnsupportedOperationException(   "   ");    throw  new  UnsupportedOperationException(   "   ");	  	non-compiled	[CE]  unreachable  statement	14	None	add
44	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throw  new  UnsupportedOperationException(   "   ");  [CE]  not  a  statement  [FE]      UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throw  new  UnsupportedOperationException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    UnsupportedOperationException(   "   ");    Throw  new  UnsupportedOperationException(   "   ");	  	non-compiled	[CE]  not  a  statement	14	None	add
45	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  new  UnsupportedOperationException(   "   ");  [CE]  unreachable  statement  [FE]        UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  new  UnsupportedOperationException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    UnsupportedOperationException(   "   ");    new  UnsupportedOperationException(   "   ");	  	non-compiled	[CE]  unreachable  statement	14	None	add
46	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]          ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  options.getOption();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.getOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	18	None	replace
47	[BUG]  [BUGGY]  option  =  option.getOption();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  option  =  option.getOption();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	option  =  option.getOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
48	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  selected);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  option.getOption(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  option.getOption(),  selected);	      Option    option    =    option.getOption();    	non-compiled	[CE]  ';'  expected	18	None	replace
49	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  NullPointerException  	15	9	replace
50	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  NullPointerException  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  NullPointerException  	15	9	replace
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	22	3	add
52	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	22	3	add
53	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	9	add
54	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	9	add
55	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  >=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected  >=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected  >=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	22	None	add
56	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(   "   ");  [CE]  unreachable  statement  [FE]    IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException(   "   ");	  	non-compiled	[CE]  unreachable  statement	12	None	add
57	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException(   "   ");  [CE]  not  a  statement  [FE]      IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    IllegalStateException(   "   ");    Throw  new  IllegalStateException(   "   ");	  	non-compiled	[CE]  not  a  statement	12	None	add
58	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  new  IllegalStateException(   "   ");  [CE]  unreachable  statement  [FE]        IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  IllegalStateException(   "   ");  new  IllegalStateException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    IllegalStateException(   "   ");    new  IllegalStateException(   "   ");	  	non-compiled	[CE]  unreachable  statement	12	None	add
59	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]        ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(selected  +  1);	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	24	None	replace
60	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]          ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getOpt());	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	24	None	replace
61	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalArgumentException  	11	9	replace
62	[BUG]  [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalArgumentException  	11	9	replace
63	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
64	[BUG]  [BUGGY]  String  selected  =  option.getSelectedText();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  option.getSelectedText();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getSelectedText();	      String    selected    =    option.getText();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
65	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "n ";  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  option.getText()  + "n ";  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + "n ";	      String    selected    =    option.getText();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
66	[BUG]  [BUGGY]  String  selected  =  option.getText()  + ": ";  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  option.getText()  + ": ";  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.getText()  + ": ";	      String    selected    =    option.getText();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
67	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException(   "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException(   "   ");	  	non-compiled	[CE]  unreachable  statement	10	None	add
68	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	10	None	add
69	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException(   "   ");  [CE]  unreachable  statement  [FE]        IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    IllegalArgumentException(   "   ");    new  IllegalArgumentException(   "   ");	  	non-compiled	[CE]  unreachable  statement	10	None	add
70	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	1	9	add
71	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	1	9	add
72	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	1	9	add
73	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	1	9	add
74	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	1	9	add
75	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	1	9	add
76	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
77	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
78	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  optionMap.put(option.getKey(),  this);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	optionMap.put(option.getKey(),  this);	      optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	17	9	replace
79	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  this);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  optionMap.put(option.getKey(),  this);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getKey(),  this);	      optionMap.put(option.getKey(),    option);    	compilable	  [FE]  NullPointerException  	17	9	replace
80	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  optionsMap.get(option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionsMap.get(option);	      Option    option    =    optionMap.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	21	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  options.get(option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  options.get(option);	      Option    option    =    optionMap.get(option);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	21	None	replace
82	[BUG]  [BUGGY]  optionMap.put(option.getName(),  selected);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  optionMap.put(option.getName(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getName(),  selected);	      optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	22	3	add
84	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(selected!=  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	22	3	add
85	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  this.selected  =  option.getKey();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	this.selected  =  option.getKey();	      this.selected    =    option.getOpt();    	compilable	  [FE]  NullPointerException  	2	9	replace
86	[BUG]  [BUGGY]  this.selected  =  option.getKey();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  this.selected  =  option.getKey();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	this.selected  =  option.getKey();	      this.selected    =    option.getOpt();    	compilable	  [FE]  NullPointerException  	2	9	replace
87	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  selected);  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  optionMap.put(option.getKey(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getKey(),  selected);	      optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  ';'  expected	20	None	replace
88	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    UnsupportedOperationException(   "   ");    if(option  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	non-compiled	[CE]  unreachable  statement	14	None	add
89	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  IllegalStateException  	13	9	replace
90	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  IllegalStateException  	13	9	replace
91	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  NullPointerException  	13	9	replace
92	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]      IllegalStateException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  NullPointerException  	13	9	replace
93	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  UnsupportedOperationException  	15	9	replace
94	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  UnsupportedOperationException  	15	9	replace
95	[BUG]  [BUGGY]  safeTree();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  safeTree();  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeTree();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
96	[BUG]  [BUGGY]  safeTwin();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  safeTwin();  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeTwin();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
97	[BUG]  [BUGGY]  safeGet();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  safeGet();  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	safeGet();	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
98	[BUG]  [BUGGY]      optionMap.put(option.getKey(),  selected);  optionsMap.put(option.getKey(),  selected);  [CE]  cannot  find  symbol  optionsMap  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      optionMap.put(option.getKey(),  selected);  optionsMap.put(option.getKey(),  selected);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        optionMap.put(option.getKey(),    selected);    optionsMap.put(option.getKey(),  selected);	  	non-compiled	[CE]  cannot  find  symbol  optionsMap	19	None	add
99	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  option);  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  optionMap.put(option.getKey(),  option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  optionMap.put(option.getKey(),  option);	      optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	17	None	replace
100	[BUG]  [BUGGY]  String  selected  =  option.selectText();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  option.selectText();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  option.selectText();	      String    selected    =    option.getText();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(   "   ");    	compilable	  [FE]  AssertionFailedError  	9	9	replace
102	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(   "   ");    	compilable	  [FE]  AssertionFailedError  	9	9	replace
103	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalArgumentException  	11	9	replace
104	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalArgumentException  	11	9	replace
105	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  selected  =  option.getOpt();  }	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
106	[BUG]  [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected!=  null)  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  selected  =  option.getOpt();  }	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
107	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  System.arraycopy(optionMap,  0,  this.selected,  0,  option.getOpt());  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	1	None	add
108	[BUG]  [BUGGY]  throw  new  AlreadySelectedException(   "   ");  new  AlreadySelectedException(   "   ");  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  AlreadySelectedException(   "   ");  new  AlreadySelectedException(   "   ");  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    AlreadySelectedException(   "   ");    new  AlreadySelectedException(   "   ");	  	non-compiled	[CE]  unreachable  statement	8	None	add
109	[BUG]  [BUGGY]  String  selected  =  optionMap.getText();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  String  selected  =  optionMap.getText();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	String  selected  =  optionMap.getText();	      String    selected    =    option.getText();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
110	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(!required)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(   "   ");    	compilable	  [FE]  NullPointerException  	9	9	replace
111	[BUG]  [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(!required)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(!required)  {  throw  new  AlreadySelectedException( " ");  }	  throw    new    AlreadySelectedException(   "   ");    	compilable	  [FE]  NullPointerException  	9	9	replace
112	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOption());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]          ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  optionMap.get(option.getOption());  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(option.getOption());	      Option    option    =    option.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	18	None	replace
113	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  optionMap.getOption(option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.getOption(option);	      Option    option    =    option.getOption();    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	18	None	replace
114	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(required)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  UnsupportedOperationException  	15	9	replace
115	[BUG]  [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException( " ");  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(required)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(required)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    	compilable	  [FE]  UnsupportedOperationException  	15	9	replace
116	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [CE]  unreachable  statement  [FE]    UnsupportedOperationException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw    new    UnsupportedOperationException(   "   ");    if(option.getOpt()  ==  null)  {  throw  new  UnsupportedOperationException(   "   ");  }	  	non-compiled	[CE]  unreachable  statement	14	None	add
117	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
118	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected    ==    null)    {    selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	5	9	replace
119	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  This.selected  =  option.getOpt();  [CE]  cannot  find  symbol  This  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  This.selected  =  option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    This.selected  =  option.getOpt();	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
120	[BUG]  [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  Option.getOpt();  [CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      this.selected  =  option.getOpt();  this.selected  =  Option.getOpt();  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        this.selected    =    option.getOpt();    this.selected  =  Option.getOpt();	  	non-compiled	[CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context	1	None	add
121	[BUG]  [BUGGY]  optionMap.put(option.getName(),  option);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  optionMap.put(option.getName(),  option);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	optionMap.put(option.getName(),  option);	      optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
122	[BUG]  [BUGGY]  elected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  elected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	23	None	replace
123	[BUG]  [BUGGY]  elected!=  null  &&  this.selected.equals(option.getOpt());  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  elected!=  null  &&  this.selected.equals(option.getOpt());  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  this.selected.equals(option.getOpt());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	23	None	replace
124	[BUG]  [BUGGY]  elected!=  null  &&  this.selected.equals(option.getSelected());  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  elected!=  null  &&  this.selected.equals(option.getSelected());  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  this.selected.equals(option.getSelected());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	23	None	replace
125	[BUG]  [BUGGY]  elected!=  null  &&  this.selected.equals(option.getLongOpt());  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  elected!=  null  &&  this.selected.equals(option.getLongOpt());  [BUGGY]    }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	elected!=  null  &&  this.selected.equals(option.getLongOpt());	  if(selected!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	23	None	replace
126	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  -  1);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]        ComparisonFailure    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]  Option  option  =  optionMap.get(selected  -  1);  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	Option  option  =  optionMap.get(selected  -  1);	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	24	None	replace
127	[BUG]  [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  this  =  option.getOpt();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]    NullPointerException    [CONTEXT]    public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;    [BUGGY]      if(selected  ==  null)  {  selected  =  option.getOpt();  }  if(selected  ==  null)  {  this  =  option.getOpt();  }  [BUGGY]    return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	        if(selected    ==    null)    {    selected    =    option.getOpt();    }    if(selected  ==  null)  {  this  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	4	None	add
