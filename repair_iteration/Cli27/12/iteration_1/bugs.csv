bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    this.selected  =  option.getOpt();  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	    this.selected  =  option.getOpt();		compilable	  [FE]  NullPointerException  	24	9	add
2	[BUG]  [BUGGY]    this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    this.selected  =  option.getOpt();  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    this.selected  =  option.getOpt();		compilable	  [FE]  NullPointerException  	24	9	add
3	[BUG]  [BUGGY]    this.selected  =  option.getSelected();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    this.selected  =  option.getSelected();  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    this.selected  =  option.getSelected();		non-compiled	[CE]  cannot  find  symbol	24	None	add
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	    if(selected  ==  null)  {  selected  =  option.getOpt();  }		compilable	  [FE]  NullPointerException  	24	9	add
5	[BUG]  [BUGGY]    if(selected  ==  null)  {  selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    if(selected  ==  null)  {  selected  =  option.getOpt();  }  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    if(selected  ==  null)  {  selected  =  option.getOpt();  }		compilable	  [FE]  NullPointerException  	24	9	add
6	[BUG]  [BUGGY]    String  selected  =  option.getSelectedString();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    String  selected  =  option.getSelectedString();  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    String  selected  =  option.getSelectedString();		non-compiled	[CE]  cannot  find  symbol	24	None	add
7	[BUG]  [BUGGY]    String  selected  =  option.getText();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    String  selected  =  option.getText();  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    String  selected  =  option.getText();		non-compiled	[CE]  cannot  find  symbol	24	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  AlreadySelectedException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	throw  new  AlreadySelectedException( " ");	return;  	compilable	  [FE]  AssertionFailedError  	23	9	replace
9	[BUG]  [BUGGY]  throw  new  AlreadySelectedException( " ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  AlreadySelectedException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw  new  AlreadySelectedException( " ");	return;  	compilable	  [FE]  AssertionFailedError  	23	9	replace
10	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	throw  new  IllegalArgumentException( " ");	return;  	compilable	  [FE]  IllegalArgumentException  	23	9	replace
11	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IllegalArgumentException  [FE]      ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw  new  IllegalArgumentException( " ");	return;  	compilable	  [FE]  IllegalArgumentException  	23	9	replace
12	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	throw  new  IllegalStateException( " ");	return;  	compilable	  [FE]  IllegalStateException  	23	9	replace
13	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  IllegalStateException  [FE]        ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw  new  IllegalStateException( " ");	return;  	compilable	  [FE]  IllegalStateException  	23	9	replace
14	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	throw  new  UnsupportedOperationException( " ");	return;  	compilable	  [FE]  UnsupportedOperationException  	23	9	replace
15	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [FE]  UnsupportedOperationException  [FE]          ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	throw  new  UnsupportedOperationException( " ");	return;  	compilable	  [FE]  UnsupportedOperationException  	23	9	replace
16	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    optionMap.put(option.getKey(),  option);  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	    optionMap.put(option.getKey(),  option);		compilable	  [FE]  NullPointerException  	24	9	add
17	[BUG]  [BUGGY]    optionMap.put(option.getKey(),  option);  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    optionMap.put(option.getKey(),  option);  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    optionMap.put(option.getKey(),  option);		compilable	  [FE]  NullPointerException  	24	9	add
18	[BUG]  [BUGGY]    Option  option  =  option.getOption();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    Option  option  =  option.getOption();  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    Option  option  =  option.getOption();		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	24	None	add
19	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    optionMap.put(option.getKey(),  selected);  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	    optionMap.put(option.getKey(),  selected);		compilable	  [FE]  NullPointerException  	24	9	add
20	[BUG]  [BUGGY]    optionMap.put(option.getKey(),  selected);  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    optionMap.put(option.getKey(),  selected);  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    optionMap.put(option.getKey(),  selected);		compilable	  [FE]  NullPointerException  	24	9	add
21	[BUG]  [BUGGY]    Option  option  =  optionMap.get(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]          ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    Option  option  =  optionMap.get(option);  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    Option  option  =  optionMap.get(option);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	24	None	add
22	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	add	if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	return;  	compilable	  [FE]  NullPointerException  	23	9	replace
23	[BUG]  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]  if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	if(selected!=  null)  {  throw  new  IllegalArgumentException( " ");  }	return;  	compilable	  [FE]  NullPointerException  	23	9	replace
24	[BUG]  [BUGGY]    Option  option  =  optionMap.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure  [CONTEXT]  public  void  setSelected(Option  option)  throws  AlreadySelectedException  {  if  (option  ==  null)  {  selected  =  null;  [BUGGY]    Option  option  =  optionMap.get(selected);  [BUGGY]  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	92	92	3	replace	    Option  option  =  optionMap.get(selected);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	24	None	add
