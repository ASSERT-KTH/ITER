bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(optionMap!=  null)||(required  >  0)||(required  <  optionMap.size());  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)||(required  >  0)||(required  <  optionMap.size());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)||(required  >  0)||(required  <  optionMap.size());	  return(required    >    0)||(required    <    optionMap.size());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	4	None	replace
2	[BUG]  [BUGGY]  return(optionMap.size()  >  0)||(required  <  required.size());  [CE]  boolean  cannot  be  dereferenced  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap.size()  >  0)||(required  <  required.size());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap.size()  >  0)||(required  <  required.size());	  return(required    >    0)||(required    <    optionMap.size());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	4	None	replace
3	[BUG]  [BUGGY]  return(optionMap!=  null)&&(required  >  0)||(required  <  optionMap.size());  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&(required  >  0)||(required  <  optionMap.size());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&(required  >  0)||(required  <  optionMap.size());	  return(required    >    0)||(required    <    optionMap.size());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	4	None	replace
4	[BUG]  [BUGGY]  return(optionMap  ==  null)||(required  >  0)||(required  <  optionMap.size());  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                  ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap  ==  null)||(required  >  0)||(required  <  optionMap.size());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap  ==  null)||(required  >  0)||(required  <  optionMap.size());	  return(required    >    0)||(required    <    optionMap.size());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	4	None	replace
5	[BUG]  [BUGGY]  boolean  required  =  optionMap.containsKey(key);  [CE]  cannot  find  symbol  key  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.containsKey(key);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.containsKey(key);	      boolean    required    =    optionMap.containsKey(select);    	non-compiled	[CE]  cannot  find  symbol  key	17	None	replace
6	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.selected);  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(this.selected);	      boolean    required    =    this.optionMap.containsKey(select);    	non-compiled	[CE]  missing  return  statement	24	None	replace
7	[BUG]  [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap))));    	non-compiled	[CE]  ')'  expected	21	None	replace
8	[BUG]  [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap))));    	non-compiled	[CE]  ')'  expected	21	None	replace
9	[BUG]  [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap))));    	non-compiled	[CE]  ')'  expected	21	None	replace
10	[BUG]  [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap))));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
11	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(selected).booleanValue();  [CE]  boolean  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(selected).booleanValue();  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(selected).booleanValue();	      boolean    required    =    this.optionMap.containsKey(selected);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	11	None	replace
12	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(selected)||  this.optionMap.containsKey(selected);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(selected)||  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(selected)||  this.optionMap.containsKey(selected);	      boolean    required    =    this.optionMap.containsKey(selected);    	non-compiled	[CE]  missing  return  statement	11	None	replace
13	[BUG]  [BUGGY]  boolean  required  =  optionMap.containsKey( "Required ");  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.containsKey( "Required ");  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.containsKey( "Required ");	      boolean    required    =    optionMap.containsKey(   "required   ");    	non-compiled	[CE]  missing  return  statement	13	None	replace
14	[BUG]  [BUGGY]  boolean  required  =  options.containsKey( "required ");  [CE]  cannot  find  symbol  options  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  options.containsKey( "required ");  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  options.containsKey( "required ");	      boolean    required    =    optionMap.containsKey(   "required   ");    	non-compiled	[CE]  cannot  find  symbol  options	13	None	replace
15	[BUG]  [BUGGY]  if(required  ==  null)  {  required  =  false;  }  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  if(required  ==  null)  {  required  =  false;  }  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	if(required  ==  null)  {  required  =  false;  }	      if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	16	None	replace
16	[BUG]  [BUGGY]  if(required!=  null)  {  required  =  false;  }  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  if(required!=  null)  {  required  =  false;  }  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	if(required!=  null)  {  required  =  false;  }	      if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	16	None	replace
17	[BUG]  [BUGGY]  if(required  ==  null)  {  required  =  true;  }  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  if(required  ==  null)  {  required  =  true;  }  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	if(required  ==  null)  {  required  =  true;  }	      if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	16	None	replace
18	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  required  =  optionMap.containsKey(selected);  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  required  =  optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(selected);    boolean  required  =  optionMap.containsKey(selected);	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	7	None	add
19	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  Boolean  required  =  optionMap.containsKey(selected);  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  Boolean  required  =  optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(selected);    Boolean  required  =  optionMap.containsKey(selected);	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	7	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  needed  =  optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        boolean    required    =    optionMap.containsKey(selected);    boolean  needed  =  optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	7	6	add
21	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  needed  =  optionMap.containsKey(selected);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  needed  =  optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(selected);    boolean  needed  =  optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	7	6	add
22	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  String  selected  =  optionMap.containsKey(selected);  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  String  selected  =  optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(selected);    String  selected  =  optionMap.containsKey(selected);	  	non-compiled	[CE]  incompatible  types	7	None	add
23	[BUG]  [BUGGY]  this.required  =  false;  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  this.required  =  false;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	this.required  =  false;	      this.required    =    true;    	non-compiled	[CE]  missing  return  statement	15	None	replace
24	[BUG]  [BUGGY]  this.required  |=  null;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  this.required  |=  null;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	this.required  |=  null;	      this.required    =    true;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	15	None	replace
25	[BUG]  [BUGGY]  return(selected  >  0)&&(optionMap.containsKey(required));  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selected  >  0)&&(optionMap.containsKey(required));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selected  >  0)&&(optionMap.containsKey(required));	  return(required    >    0)&&(optionMap.containsKey(selected));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	19	None	replace
26	[BUG]  [BUGGY]  return(optionMap.containsKey(selected)  >  0)&&(optionMap.containsKey(selected));  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap.containsKey(selected)  >  0)&&(optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap.containsKey(selected)  >  0)&&(optionMap.containsKey(selected));	  return(required    >    0)&&(optionMap.containsKey(selected));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	19	None	replace
27	[BUG]  [BUGGY]  return(selected  >  0)&&(optionMap.containsKey(selected));  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selected  >  0)&&(optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selected  >  0)&&(optionMap.containsKey(selected));	  return(required    >    0)&&(optionMap.containsKey(selected));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	19	None	replace
28	[BUG]  [BUGGY]  return(optionMap.containsKey(selected))  &&(required  >  0));  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap.containsKey(selected))  &&(required  >  0));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap.containsKey(selected))  &&(required  >  0));	  return(required    >    0)&&(optionMap.containsKey(selected));    	non-compiled	[CE]  ';'  expected	19	None	replace
29	[BUG]  [BUGGY]  return  this.required;  this.required;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  this.required;  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    this.required;	  	non-compiled	[CE]  not  a  statement	1	None	add
30	[BUG]  [BUGGY]  return  this.required;  this.required  =  true;  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  this.required  =  true;  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    this.required  =  true;	  	non-compiled	[CE]  unreachable  statement	1	None	add
31	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(!this.optionMap.containsKey(selected))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(!this.optionMap.containsKey(selected))  {  return  false;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  if(!this.optionMap.containsKey(selected))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
32	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(!this.optionMap.containsKey(selected))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(!this.optionMap.containsKey(selected))  {  return  true;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  if(!this.optionMap.containsKey(selected))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
33	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(optionMap.containsKey(selected))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(optionMap.containsKey(selected))  {  return  false;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  if(optionMap.containsKey(selected))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
34	[BUG]  [BUGGY]  boolean  required  =  optionMap.isRequired();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.isRequired();  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.isRequired();	      boolean    required    =    this.optionMap.isRequired();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
35	[BUG]  [BUGGY]  boolean  required  =  options.isRequired();  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  options.isRequired();  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  options.isRequired();	      boolean    required    =    this.optionMap.isRequired();    	non-compiled	[CE]  cannot  find  symbol  options	9	None	replace
36	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(   "required   ");  boolean  required  =  optionMap.containsKey( "required   ");  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(   "required   ");  boolean  required  =  optionMap.containsKey( "required   ");  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(   "required   ");    boolean  required  =  optionMap.containsKey( "required   ");	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	12	None	add
37	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(   "required   ");  boolean  required  =  optionMap.containsKey( ".required ");  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(   "required   ");  boolean  required  =  optionMap.containsKey( ".required ");  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(   "required   ");    boolean  required  =  optionMap.containsKey( ".required ");	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	12	None	add
38	[BUG]  [BUGGY]  return(selection  >  0)&&(optionMap.containsKey(required));  [CE]  cannot  find  symbol  selection  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selection  >  0)&&(optionMap.containsKey(required));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selection  >  0)&&(optionMap.containsKey(required));	  return(required    >    0)&&(optionMap.containsKey(selection));    	non-compiled	[CE]  cannot  find  symbol  selection	20	None	replace
39	[BUG]  [BUGGY]  return(selection  >  0)&&(optionMap.containsKey(selection));  [CE]  cannot  find  symbol  selection  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selection  >  0)&&(optionMap.containsKey(selection));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selection  >  0)&&(optionMap.containsKey(selection));	  return(required    >    0)&&(optionMap.containsKey(selection));    	non-compiled	[CE]  cannot  find  symbol  selection	20	None	replace
40	[BUG]  [BUGGY]  return(selected  >  0)&&(optionMap.containsKey(selection));  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selected  >  0)&&(optionMap.containsKey(selection));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selected  >  0)&&(optionMap.containsKey(selection));	  return(required    >    0)&&(optionMap.containsKey(selection));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	20	None	replace
41	[BUG]  [BUGGY]  return(selection  <  0)&&(optionMap.containsKey(required));  [CE]  cannot  find  symbol  selection  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selection  <  0)&&(optionMap.containsKey(required));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selection  <  0)&&(optionMap.containsKey(required));	  return(required    >    0)&&(optionMap.containsKey(selection));    	non-compiled	[CE]  cannot  find  symbol  selection	20	None	replace
42	[BUG]  [BUGGY]  if(this.required!=  null)required  =  true;  if(this.optionMap.containsKey(selected))  {  return  false;  }  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  if(this.required!=  null)required  =  true;  if(this.optionMap.containsKey(selected))  {  return  false;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	if(this.required!=  null)required  =  true;  if(this.optionMap.containsKey(selected))  {  return  false;  }	  return    this.required;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	2	None	replace
43	[BUG]  [BUGGY]  if(this.required!=  null)  {  return  this.required;  }  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  if(this.required!=  null)  {  return  this.required;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	if(this.required!=  null)  {  return  this.required;  }	  return    this.required;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	2	None	replace
44	[BUG]  [BUGGY]  return  this.required!=  null  &&  this.required;  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required!=  null  &&  this.required;  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.required!=  null  &&  this.required;	  return    this.required;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	2	None	replace
45	[BUG]  [BUGGY]  return  this.optionMap.isRequired();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.isRequired();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.isRequired();	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
46	[BUG]  [BUGGY]  &&  this.optionMap.containsKey(selected);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  &&  this.optionMap.containsKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	&&  this.optionMap.containsKey(selected);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  this.optionMap.containsKey(selected);  [CE]  missing  return  statement  [FE]                    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  this.optionMap.containsKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	this.optionMap.containsKey(selected);	      	non-compiled	[CE]  missing  return  statement	6	None	replace
48	[BUG]  [BUGGY]  &&  this.optionMap.containsKey(selected));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  &&  this.optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	&&  this.optionMap.containsKey(selected));	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  boolean  required  =  optionMap.containsKey(selected).booleanValue();  [CE]  boolean  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.containsKey(selected).booleanValue();  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.containsKey(selected).booleanValue();	      boolean    required    =    optionMap.containsKey(selected);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	8	None	replace
50	[BUG]  [BUGGY]  boolean  required  =  options.containsKey(selected);  [CE]  cannot  find  symbol  options  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  options.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  options.containsKey(selected);	      boolean    required    =    optionMap.containsKey(selected);    	non-compiled	[CE]  cannot  find  symbol  options	8	None	replace
51	[BUG]  [BUGGY]  boolean  required  =  optionMap.containsKey(selected)||(optionMap.containsKey(selected));  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.containsKey(selected)||(optionMap.containsKey(selected));  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.containsKey(selected)||(optionMap.containsKey(selected));	      boolean    required    =    optionMap.containsKey(selected);    	non-compiled	[CE]  missing  return  statement	8	None	replace
52	[BUG]  [BUGGY]  return  selected.equals(optionMap.get(required));  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  selected.equals(optionMap.get(required));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  selected.equals(optionMap.get(required));	  return    selected.equals(required);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	5	None	replace
53	[BUG]  [BUGGY]  return  required.equals(selected);  [CE]  boolean  cannot  be  dereferenced  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  required.equals(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  required.equals(selected);	  return    selected.equals(required);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
54	[BUG]  [BUGGY]  return  this.selected.equals(required);  [CE]  no  suitable  method  found  for  equals(boolean)  [FE]                  ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.selected.equals(required);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.selected.equals(required);	  return    selected.equals(required);    	non-compiled	[CE]  no  suitable  method  found  for  equals(boolean)	5	None	replace
55	[BUG]  [BUGGY]  return  selected.equals(this.optionMap.get(required));  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  selected.equals(this.optionMap.get(required));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  selected.equals(this.optionMap.get(required));	  return    selected.equals(required);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	5	None	replace
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  this.required  =  true;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        this.required    =    true;    this.required  =  true;	  	compilable	  [FE]  ComparisonFailure  	14	3	add
57	[BUG]  [BUGGY]      this.required  =  true;  this.required  =  true;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  this.required  =  true;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        this.required    =    true;    this.required  =  true;	  	compilable	  [FE]  ComparisonFailure  	14	3	add
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  boolean  required  =  true;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        this.required    =    true;    boolean  required  =  true;	  	compilable	  [FE]  ComparisonFailure  	14	3	add
59	[BUG]  [BUGGY]      this.required  =  true;  boolean  required  =  true;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  boolean  required  =  true;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        this.required    =    true;    boolean  required  =  true;	  	compilable	  [FE]  ComparisonFailure  	14	3	add
60	[BUG]  [BUGGY]      this.required  =  true;  This.required  =  true;  [CE]  cannot  find  symbol  This  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  This.required  =  true;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        this.required    =    true;    This.required  =  true;	  	non-compiled	[CE]  cannot  find  symbol  This	14	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  this.required  =  false;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        this.required    =    true;    this.required  =  false;	  	compilable	  [FE]  AssertionFailedError  	14	6	add
62	[BUG]  [BUGGY]      this.required  =  true;  this.required  =  false;  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  this.required  =  false;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        this.required    =    true;    this.required  =  false;	  	compilable	  [FE]  AssertionFailedError  	14	6	add
63	[BUG]  [BUGGY]  return  this.optionMap.equals(required)&&  selected.equals(selected);  [CE]  no  suitable  method  found  for  equals(boolean)  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.equals(required)&&  selected.equals(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.equals(required)&&  selected.equals(selected);	  return    selected.equals(required)&&    this.optionMap.containsKey(selected);    	non-compiled	[CE]  no  suitable  method  found  for  equals(boolean)	3	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.equals(selected)&&  selected.equals(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	return  this.optionMap.equals(selected)&&  selected.equals(selected);	  return    selected.equals(required)&&    this.optionMap.containsKey(selected);    	compilable	  [FE]  AssertionFailedError  	3	6	replace
65	[BUG]  [BUGGY]  return  this.optionMap.equals(selected)&&  selected.equals(selected);  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.equals(selected)&&  selected.equals(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.equals(selected)&&  selected.equals(selected);	  return    selected.equals(required)&&    this.optionMap.containsKey(selected);    	compilable	  [FE]  AssertionFailedError  	3	6	replace
66	[BUG]  [BUGGY]  return  this.optionMap.equals(selected)&&  selected.equals(required);  [CE]  no  suitable  method  found  for  equals(boolean)  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.equals(selected)&&  selected.equals(required);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.equals(selected)&&  selected.equals(required);	  return    selected.equals(required)&&    this.optionMap.containsKey(selected);    	non-compiled	[CE]  no  suitable  method  found  for  equals(boolean)	3	None	replace
67	[BUG]  [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  required  =  this.optionMap.containsKey(selected);  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  required  =  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    this.optionMap.containsKey(selected);    boolean  required  =  this.optionMap.containsKey(selected);	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	10	None	add
68	[BUG]  [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  Boolean  required  =  this.optionMap.containsKey(selected);  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  Boolean  required  =  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    this.optionMap.containsKey(selected);    Boolean  required  =  this.optionMap.containsKey(selected);	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	10	None	add
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  needed  =  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        boolean    required    =    this.optionMap.containsKey(selected);    boolean  needed  =  this.optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	10	6	add
70	[BUG]  [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  needed  =  this.optionMap.containsKey(selected);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  needed  =  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    this.optionMap.containsKey(selected);    boolean  needed  =  this.optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	10	6	add
71	[BUG]  [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  String  selected  =  this.optionMap.containsKey(selected);  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  String  selected  =  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    this.optionMap.containsKey(selected);    String  selected  =  this.optionMap.containsKey(selected);	  	non-compiled	[CE]  incompatible  types	10	None	add
72	[BUG]  [BUGGY]  boolean  required  =  optionsMap.containsKey( "required ");  [CE]  cannot  find  symbol  optionsMap  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionsMap.containsKey( "required ");  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionsMap.containsKey( "required ");	      boolean    required    =    optionMap.containsKey(   "required   ");    	non-compiled	[CE]  cannot  find  symbol  optionsMap	13	None	replace
73	[BUG]  [BUGGY]  return  this.required  ==  null  &&  this.required;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required  ==  null  &&  this.required;  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.required  ==  null  &&  this.required;	  return    this.required;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	2	None	replace
74	[BUG]  [BUGGY]  return  this.required!=  null;  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required!=  null;  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.required!=  null;	  return    this.required;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	2	None	replace
75	[BUG]  [BUGGY]  return  this.optionMap.equals(required)&&  selected.equals(this.optionMap.getKey(selected);  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.equals(required)&&  selected.equals(this.optionMap.getKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.equals(required)&&  selected.equals(this.optionMap.getKey(selected);	  return    selected.equals(required)&&    this.optionMap.containsKey(selected);    	non-compiled	[CE]  ')'  expected	3	None	replace
76	[BUG]  [BUGGY]  return  this.optionMap.equals(required)&&  selected.equals(this.optionMap.containsKey(selected);  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.equals(required)&&  selected.equals(this.optionMap.containsKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.equals(required)&&  selected.equals(this.optionMap.containsKey(selected);	  return    selected.equals(required)&&    this.optionMap.containsKey(selected);    	non-compiled	[CE]  ')'  expected	3	None	replace
77	[BUG]  [BUGGY]  return(selection  >=  0)&&(optionMap.containsKey(required));  [CE]  cannot  find  symbol  selection  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selection  >=  0)&&(optionMap.containsKey(required));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selection  >=  0)&&(optionMap.containsKey(required));	  return(required    >    0)&&(optionMap.containsKey(selection));    	non-compiled	[CE]  cannot  find  symbol  selection	20	None	replace
78	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.required);  [CE]  method  containsKey  in  interface  Map  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.required);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(this.required);	      boolean    required    =    this.optionMap.containsKey(select);    	non-compiled	[CE]  method  containsKey  in  interface  Map  cannot  be  applied  to  given  types;	24	None	replace
79	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.select);  [CE]  cannot  find  symbol  select  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.select);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(this.select);	      boolean    required    =    this.optionMap.containsKey(select);    	non-compiled	[CE]  cannot  find  symbol  select	24	None	replace
80	[BUG]  [BUGGY]  return  selected.equals(optionMap.get(required);  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  selected.equals(optionMap.get(required);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  selected.equals(optionMap.get(required);	  return    selected.equals(required);    	non-compiled	[CE]  ')'  expected	5	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.containsKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	return  this.optionMap.containsKey(selected);	      	compilable	  [FE]  AssertionFailedError  	6	6	replace
82	[BUG]  [BUGGY]  return  this.optionMap.containsKey(selected);  [FE]  AssertionFailedError  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.containsKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.containsKey(selected);	      	compilable	  [FE]  AssertionFailedError  	6	6	replace
83	[BUG]  [BUGGY]  return  this.optionMap.containsKey(select);  [CE]  cannot  find  symbol  select  [FE]                  ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.containsKey(select);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.containsKey(select);	      	non-compiled	[CE]  cannot  find  symbol  select	6	None	replace
84	[BUG]  [BUGGY]  return  this.optionMap.containsKey(selection);  [CE]  cannot  find  symbol  selection  [FE]                    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.optionMap.containsKey(selection);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.optionMap.containsKey(selection);	      	non-compiled	[CE]  cannot  find  symbol  selection	6	None	replace
85	[BUG]  [BUGGY]  return(optionMap!=  null)||(required  >  0)&&(required  <  optionMap.size());  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)||(required  >  0)&&(required  <  optionMap.size());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)||(required  >  0)&&(required  <  optionMap.size());	  return(required    >    0)||(required    <    optionMap.size());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	4	None	replace
86	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  for(String  option  :  this.optionMap.keySet())  {  required  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  for(String  option  :  this.optionMap.keySet())  {  required  =  true;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  for(String  option  :  this.optionMap.keySet())  {  required  =  true;  }	  	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1	None	add
87	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(this.optionMap!=  null)  {  return  this.optionMap.isRequired();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(this.optionMap!=  null)  {  return  this.optionMap.isRequired();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  if(this.optionMap!=  null)  {  return  this.optionMap.isRequired();  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
88	[BUG]  [BUGGY]  return  this.required;  this.required  =  false;  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  this.required  =  false;  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    this.required  =  false;	  	non-compiled	[CE]  unreachable  statement	1	None	add
89	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  for(String  option  :  this.optionMap.values())  {  required  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  for(String  option  :  this.optionMap.values())  {  required  =  true;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  for(String  option  :  this.optionMap.values())  {  required  =  true;  }	  	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1	None	add
90	[BUG]  [BUGGY]  boolean  required  =  optionsMap.isRequired();  [CE]  cannot  find  symbol  optionsMap  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionsMap.isRequired();  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionsMap.isRequired();	      boolean    required    =    this.optionMap.isRequired();    	non-compiled	[CE]  cannot  find  symbol  optionsMap	9	None	replace
91	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.optionMap);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(this.optionMap);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(this.optionMap);	      boolean    required    =    this.optionMap.containsKey(selected);    	non-compiled	[CE]  missing  return  statement	11	None	replace
92	[BUG]  [BUGGY]  this.required  =  null;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  this.required  =  null;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	this.required  =  null;	      this.required    =    true;    	non-compiled	[CE]  incompatible  types	15	None	replace
93	[BUG]  [BUGGY]  return(this.required  >  0)&&(optionMap.containsKey(selected));  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(this.required  >  0)&&(optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(this.required  >  0)&&(optionMap.containsKey(selected));	  return(required    >    0)&&(optionMap.containsKey(selected));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	19	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&(optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	return(optionMap!=  null)&&(optionMap.containsKey(selected));	  return(required    >    0)&&(optionMap.containsKey(selected));    	compilable	  [FE]  AssertionFailedError  	19	6	replace
95	[BUG]  [BUGGY]  return(optionMap!=  null)&&(optionMap.containsKey(selected));  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&(optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&(optionMap.containsKey(selected));	  return(required    >    0)&&(optionMap.containsKey(selected));    	compilable	  [FE]  AssertionFailedError  	19	6	replace
96	[BUG]  [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  required  =  this.optionMap.containsKey(this.optionMap);  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  required  =  this.optionMap.containsKey(this.optionMap);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    this.optionMap.containsKey(selected);    boolean  required  =  this.optionMap.containsKey(this.optionMap);	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	10	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  requires  =  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        boolean    required    =    this.optionMap.containsKey(selected);    boolean  requires  =  this.optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	10	6	add
98	[BUG]  [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  requires  =  this.optionMap.containsKey(selected);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  this.optionMap.containsKey(selected);  boolean  requires  =  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    this.optionMap.containsKey(selected);    boolean  requires  =  this.optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	10	6	add
99	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  required  =  optionsMap.containsKey(selected);  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  required  =  optionsMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(selected);    boolean  required  =  optionsMap.containsKey(selected);	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	7	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  requires  =  optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        boolean    required    =    optionMap.containsKey(selected);    boolean  requires  =  optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	7	6	add
101	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  requires  =  optionMap.containsKey(selected);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  requires  =  optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(selected);    boolean  requires  =  optionMap.containsKey(selected);	  	compilable	  [FE]  AssertionFailedError  	7	6	add
102	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  required  =  OptionMap.containsKey(selected);  [CE]  variable  required  is  already  defined  in  method  isRequired()  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(selected);  boolean  required  =  OptionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(selected);    boolean  required  =  OptionMap.containsKey(selected);	  	non-compiled	[CE]  variable  required  is  already  defined  in  method  isRequired()	7	None	add
103	[BUG]  [BUGGY]      boolean  required  =  optionMap.containsKey(   "required   ");  boolean  required  =  optionMap.containsKey( "required "));  [CE]  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      boolean  required  =  optionMap.containsKey(   "required   ");  boolean  required  =  optionMap.containsKey( "required "));  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        boolean    required    =    optionMap.containsKey(   "required   ");    boolean  required  =  optionMap.containsKey( "required "));	  	non-compiled	[CE]  	12	None	add
104	[BUG]  [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));    	non-compiled	[CE]  ')'  expected	22	None	replace
105	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));    	non-compiled	[CE]  ')'  expected	22	None	replace
106	[BUG]  [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));    	non-compiled	[CE]  ')'  expected	22	None	replace
107	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));    	non-compiled	[CE]  ')'  expected	22	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  boolean  required  =  false;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	add	        this.required    =    true;    boolean  required  =  false;	  	compilable	  [FE]  AssertionFailedError  	14	6	add
109	[BUG]  [BUGGY]      this.required  =  true;  boolean  required  =  false;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  boolean  required  =  false;  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        this.required    =    true;    boolean  required  =  false;	  	compilable	  [FE]  AssertionFailedError  	14	6	add
110	[BUG]  [BUGGY]      this.required  =  true;  String  selected  =  getOption(optionMap);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]      this.required  =  true;  String  selected  =  getOption(optionMap);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	        this.required    =    true;    String  selected  =  getOption(optionMap);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
111	[BUG]  [BUGGY]  boolean  required  =  optionsMap.containsKey(selected);  [CE]  cannot  find  symbol  optionsMap  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionsMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionsMap.containsKey(selected);	      boolean    required    =    optionMap.containsKey(selected);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	8	None	replace
112	[BUG]  [BUGGY]  boolean  required  =  optionMap.containsKey(this.option);  [CE]  cannot  find  symbol  option  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.containsKey(this.option);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.containsKey(this.option);	      boolean    required    =    optionMap.containsKey(select);    	non-compiled	[CE]  cannot  find  symbol  option	17	None	replace
113	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap))));    	non-compiled	[CE]  ')'  expected	21	None	replace
114	[BUG]  [BUGGY]  return(required!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required!=  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.get	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap))));    	non-compiled	[CE]  ')'  expected	21	None	replace
115	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption())));    	non-compiled	[CE]  ')'  expected	23	None	replace
116	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption())));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
117	[BUG]  [BUGGY]  if(required!=  false)  {  required  =  true;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  if(required!=  false)  {  required  =  true;  }  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	if(required!=  false)  {  required  =  true;  }	      if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  missing  return  statement	16	None	replace
118	[BUG]  [BUGGY]  return(required  >  0)&&(optionMap.containsKey(selected)||  optionMap.containsKey(selected));  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  >  0)&&(optionMap.containsKey(selected)||  optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  >  0)&&(optionMap.containsKey(selected)||  optionMap.containsKey(selected));	  return(required    >    0)&&(optionMap.containsKey(selected));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	19	None	replace
119	[BUG]  [BUGGY]  Return(selected  >  0)&&(optionMap.containsKey(required));  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  Return(selected  >  0)&&(optionMap.containsKey(required));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	Return(selected  >  0)&&(optionMap.containsKey(required));	  return(required    >    0)&&(optionMap.containsKey(selected));    	non-compiled	[CE]  not  a  statement	19	None	replace
120	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(selected)&&  this.optionMap.containsKey(selected);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(selected)&&  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(selected)&&  this.optionMap.containsKey(selected);	      boolean    required    =    this.optionMap.containsKey(selected);    	non-compiled	[CE]  missing  return  statement	11	None	replace
121	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsValue(selected);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsValue(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsValue(selected);	      boolean    required    =    this.optionMap.containsKey(selected);    	non-compiled	[CE]  missing  return  statement	11	None	replace
122	[BUG]  [BUGGY]  return  this.required!=  null  &&  this.optionMap.containsKey(selected);  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required!=  null  &&  this.optionMap.containsKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.required!=  null  &&  this.optionMap.containsKey(selected);	  return    this.required;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	2	None	replace
123	[BUG]  [BUGGY]  boolean  required  =  this.optionMap.containsKey(this);  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  this.optionMap.containsKey(this);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  this.optionMap.containsKey(this);	      boolean    required    =    this.optionMap.containsKey(select);    	non-compiled	[CE]  missing  return  statement	24	None	replace
124	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));    	non-compiled	[CE]  ')'  expected	22	None	replace
125	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));    	non-compiled	[CE]  ')'  expected	22	None	replace
126	[BUG]  [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  ==  null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.	  return(required!=    null)&&!required.equals(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap.getOption(optionMap)));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
127	[BUG]  [BUGGY]  &&  optionMap.containsKey(selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  &&  optionMap.containsKey(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	&&  optionMap.containsKey(selected);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
128	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  for(Map  optionMap  :  this.optionMap.values())  {  required  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]    ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  for(Map  optionMap  :  this.optionMap.values())  {  required  =  true;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  for(Map  optionMap  :  this.optionMap.values())  {  required  =  true;  }	  	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1	None	add
129	[BUG]  [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(this.optionMap!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required;  if(this.required!=  null)  {  if(this.optionMap!=  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return    this.required;    if(this.required!=  null)  {  if(this.optionMap!=  null)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
130	[BUG]  [BUGGY]  boolean  required  =  optionMap.containsKey(selected)||  this.optionMap.containsKey(selected);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.containsKey(selected)||  this.optionMap.containsKey(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.containsKey(selected)||  this.optionMap.containsKey(selected);	      boolean    required    =    optionMap.containsKey(selected);    	non-compiled	[CE]  missing  return  statement	8	None	replace
131	[BUG]  [BUGGY]  boolean  required  =  optionMap.containsValue(selected);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  boolean  required  =  optionMap.containsValue(selected);  [BUGGY]    return  required;  }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	boolean  required  =  optionMap.containsValue(selected);	      boolean    required    =    optionMap.containsKey(selected);    	non-compiled	[CE]  missing  return  statement	8	None	replace
132	[BUG]  [BUGGY]  return(selection  >  0)&&(optionMap.containsKey(selected));  [CE]  cannot  find  symbol  selection  [FE]          ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(selection  >  0)&&(optionMap.containsKey(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(selection  >  0)&&(optionMap.containsKey(selected));	  return(required    >    0)&&(optionMap.containsKey(selection));    	non-compiled	[CE]  cannot  find  symbol  selection	20	None	replace
133	[BUG]  [BUGGY]  return(required  >  0)&&(optionMap.containsKey(selection,  selected));  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(required  >  0)&&(optionMap.containsKey(selection,  selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(required  >  0)&&(optionMap.containsKey(selection,  selected));	  return(required    >    0)&&(optionMap.containsKey(selection));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	20	None	replace
134	[BUG]  [BUGGY]  return  this.required.equals(required);  [CE]  boolean  cannot  be  dereferenced  [FE]              ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return  this.required.equals(required);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return  this.required.equals(required);	  return    selected.equals(required);    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
135	[BUG]  [BUGGY]  return(optionMap!=  null)||(required  <  optionMap.size());  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            ComparisonFailure    [CONTEXT]    public  boolean  isRequired()  {    [BUGGY]  return(optionMap!=  null)||(required  <  optionMap.size());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	131	131	3	replace	return(optionMap!=  null)||(required  <  optionMap.size());	  return(required    >    0)||(required    <    optionMap.size());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	4	None	replace
