bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.get(selected);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(selected);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(selected);	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.get(0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(0);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(0);	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.get(key);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(key);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(key);	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.get(this);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(this);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(this);	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
6	[BUG]  [BUGGY]  String  selected  =  options.getText()  + "n ";  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getText()  + "n ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getText()  + "n ";	  String    selected    =    options.getText();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
7	[BUG]  [BUGGY]  if(selected!=  null  &&  selection.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  selection  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selection.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selection.equals(option.getOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    if(selected!=    null    &&    selection.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  selection	79	None	replace
8	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	83	6	replace
9	[BUG]  [BUGGY]  String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [FE]  AlreadySelectedException  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	83	6	replace
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  ComparisonFailure  	83	6	replace
11	[BUG]  [BUGGY]  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  ComparisonFailure  	83	6	replace
12	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selected.equals(option.getLowerCase()))  {	  if(selected!=    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
13	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(optionMap.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(optionMap.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(optionMap.getLowerCase()))  {	  if(selected!=    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
14	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerOpt()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLowerOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getUpperOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
15	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLowerOpt()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLowerOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getLowerOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getUpperOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
16	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getUpperOpt()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getUpperOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getUpperOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getUpperOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
17	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    this    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
18	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    this    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
19	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    this    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
20	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null  ||  option.equals(option.getOpt()))  {  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null  ||  option.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected);  if(option!=  null  ||  option.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    Option    option    =    optionMap.get(selected);    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	84	None	replace
21	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected);  if(option!=  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    Option    option    =    optionMap.get(selected);    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	84	None	replace
22	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getName()  +  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getName()  +  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getName()  +  1);	  String    selected    =    optionMap.get(option.getName());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
23	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getLocalName());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getLocalName());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getLocalName());	  String    selected    =    optionMap.get(option.getName());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
24	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getName(),  selected);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getName(),  selected);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getName(),  selected);	  String    selected    =    optionMap.get(option.getName());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
25	[BUG]  [BUGGY]  If(selected!=  null  &&  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  If(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	If(selected!=  null  &&  selected.equals(option.getOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    If(selected!=    null    &&    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	7	None	replace
26	[BUG]  [BUGGY]  If(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]                AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  If(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	If(selected  ==  null  &&  selected.equals(option.getOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    If(selected!=    null    &&    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	7	None	replace
27	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  If(selected!=  null  &&  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]                  AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  If(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  If(selected!=  null  &&  selected.equals(option.getOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    If(selected!=    null    &&    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  If(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]                    AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  If(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	If(selected!=  null  ||  selected.equals(option.getOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    If(selected!=    null    &&    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	7	None	replace
29	[BUG]  [BUGGY]  String  option  =  option.getText()  + "n ";  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  option  =  option.getText()  + "n ";  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  option  =  option.getText()  + "n ";	  String    option    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
30	[BUG]  [BUGGY]  String  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  option  =  option.getOpt();  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  option  =  option.getOpt();	  String    option    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
31	[BUG]  [BUGGY]  String  option  =  option.getText(),  selected);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  option  =  option.getText(),  selected);  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  option  =  option.getText(),  selected);	  String    option    =    option.getText();    	non-compiled	[CE]  	73	None	replace
32	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getUpperCase()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getUpperCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(optionMap.getUpperCase()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
33	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(optionMap.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  this.selected.equals(optionMap.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  this.selected.equals(optionMap.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
34	[BUG]  [BUGGY]  String  selected  =  options.getSelectedValue();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getSelectedValue();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getSelectedValue();	  String    selected    =    options.getName();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
35	[BUG]  [BUGGY]  String  selected  =  options.getSelectedName();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getSelectedName();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getSelectedName();	  String    selected    =    options.getName();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
36	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
37	[BUG]  [BUGGY]  while(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  while(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	while(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
38	[BUG]  [BUGGY]  while(optionMap.keySet()!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  while(optionMap.keySet()!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	while(optionMap.keySet()!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
39	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelected();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelected();	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
40	[BUG]  [BUGGY]  if(this.selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(this.selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(this.selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
41	[BUG]  [BUGGY]  if(this.selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(this.selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(this.selected  ==  null  ||  selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
42	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  String  selection  =  option.getKey();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelected();  String  selection  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelected();  String  selection  =  option.getKey();	          String    selected    =    option.getKey();    String    selection    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
43	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  String  selection  =  option.getKey();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedValue();  String  selection  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue();  String  selection  =  option.getKey();	          String    selected    =    option.getKey();    String    selection    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
44	[BUG]  [BUGGY]  String  selected  =  option.getText();  String  selection  =  option.getKey();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText();  String  selection  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText();  String  selection  =  option.getKey();	          String    selected    =    option.getKey();    String    selection    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
45	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  String  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  String  selected  =  option.getLongOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  String  selected  =  option.getLongOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
46	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  String  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  String  selected  =  option.getLongOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  String  selected  =  option.getLongOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
47	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
48	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "   ";  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText()  + "   ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + "   ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "_ ";  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText()  + "_ ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + "_ ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  String  selected  =  option.getText()  + ";n ";  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText()  + ";n ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + ";n ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  String  selected  =  option.getSelectedKey();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedKey();	  String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getName()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=    null    ||    selected.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
53	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getName()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=    null    ||    selected.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
54	[BUG]  [BUGGY]  if(option.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  Token  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getType()  ==  Token.NAME)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getType()  ==  Token.NAME)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  Token	11	None	replace
55	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected!=  null)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	11	6	replace
56	[BUG]  [BUGGY]  if(selected!=  null)  {  [FE]  AlreadySelectedException  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	11	6	replace
57	[BUG]  [BUGGY]  if(option.getSelectedIndex()!=  0)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getSelectedIndex()!=  0)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getSelectedIndex()!=  0)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
58	[BUG]  [BUGGY]  if(option.isSelected())  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.isSelected())  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.isSelected())  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
59	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	for(String  option  :  options.keySet())  {  selected  =  option.getString();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getString();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	25	None	replace
60	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getString();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	25	None	replace
61	[BUG]  [BUGGY]  if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getString();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	25	None	replace
62	[BUG]  [BUGGY]  String  selected  =  option.getLowerCase();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getLowerCase();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getLowerCase();	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(selected.toLowerCase());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(selected.toLowerCase());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(selected.toLowerCase());	  Option    option    =    optionsMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
64	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(selected  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(selected  +  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(selected  +  1);	  Option    option    =    optionsMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
65	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(selected.toString());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(selected.toString());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(selected.toString());	  Option    option    =    optionsMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
66	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalName()))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocalName()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=    null    ||    selected.equals(option.getLocalName()))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
67	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getLocalName()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=    null    ||    selected.equals(option.getLocalName()))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
68	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
69	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
70	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    if(selected!=  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
71	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  >=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  >=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  >=  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
72	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  select.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  select.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    if(selected!=  null  ||  select.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
73	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getOpt());	  String    selected    =    optionMap.getName();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
74	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getSelectedIndex());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getSelectedIndex());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getSelectedIndex());	  String    selected    =    optionMap.getName();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  option.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected  ==  null  ||  option.equals(option.getOpt()))  {	  if(select    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
76	[BUG]  [BUGGY]  if(selected  ==  null  ||  option.equals(option.getOpt()))  {  [FE]  ComparisonFailure  [FE]          NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  option.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  option.equals(option.getOpt()))  {	  if(select    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	96	3	replace
77	[BUG]  [BUGGY]  if(selected  ==  null  ||  options.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  options  [FE]            NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  options.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  options.equals(option.getOpt()))  {	  if(select    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  options	96	None	replace
78	[BUG]  [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  selection  [FE]              NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selection.equals(option.getOpt()))  {	  if(select    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  selection	96	None	replace
79	[BUG]  [BUGGY]  String  selected  =  option.getSelectedIndex()  +  1;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedIndex()  +  1;  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedIndex()  +  1;	  String    selected    =    option.getSelectedIndex();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
80	[BUG]  [BUGGY]  String  selected  =  option.getSelectedIndex()  -  1;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedIndex()  -  1;  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedIndex()  -  1;	  String    selected    =    option.getSelectedIndex();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
81	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(this.selected);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(this.selected);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(this.selected);	  Option    option    =    optionMap.get(this.selected);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
82	[BUG]  [BUGGY]  Option  option  =  optionMap.get(this.selected,  selected);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(this.selected,  selected);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(this.selected,  selected);	  Option    option    =    optionMap.get(this.selected);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
83	[BUG]  [BUGGY]  Option  option  =  optionMap.get(this.selected,  this.selected);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(this.selected,  this.selected);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(this.selected,  this.selected);	  Option    option    =    optionMap.get(this.selected);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
84	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getKey(),  selected);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(option.getKey(),  selected);  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(option.getKey(),  selected);	  optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
85	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  selected);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  optionMap.put(option.getKey(),  selected);  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  optionMap.put(option.getKey(),  selected);	  optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  	98	None	replace
86	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getSelectedString());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getSelectedString());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getSelectedString());	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
87	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedValue();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getSelectedValue();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getSelectedValue();	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
88	[BUG]  [BUGGY]  String  selected  =  option.getName()  + "null ";  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName()  + "null ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + "null ";	  String    selected    =    option.getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
89	[BUG]  [BUGGY]  String  selected  =  option.getName()  + "_ ";  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName()  + "_ ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + "_ ";	  String    selected    =    option.getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
90	[BUG]  [BUGGY]  String  selected  =  option.getName()  + "= ";  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName()  + "= ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + "= ";	  String    selected    =    option.getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
91	[BUG]  [BUGGY]  OptionOpt  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  OptionOpt  option  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	OptionOpt  option  =  option.getOpt();	          String    selected    =    option.getOpt();    OptionOpt    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
92	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  OptionOpt  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelected();  OptionOpt  option  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelected();  OptionOpt  option  =  option.getOpt();	          String    selected    =    option.getOpt();    OptionOpt    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
93	[BUG]  [BUGGY]  String  selected  =  option.getOpt()  +  1;  OptionOpt  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getOpt()  +  1;  OptionOpt  option  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getOpt()  +  1;  OptionOpt  option  =  option.getOpt();	          String    selected    =    option.getOpt();    OptionOpt    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(option.getOpt()  ==  null)  {	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	65	6	replace
95	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  [FE]  ComparisonFailure  [FE]          AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	65	6	replace
96	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(option.getOpt()!=  null)  {	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	65	3	replace
97	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  [FE]  AlreadySelectedException  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	65	3	replace
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected  ==  null)  {	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	65	3	replace
99	[BUG]  [BUGGY]  if(selected  ==  null)  {  [FE]  ComparisonFailure  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null)  {	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	65	3	replace
100	[BUG]  [BUGGY]  if(option.getSelectedIndex()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getSelectedIndex()  ==  0)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getSelectedIndex()  ==  0)  {	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
101	[BUG]  [BUGGY]  String  selected  =  option.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.toString()  + "n ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.toString()  + "n ";	  String    selected    =    option.toString();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
102	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    String  selected  =  option.getOpt();  String  select  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	59	None	add
103	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    String  selected  =  option.getOpt();  String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	59	None	add
104	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
105	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]          ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    String  selected  =  option.getOpt();  String  selection  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	59	None	add
106	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  seq  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  String  seq  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    String  selected  =  option.getOpt();  String  seq  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	59	None	add
107	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  select  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  select.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  select.equals(option.getOpt()))  {	  if(selected    ==    null    ||    select.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol  select	88	None	replace
108	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
109	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getOpt()))    {    if(selected!=  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
110	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getLocation()))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
111	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getLocalName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
112	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getName()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
113	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  String  select  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelected();  String  select  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelected();  String  select  =  option.getOpt();	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
114	[BUG]  [BUGGY]  String  selected  =  option.getSelectedIndex();  String  select  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedIndex();  String  select  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedIndex();  String  select  =  option.getOpt();	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
115	[BUG]  [BUGGY]  String  selected  =  option.getName();  String  select  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName();  String  select  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName();  String  select  =  option.getOpt();	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
116	[BUG]  [BUGGY]  String  selected  =  option.getKey();  String  select  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  String  select  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  String  select  =  option.getOpt();	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
117	[BUG]  [BUGGY]  Option  option  =  this.optionMap.get(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  this.optionMap.get(option);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  this.optionMap.get(option);	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
118	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(this.option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(this.option);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(this.option);	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
119	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase(),  required);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase(),  required);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected.toLowerCase(),  required);	  Option    option    =    optionMap.get(selected.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
120	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase(),  true);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected.toLowerCase(),  true);	  Option    option    =    optionMap.get(selected.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
121	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.toUpperCase());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected.toUpperCase());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected.toUpperCase());	  Option    option    =    optionMap.get(selected.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selected.equals(option.getLocalPart()))  {	  if(selected    ==    null    &&    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
123	[BUG]  [BUGGY]  String  selected  =  optionMap.getText(option.getOpt());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getText(option.getOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getText(option.getOpt());	  String    selected    =    optionMap.getText();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
124	[BUG]  [BUGGY]  String  selected  =  optionMap.getText()  + "n ";  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getText()  + "n ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getText()  + "n ";	  String    selected    =    optionMap.getText();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
125	[BUG]  [BUGGY]  if(selected!=  null  &&  option.equals(selected.getLocation()))  {  [CE]  cannot  find  symbol  [FE]        AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  option.equals(selected.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  option.equals(selected.getLocation()))  {	  if(selected!=    null    &&    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
126	[BUG]  [BUGGY]  if(selected!=  null  &&  option.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]          AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  option.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  option.equals(option.getLocation()))  {	  if(selected!=    null    &&    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
127	[BUG]  [BUGGY]  if(selected!=  null  &&  options.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  options.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  options.equals(option.getLocation()))  {	  if(selected!=    null    &&    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
128	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option.getOpt()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  isSelected(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  isSelected(option.getOpt()))  {	  if(selected    ==    null    ||    isSelected(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
129	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(optionMap.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  isSelected(optionMap.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  isSelected(optionMap.getLowerCase()))  {	  if(selected    ==    null    ||    isSelected(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
130	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option,  option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  isSelected(option,  option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  isSelected(option,  option.getLowerCase()))  {	  if(selected    ==    null    ||    isSelected(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
131	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getKey();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  chosen  =  option.getKey();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
132	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  chosen  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
133	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getLowerCase();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getLowerCase();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  chosen  =  option.getLowerCase();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
134	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  selected  =  option.getKey();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]          AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  selected  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  selected  =  option.getKey();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
135	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getLocation();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]            AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getLocation();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  chosen  =  option.getLocation();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
136	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getSelectedIndex()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getSelectedIndex()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getSelectedIndex()))  {	          String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
137	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  String  key  =  option.getKey();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedValue();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue();  String  key  =  option.getKey();	          String    selected    =    option.getKey();    String    key    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
138	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  String  key  =  option.getKey();  [CE]  illegal  start  of  type  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelected();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelected();  String  key  =  option.getKey();	          String    selected    =    option.getKey();    String    key    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
139	[BUG]  [BUGGY]  String  selected  =  option.getSelectedKey();  String  key  =  option.getKey();  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedKey();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedKey();  String  key  =  option.getKey();	          String    selected    =    option.getKey();    String    key    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
140	[BUG]  [BUGGY]  String  selected  =  option.getText()  + ".: ";  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText()  + ".: ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + ".: ";	  String    selected    =    option.getText()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
141	[BUG]  [BUGGY]  String  selected  =  option.getText()  + ": "+selected;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText()  + ": "+selected;  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + ": "+selected;	  String    selected    =    option.getText()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
142	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(select);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(select);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(select);	  Option    option    =    optionMap.get(select);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
143	[BUG]  [BUGGY]  Option  option  =  optionMap.get(select  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(select  +  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(select  +  1);	  Option    option    =    optionMap.get(select);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
144	[BUG]  [BUGGY]  String  selected  =  option.getOpt();  this.selected  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getOpt();  this.selected  =  option.getOpt();	          String    selected    =    option.getOpt();    char    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
145	[BUG]  [BUGGY]  String  selected  =  option.getOpt();  Object  selected  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getOpt();  Object  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getOpt();  Object  selected  =  option.getOpt();	          String    selected    =    option.getOpt();    char    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
146	[BUG]  [BUGGY]  String  selected  =  Option.getKey();  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  Option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  Option.getKey();	          String    selected    =    option.getKey();    String    selected    =    Option.getKey();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
147	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
148	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getLongOpt()))    {    if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
149	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
150	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  >=  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  >=  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getLongOpt()))    {    if(selected  >=  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
151	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
152	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getKey());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getKey());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getKey());	  String    selected    =    optionMap.getString();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
153	[BUG]  [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	If(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    If(selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
154	[BUG]  [BUGGY]  String  selected  =  option.getSelectedName()  + ", ";  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedName()  + ", ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedName()  + ", ";	  String    selected    =    option.getSelectedName();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
155	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getLocalPart()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(optionMap.getLocalPart()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
156	[BUG]  [BUGGY]  String  selected  =  option.getSelectedName()  + ": ";  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedName()  + ": ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedName()  + ": ";	  String    selected    =    option.getName()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
157	[BUG]  [BUGGY]  String  selected  =  option.getName()  + ".: ";  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName()  + ".: ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + ".: ";	  String    selected    =    option.getName()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
158	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    setSelected(option.getOpt());    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
159	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    setSelected(option.getOpt());    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
160	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  type  [FE]                  AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    setSelected(option.getOpt());    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
161	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getValue();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None	replace
162	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getValue();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None	replace
163	[BUG]  [BUGGY]  while(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  while(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	while(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getValue();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None	replace
164	[BUG]  [BUGGY]  String  selected  =  option.getShortOpt();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getShortOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getShortOpt();	  String    selected    =    option.getLongOpt();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
165	[BUG]  [BUGGY]  if(select  ==  null  ||  select.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  select  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null  ||  select.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null  ||  select.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    select.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol  select	68	None	replace
166	[BUG]  [BUGGY]  Option  option  =  options.get(this.option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(this.option);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(this.option);	  Option    option    =    optionMap.get(this.option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
167	[BUG]  [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  ';'  expected	19	None	replace
168	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]        AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
169	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]          AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
170	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
171	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  type  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
172	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  -  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected  -  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected  -  1);	  Option    option    =    optionMap.get(selected    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
173	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.getOption();  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
174	[BUG]  [BUGGY]  option  =  option.getOption();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  option  =  option.getOption();  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	option  =  option.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
175	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.getOption();  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
176	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected,  selected);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected,  selected);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected,  selected);	  Option    option    =    optionMap.get(selected,    required);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
177	[BUG]  [BUGGY]  Option  option  =  optionMap.get(required,  selected);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(required,  selected);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(required,  selected);	  Option    option    =    optionMap.get(selected,    required);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
178	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected,  null);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected,  null);	  Option    option    =    optionMap.get(selected,    required);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
179	[BUG]  [BUGGY]  Option  option  =  optionMap.get(this.selected,  required);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(this.selected,  required);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(this.selected,  required);	  Option    option    =    optionMap.get(selected,    required);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
180	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  selection  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	57	None	add
181	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	57	None	add
182	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
183	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selector  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]          ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selector  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  selector  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	57	None	add
184	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  s  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  s  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  s  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	57	None	add
185	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getLongOpt()))    {    if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
186	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
187	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  If(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  ';'  expected  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  If(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getLongOpt()))    {    If(selected!=  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  ';'  expected	62	None	add
188	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  >=  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]          AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected  >=  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getLongOpt()))    {    if(selected  >=  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
189	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]            AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getLongOpt()))    {    if(selected!=  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
190	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(option.getOpt());	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
191	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  Option  option  =  optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedValue();  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue();  Option  option  =  optionMap.get(option.getOpt());	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
192	[BUG]  [BUGGY]  String  selected  =  option.getText();  Option  option  =  optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText();  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText();  Option  option  =  optionMap.get(option.getOpt());	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
193	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getKey();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  selected  =  option.getKey();  String  key  =  option.getKey();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	37	None	add
194	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getLowerCase();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getLowerCase();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  selected  =  option.getKey();  String  key  =  option.getLowerCase();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	37	None	add
195	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getString();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getString();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  selected  =  option.getKey();  String  key  =  option.getString();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	37	None	add
196	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  Option.getKey();  String  key  =  option.getKey();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]          AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  Option.getKey();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  selected  =  Option.getKey();  String  key  =  option.getKey();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	37	None	add
197	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selection  =  option.getKey();  String  key  =  option.getKey();  [CE]  variable  key  is  already  defined  in  method  setSelected(Option)  [FE]            AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selection  =  option.getKey();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  selection  =  option.getKey();  String  key  =  option.getKey();	  	non-compiled	[CE]  variable  key  is  already  defined  in  method  setSelected(Option)	37	None	add
198	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(optionMap.getLocation()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(optionMap.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(optionMap.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
199	[BUG]  [BUGGY]  if(selected  ==  null  ||  options.equals(optionMap.getLocation()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  options.equals(optionMap.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  options.equals(optionMap.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
200	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(optionMap.getLocation()))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  isSelected(optionMap.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  isSelected(optionMap.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
201	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
202	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getKey();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getKey();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
203	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getLowerCase();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getLowerCase();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getLowerCase();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
204	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getSelected();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]          AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getSelected();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getSelected();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
205	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getLocation();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]            AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getLocation();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getLocation();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
206	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelected();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelected();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
207	[BUG]  [BUGGY]  String  selected  =  option.getSelectedIndex();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedIndex();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedIndex();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
208	[BUG]  [BUGGY]  String  selected  =  option.getKey();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
209	[BUG]  [BUGGY]  String  selected  =  option.getName();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
210	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(optionMap.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  select.equals(optionMap.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  select.equals(optionMap.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
211	[BUG]  [BUGGY]  if(selected  ==  null  ||  option.equals(optionMap.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  option.equals(optionMap.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  option.equals(optionMap.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
212	[BUG]  [BUGGY]  if(selected  ==  null  ||  selection.equals(optionMap.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selection.equals(optionMap.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selection.equals(optionMap.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
213	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {	          String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
214	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {	          String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
215	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {	          String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
216	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {	          String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
217	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  [CE]  ')'  expected  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    setSelected(option.getOpt());    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ')'  expected	67	None	replace
218	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  [CE]  ')'  expected  [FE]                AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    setSelected(option.getOpt());    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ')'  expected	67	None	replace
219	[BUG]  [BUGGY]  String  selected  =  options.getSelectedString()  + "n ";  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getSelectedString()  + "n ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getSelectedString()  + "n ";	  String    selected    =    options.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(option!=  null)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
221	[BUG]  [BUGGY]  if(option!=  null)  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option!=  null)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	9	3	replace
222	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option  ==  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(option  ==  null)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	9	6	replace
223	[BUG]  [BUGGY]  if(option  ==  null)  {  [FE]  AlreadySelectedException  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option  ==  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option  ==  null)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	9	6	replace
224	[BUG]  [BUGGY]  if(option.hasOpt())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.hasOpt())  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.hasOpt())  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
225	[BUG]  [BUGGY]  if(option.getOptions()!=  null)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOptions()!=  null)  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOptions()!=  null)  {	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
226	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  If(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  If(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    If(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  ';'  expected	94	None	add
227	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getName(),  options);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getName(),  options);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getName(),  options);	  String    selected    =    optionMap.get(option.getName());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
228	[BUG]  [BUGGY]  if(selected  ==  null  ||  option.equals(optionMap.getLocation()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  option.equals(optionMap.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  option.equals(optionMap.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
229	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(optionMap.getLocation()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  select.equals(optionMap.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  select.equals(optionMap.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
230	[BUG]  [BUGGY]  if(selected  ==  null  ||  selector.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selector.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selector.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selection.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
231	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  if(selected  ==  null)  {  selected  =  option.getKey();  String  selection  =  option.getKey();  }  [CE]  variable  selection  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  if(selected  ==  null)  {  selected  =  option.getKey();  String  selection  =  option.getKey();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    if(selected  ==  null)  {  selected  =  option.getKey();  String  selection  =  option.getKey();  }	  	non-compiled	[CE]  variable  selection  is  already  defined  in  method  setSelected(Option)	32	None	add
232	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getValue();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getValue();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getValue();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
233	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  if(selected  ==  null)  {  selected  =  option.getKey();  String  selection  =  option.getOpt();  }  [CE]  variable  selection  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  if(selected  ==  null)  {  selected  =  option.getKey();  String  selection  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    if(selected  ==  null)  {  selected  =  option.getKey();  String  selection  =  option.getOpt();  }	  	non-compiled	[CE]  variable  selection  is  already  defined  in  method  setSelected(Option)	32	None	add
234	[BUG]  [BUGGY]  String  selected  =  option.getText()  /   ": ";  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText()  /   ": ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  /   ": ";	  String    selected    =    option.getText()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
235	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null)  {  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null)  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected);  if(option!=  null)  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    Option    option    =    optionMap.get(selected);    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	84	None	replace
236	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected);  if(option  ==  null)  {  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected);  if(option  ==  null)  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected);  if(option  ==  null)  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    Option    option    =    optionMap.get(selected);    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	84	None	replace
237	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected);  if(option  ==  null  ||  option.equals(option.getOpt()))  {  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected);  if(option  ==  null  ||  option.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected);  if(option  ==  null  ||  option.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    Option    option    =    optionMap.get(selected);    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	84	None	replace
238	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  if(option!=  null)  {  selected  =  option.getKey();  String  chosen  =  option.getKey();  }  [CE]  variable  chosen  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  if(option!=  null)  {  selected  =  option.getKey();  String  chosen  =  option.getKey();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    if(option!=  null)  {  selected  =  option.getKey();  String  chosen  =  option.getKey();  }	  	non-compiled	[CE]  variable  chosen  is  already  defined  in  method  setSelected(Option)	35	None	add
239	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  if(option!=  null)  {  selected  =  option.getKey();  String  selected  =  option.getKey();  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  if(option!=  null)  {  selected  =  option.getKey();  String  selected  =  option.getKey();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    if(option!=  null)  {  selected  =  option.getKey();  String  selected  =  option.getKey();  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
240	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  if(option!=  null)  {  selected  =  option.getKey();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    if(option!=  null)  {  selected  =  option.getKey();  }	  	compilable	  [FE]  AlreadySelectedException  	35	6	add
241	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  if(option!=  null)  {  selected  =  option.getKey();  }  [FE]  AlreadySelectedException  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  if(option!=  null)  {  selected  =  option.getKey();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    if(option!=  null)  {  selected  =  option.getKey();  }	  	compilable	  [FE]  AlreadySelectedException  	35	6	add
242	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    If(selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
243	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected!=  null  ||  selected.equals(option.getOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    If(selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
244	[BUG]  [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	If(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    If(selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
245	[BUG]  [BUGGY]  if(this.selected  ==  null  ||  option.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(this.selected  ==  null  ||  option.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(this.selected  ==  null  ||  option.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
246	[BUG]  [BUGGY]  if(select  ==  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  select  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null  ||  selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    select.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol  select	68	None	replace
247	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  select.equals(option.getLocalPart()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
248	[BUG]  [BUGGY]  if(selected  ==  null  ||  option.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  option.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  option.equals(option.getLocalPart()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
249	[BUG]  [BUGGY]  if(select  ==  null  ||  select.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  select  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null  ||  select.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null  ||  select.equals(option.getLocation()))  {	  if(selected    ==    null    ||    select.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol  select	88	None	replace
250	[BUG]  [BUGGY]  String  option  =  option.getText(),  selected;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  option  =  option.getText(),  selected;  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  option  =  option.getText(),  selected;	  String    option    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
251	[BUG]  [BUGGY]  String  option  =  option.toString();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  option  =  option.toString();  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  option  =  option.toString();	  String    option    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
252	[BUG]  [BUGGY]  Option  option  =  options.get(option.getKey());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(option.getKey());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(option.getKey());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
253	[BUG]  [BUGGY]  Option  option  =  options.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(option.getOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(option.getOpt());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
254	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected,  this.required);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected,  this.required);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected,  this.required);	  Option    option    =    optionMap.get(selected,    required);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
255	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getId());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getId());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getId());	  String    selected    =    optionMap.getName();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
256	[BUG]  [BUGGY]  String  selected  =  option.getLongOpt();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getLongOpt();  String  selection  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getLongOpt();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
257	[BUG]  [BUGGY]  if(selected!=  null  ||  select.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  ||  select.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  select.equals(option.getLowerCase()))  {	  if(selected!=    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
258	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  +  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(option.getOpt()  +  1);	  Option    option    =    optionMap.get(selected    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
259	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  [CE]  ')'  expected  [FE]        AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
260	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  [CE]  ')'  expected  [FE]          AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
261	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	compilable	  [FE]  AlreadySelectedException  	64	6	replace
262	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [FE]  AlreadySelectedException  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    chosen    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	compilable	  [FE]  AlreadySelectedException  	64	6	replace
263	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(selected  -  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(selected  -  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(selected  -  1);	  Option    option    =    optionsMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
264	[BUG]  [BUGGY]  String  selected  =  option.getSelectedName()  + "n ";  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedName()  + "n ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedName()  + "n ";	  String    selected    =    option.getSelectedName();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
265	[BUG]  [BUGGY]  String  selected  =  option.getName()  + "noSelected ";  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName()  + "noSelected ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + "noSelected ";	  String    selected    =    option.getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
266	[BUG]  [BUGGY]  Option  option  =  optionMap.get(this.selected  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(this.selected  +  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(this.selected  +  1);	  Option    option    =    optionMap.get(this.selected);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
267	[BUG]  [BUGGY]  Option  option  =  optionMap.get(this.selected  -  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(this.selected  -  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(this.selected  -  1);	  Option    option    =    optionMap.get(this.selected);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
268	[BUG]  [BUGGY]  if(selected  ==  null  ||  selector.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selector.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selector.equals(option.getLocation()))  {	  if(selected    ==    null    ||    selection.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
269	[BUG]  [BUGGY]  Option  option  =  optionMap.get(select  -  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(select  -  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(select  -  1);	  Option    option    =    optionMap.get(select);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
270	[BUG]  [BUGGY]  String  selected  =  options.getOpt();  OptionOpt  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getOpt();  OptionOpt  option  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getOpt();  OptionOpt  option  =  option.getOpt();	          String    selected    =    option.getOpt();    OptionOpt    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
271	[BUG]  [BUGGY]  String  selected  =  option.getOpt();  OptionsOpt  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getOpt();  OptionsOpt  option  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getOpt();  OptionsOpt  option  =  option.getOpt();	          String    selected    =    option.getOpt();    OptionOpt    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
272	[BUG]  [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getString();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	25	None	replace
273	[BUG]  [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  chosen  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  chosen  =  option.getString();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option!=  null)  {  for(String  option  :  options.keySet())  {  chosen  =  option.getString();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getString();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	25	None	replace
274	[BUG]  [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selection  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selection  =  option.getString();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option!=  null)  {  for(String  option  :  options.keySet())  {  selection  =  option.getString();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getString();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	25	None	replace
275	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getLongOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	String  selected  =  option.getLongOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  ComparisonFailure  	83	6	replace
276	[BUG]  [BUGGY]  String  selected  =  option.getLongOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getLongOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getLongOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  ComparisonFailure  	83	6	replace
277	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedKey();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getSelectedKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getSelectedKey();	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
278	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(option  ==  null  &&  option.getLongOpt().equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  if(option  ==  null  &&  option.getLongOpt().equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getLongOpt()))    {    if(option  ==  null  &&  option.getLongOpt().equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
279	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getLongOpt()))    {    If(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  ';'  expected	52	None	add
280	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	59	None	add
281	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue()  +  1;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getSelectedValue()  +  1;  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue()  +  1;	  String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
282	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getLongOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getLongOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	for(String  option  :  options.keySet())  {  selected  =  option.getLongOpt();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
283	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  this.selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  for(String  option  :  options.keySet())  {  this.selected  =  option.getOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	for(String  option  :  options.keySet())  {  this.selected  =  option.getOpt();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
284	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getLowerCase();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  for(String  option  :  options.keySet())  {  selected  =  option.getLowerCase();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	for(String  option  :  options.keySet())  {  selected  =  option.getLowerCase();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
285	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	57	None	add
286	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  key  =  option.getKey();  [CE]  variable  key  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  key  =  option.getKey();	  	non-compiled	[CE]  variable  key  is  already  defined  in  method  setSelected(Option)	37	None	add
287	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  option  =  option.getKey();  String  key  =  option.getKey();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  option  =  option.getKey();  String  key  =  option.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  option  =  option.getKey();  String  key  =  option.getKey();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	37	None	add
288	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  Option  option  =  optionMap.get(key);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  Option  option  =  optionMap.get(key);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    Option  option  =  optionMap.get(key);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	37	None	add
289	[BUG]  [BUGGY]  String  selected  =  option.getName()  + ": "+selected;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName()  + ": "+selected;  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + ": "+selected;	  String    selected    =    option.getName()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
290	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  If(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  If(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    &&    selected.equals(option.getOpt()))    {    If(selected  ==  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  ';'  expected	27	None	add
291	[BUG]  [BUGGY]  if(selected!=  null  &&  selection.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]        AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selection.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selection.equals(option.getLocation()))  {	  if(selected!=    null    &&    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
292	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getKey());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionsMap.get(option.getKey());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(option.getKey());	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
293	[BUG]  [BUGGY]  String  selected  =  options.getKey();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getKey();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getKey();	  String    selected    =    options.getName();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
294	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    this    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	66	None	replace
295	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [CE]  cannot  assign  a  value  to  final  variable  this  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    this    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  this	66	None	replace
296	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  type  [FE]                AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    this    =    option.getOpt();    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
297	[BUG]  [BUGGY]  String  selected  =  option.getKey();  Option  option  =  optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey();  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey();  Option  option  =  optionMap.get(option.getOpt());	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
298	[BUG]  [BUGGY]  if(option  ==  null  ||  isSelected(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option  ==  null  ||  isSelected(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option  ==  null  ||  isSelected(option.getLowerCase()))  {	  if(selected    ==    null    ||    isSelected(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
299	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option,  options.getLowerCase()))  {  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  isSelected(option,  options.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  isSelected(option,  options.getLowerCase()))  {	  if(selected    ==    null    ||    isSelected(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol  options	70	None	replace
300	[BUG]  [BUGGY]  String  selected  =  option.getLongOpt();  String  select  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getLongOpt();  String  select  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getLongOpt();  String  select  =  option.getOpt();	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
301	[BUG]  [BUGGY]  char  selected  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  char  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	char  selected  =  option.getOpt();	          String    selected    =    option.getOpt();    char    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
302	[BUG]  [BUGGY]  int  selected  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  int  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	int  selected  =  option.getOpt();	          String    selected    =    option.getOpt();    char    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
303	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  select.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  select.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getLongOpt()))    {    if(selected!=  null  &&  select.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
304	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selection.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  if(selected!=  null  &&  selection.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getLongOpt()))    {    if(selected!=  null  &&  selection.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
305	[BUG]  [BUGGY]  String  selected  =  options.getString()  + "n ";  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getString()  + "n ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getString()  + "n ";	  String    selected    =    options.getString();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
306	[BUG]  [BUGGY]  String  selected  =  optionMap.getText(option.getLocation());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getText(option.getLocation());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getText(option.getLocation());	  String    selected    =    optionMap.getText();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
307	[BUG]  [BUGGY]  Option  option  =  option.getOption(this);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  option.getOption(this);  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  option.getOption(this);	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
308	[BUG]  [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getValue();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None	replace
309	[BUG]  [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getKey();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getKey();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getKey();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getValue();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None	replace
310	[BUG]  [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  chosen  =  option.getValue();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option!=  null)  {  for(String  option  :  options.keySet())  {  chosen  =  option.getValue();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option!=  null)  {  for(String  option  :  options.keySet())  {  chosen  =  option.getValue();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getValue();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None	replace
311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  ComparisonFailure  	59	6	add
312	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  select  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    select    =    option.getOpt();    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  ComparisonFailure  	59	6	add
313	[BUG]  [BUGGY]  String  selected  =  Option.getKey(option.getKey());  [CE]  illegal  start  of  type  [FE]            AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  Option.getKey(option.getKey());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  Option.getKey(option.getKey());	          String    selected    =    option.getKey();    String    selected    =    Option.getKey();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
314	[BUG]  [BUGGY]  String  option  =  option.getKey();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  option  =  option.getKey();  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  option  =  option.getKey();	  String    option    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
315	[BUG]  [BUGGY]  String  selected  =  option.getKey()  + ": ";  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getKey()  + ": ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getKey()  + ": ";	  String    selected    =    option.getName()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
316	[BUG]  [BUGGY]  String  selected  =  options.getText()  + ", ";  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  options.getText()  + ", ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getText()  + ", ";	  String    selected    =    options.getText();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
317	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "null ";  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getText()  + "null ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + "null ";	  String    selected    =    option.getText()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
318	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  this);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  optionMap.put(option.getKey(),  this);  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	optionMap.put(option.getKey(),  this);	  optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
319	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  optionMap.put(option.getKey(),  options);  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	optionMap.put(option.getKey(),  options);	  optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
320	[BUG]  [BUGGY]  if(select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
321	[BUG]  [BUGGY]  if(select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
322	[BUG]  [BUGGY]  if(select  ==  null  ||  select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null  ||  select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null  ||  select  ==  null)  {  String  selected  =  option.getOpt();  String  select  =  option.getOpt();  }	          String    selected    =    option.getOpt();    String    select    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
323	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
324	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
325	[BUG]  [BUGGY]  if(option.getOpt()!=  option.getOpt())  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  option.getOpt())  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  option.getOpt())  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
326	[BUG]  [BUGGY]  if(option.getOpt()!=  this)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  this)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  this)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  }	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
327	[BUG]  [BUGGY]  if(selected  ==  null  ||  selection.equals(optionMap.getLocation()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selection.equals(optionMap.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selection.equals(optionMap.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
328	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap,  option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap,  option.getLocation()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(optionMap,  option.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(optionMap.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
329	[BUG]  [BUGGY]  if(selected!=  null  &&  select.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  select.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  select.equals(option.getLowerCase()))  {	  if(selected!=    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
330	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getLongOpt());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.get(option.getLongOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getLongOpt());	  String    selected    =    optionMap.getString();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
331	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [CE]  method  setSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;  [FE]              AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    setSelected(option.getOpt());    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  method  setSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;	67	None	replace
332	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [CE]  method  setSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;  [FE]                AlreadySelectedException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getKey();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }	          String    selected    =    option.getKey();    String    selected    =    option.getKey();    if    (selected    ==    null    ||    selected.equals(option.getOpt()))    {    setSelected(option.getOpt());    }    else    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  method  setSelected  in  class  OptionGroup  cannot  be  applied  to  given  types;	67	None	replace
333	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  if(option!=  null)  {  String  selected  =  option.getKey();  String  key  =  option.getKey();  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  if(option!=  null)  {  String  selected  =  option.getKey();  String  key  =  option.getKey();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    if(option!=  null)  {  String  selected  =  option.getKey();  String  key  =  option.getKey();  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	37	None	add
334	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getKey();  if(selected  ==  null  ||  key.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  key  =  option.getKey();  String  selected  =  option.getKey();  String  key  =  option.getKey();  if(selected  ==  null  ||  key.equals(option.getOpt()))  {  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    key    =    option.getKey();    String  selected  =  option.getKey();  String  key  =  option.getKey();  if(selected  ==  null  ||  key.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
335	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected,  false);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected,  false);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected,  false);	  Option    option    =    optionMap.get(selected,    required);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
336	[BUG]  [BUGGY]  if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getValue();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None	replace
337	[BUG]  [BUGGY]  String  selected  =  optionMap.getText(option.getLongOpt());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getText(option.getLongOpt());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getText(option.getLongOpt());	  String    selected    =    optionMap.getText();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
338	[BUG]  [BUGGY]  if(optionMap!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(optionMap!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(optionMap!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getString();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	25	None	replace
339	[BUG]  [BUGGY]  Option  option  =  options.get(select);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  options.get(select);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(select);	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
340	[BUG]  [BUGGY]  if(select  ==  null  ||  select.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  select  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null  ||  select.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null  ||  select.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected    ==    null    ||    select.equals(option.getLongOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  select	85	None	replace
341	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  this.selected.equals(option.getLocalPart()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
342	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  isSelected(option.getLocalPart()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  isSelected(option.getLocalPart()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
343	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getLongOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getLongOpt();  }	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String    selected    =    option.getLongOpt();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
344	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getLongOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getLongOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getLongOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
345	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getRawClass();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  selection  =  option.getKey();  String  selected  =  option.getKey();  String  selection  =  option.getRawClass();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    selection    =    option.getKey();    String  selected  =  option.getKey();  String  selection  =  option.getRawClass();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	32	None	add
346	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  /  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected  /  1);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected  /  1);	  Option    option    =    optionMap.get(selected    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
347	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
348	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
349	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  this,  option);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  this,  option);  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  this,  option);  }	          String    selected    =    option.getOpt();    Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
350	[BUG]  [BUGGY]  if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    for(String    option    :    options.keySet())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
351	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getUpperCase()))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getUpperCase()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getUpperCase()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
352	[BUG]  [BUGGY]  String  selected  =  option.getName()  + "no-selected ";  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getName()  + "no-selected ";  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + "no-selected ";	  String    selected    =    option.getName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
353	[BUG]  [BUGGY]  char  selected  =  option.getOpt();  OptionOpt  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  char  selected  =  option.getOpt();  OptionOpt  option  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	char  selected  =  option.getOpt();  OptionOpt  option  =  option.getOpt();	          String    selected    =    option.getOpt();    OptionOpt    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
354	[BUG]  [BUGGY]  String  selected  =  option.getOpt();  OptionOpt  option  =  options.getOpt();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  option.getOpt();  OptionOpt  option  =  options.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getOpt();  OptionOpt  option  =  options.getOpt();	          String    selected    =    option.getOpt();    OptionOpt    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
355	[BUG]  [BUGGY]  Integer  selected  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Integer  selected  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Integer  selected  =  option.getOpt();	          String    selected    =    option.getOpt();    char    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
356	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  }	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
357	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  }  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  }	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
358	[BUG]  [BUGGY]  if(select  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  cannot  find  symbol  select  [FE]    NullPointerException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(select  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  select	95	None	replace
359	[BUG]  [BUGGY]  if(selection  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  selection  [FE]          NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selection  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selection  ==  null  ||  selected.equals(option.getOpt()))  {	  if(select    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  selection	96	None	replace
360	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getKey());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getSelectedString(option.getKey());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getSelectedString(option.getKey());	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
361	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedValue(option.getKey());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  String  selected  =  optionMap.getSelectedValue(option.getKey());  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getSelectedValue(option.getKey());	  String    selected    =    optionMap.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
362	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getLongOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getLongOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  chosen  =  option.getLongOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
363	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getValue();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getValue();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  chosen  =  option.getValue();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
364	[BUG]  [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getName();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getKey();    String  chosen  =  option.getKey();  String  selected  =  option.getKey();  String  chosen  =  option.getName();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getKey();        String    chosen    =    option.getKey();    String  selected  =  option.getKey();  String  chosen  =  option.getName();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	35	None	add
365	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  choice  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  choice  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  choice  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	57	None	add
366	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure    [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  options  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	57	None	add
367	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOption());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(option.getOption());  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(option.getOption());	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
368	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.getOption(option);  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.getOption(option);	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
369	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLocalName()))  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selected.equals(option.getLocalName()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=    null    ||    selected.equals(option.getLocalName()))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
370	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase(),  options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      if  (option  ==  null)  {  selected  =  null;  return;  }          [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase(),  options);  [BUGGY]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected.toLowerCase(),  options);	  Option    option    =    optionMap.get(selected.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
