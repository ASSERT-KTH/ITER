bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  options);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  options);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  options);	  return(optionMap    ==    null)?    null    :    optionMap.values().toArray(this);    	non-compiled	[CE]  cannot  find  symbol  options	18	None	replace
2	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selection);  [CE]  cannot  find  symbol  selection  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selection);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selection);	  return(optionMap    ==    null)?    null    :    optionMap.values().toArray(this);    	non-compiled	[CE]  cannot  find  symbol  selection	18	None	replace
3	[BUG]  [BUGGY]  if(selected!=  null)  {  return  null;  selected  =  option.getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(selected!=  null)  {  return  null;  selected  =  option.getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(selected!=  null)  {  return  null;  selected  =  option.getSelectedValue();  }	  return    null;    String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
4	[BUG]  [BUGGY]  if(selected!=  null)  {  return  null;  }  else  if(optionMap.containsKey(selected))  {  selected  =  option.getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(selected!=  null)  {  return  null;  }  else  if(optionMap.containsKey(selected))  {  selected  =  option.getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(selected!=  null)  {  return  null;  }  else  if(optionMap.containsKey(selected))  {  selected  =  option.getSelectedValue();  }	  return    null;    String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
5	[BUG]  [BUGGY]  if(selected!=  null)required  return  null;  String  selected  =  option.getSelectedValue();  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(selected!=  null)required  return  null;  String  selected  =  option.getSelectedValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(selected!=  null)required  return  null;  String  selected  =  option.getSelectedValue();	  return    null;    String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  not  a  statement	5	None	replace
6	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  missing  return  statement	68	None	replace
7	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  throw  new  IllegalArgumentException( " ");  [CE]  missing  return  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  missing  return  statement	68	None	replace
8	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
9	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  options.get(option.getKey());  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  options.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  options.get(option.getKey());	  return(optionMap    ==    null)?    null    :    optionMap.get(option.getKey());    	non-compiled	[CE]  cannot  find  symbol  options	40	None	replace
10	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getValue()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  selected;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  optionMap.put(option.getOption(),  option);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  optionMap.put(option.getOption(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	optionMap.put(option.getOption(),  option);	  this.optionMap.put(option.getOption(),    option);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
15	[BUG]  [BUGGY]  this.optionMap.put(option.getOption(),  options);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getOption(),  options);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getOption(),  options);	  this.optionMap.put(option.getOption(),    option);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
16	[BUG]  [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  if(option!=  null)  {  return  option;  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	51	None	replace
17	[BUG]  [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	51	None	replace
18	[BUG]  [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  if(option  ==  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  if(option  ==  null)  {  return  option;  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	51	None	replace
19	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  return  null;  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  missing  return  statement	51	None	replace
20	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  optionMap.get(option.getKey());  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionGroup  =  optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionGroup  =  optionMap.get(option.getKey());	  if(optionMap.containsKey(option.getKey()))    {    return    null;    }    else    {    optionMap.put(option.getValue(),    option);    }    	non-compiled	[CE]  incompatible  types	33	None	replace
21	[BUG]  [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	49	None	replace
22	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	49	None	replace
23	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  option  =(OptionGroup)optionMap.get(option.getValue());  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  option  =(OptionGroup)optionMap.get(option.getValue());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  option  =(OptionGroup)optionMap.get(option.getValue());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	non-compiled	[CE]  incompatible  types	49	None	replace
24	[BUG]  [BUGGY]  if(option.getValue()!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	49	None	replace
25	[BUG]  [BUGGY]  optionMap.put(option.getOptionName(),  option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  optionMap.put(option.getOptionName(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	optionMap.put(option.getOptionName(),  option);	  this.optionMap.put(option.getOptionName(),    option);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
26	[BUG]  [BUGGY]  this.optionMap.put(option.getOptionName(),  options);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getOptionName(),  options);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getOptionName(),  options);	  this.optionMap.put(option.getOptionName(),    option);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	27	3	add
28	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	27	3	add
29	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  optionsMap  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  optionsMap.put(option.getKey(),  option);	  	non-compiled	[CE]  cannot  find  symbol  optionsMap	27	None	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	27	3	add
31	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	27	3	add
32	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  OptionGroup  this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  OptionGroup  this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    OptionGroup  this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  not  a  statement	27	None	add
33	[BUG]  [BUGGY]  return(this.optionMap  ==  null)?  null  :  this.optionMap.get(option.getValue());  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(this.optionMap  ==  null)?  null  :  this.optionMap.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(this.optionMap  ==  null)?  null  :  this.optionMap.get(option.getValue());	  return(this.optionMap!=    null)?    null    :    this.optionMap.get(option.getValue());    	non-compiled	[CE]  incompatible  types	38	None	replace
34	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue()  + ",  option ");  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  option.getSelectedValue()  + ",  option ");  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  option.getSelectedValue()  + ",  option ");	  String    selected    =    option.getSelectedValue(),    option);    	non-compiled	[CE]  	45	None	replace
35	[BUG]  [BUGGY]  String  selected  =  option.getSelectedKey(),  option);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  option.getSelectedKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  option.getSelectedKey(),  option);	  String    selected    =    option.getSelectedValue(),    option);    	non-compiled	[CE]  ';'  expected	45	None	replace
36	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)optionMap.get(option.getKey());  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionGroup  =(OptionGroup)optionMap.get(option.getKey());	  if(option    ==    null)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	52	None	replace
37	[BUG]  [BUGGY]  OptionGroup  result  =(OptionGroup)optionMap.get(option.getKey());  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  result  =(OptionGroup)optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  result  =(OptionGroup)optionMap.get(option.getKey());	  if(option    ==    null)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	52	None	replace
38	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  options);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  options);	  OptionGroup    required    =    optionMap.get(option.getSelectedIndex(),    option);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
39	[BUG]  [BUGGY]  OptionGroup  required  =  optionsMap.get(option.getSelectedIndex(),  option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionsMap.get(option.getSelectedIndex(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionsMap.get(option.getSelectedIndex(),  option);	  OptionGroup    required    =    optionMap.get(option.getSelectedIndex(),    option);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
40	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  selected);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  selected);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  selected);	  OptionGroup    required    =    optionMap.get(option.getSelectedIndex(),    option);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
41	[BUG]  [BUGGY]  return(option!=  null)?  null  :  optionMap.get(option.getValue());  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(option!=  null)?  null  :  optionMap.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(option!=  null)?  null  :  optionMap.get(option.getValue());	  return(option    ==    null)?    null    :    optionMap.get(option.getValue());    	non-compiled	[CE]  incompatible  types	1	None	replace
42	[BUG]  [BUGGY]  return(option!=  null)?  null  :  optionMap.get(option.getKey());  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(option!=  null)?  null  :  optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(option!=  null)?  null  :  optionMap.get(option.getKey());	  return(option    ==    null)?    null    :    optionMap.get(option.getValue());    	non-compiled	[CE]  incompatible  types	1	None	replace
43	[BUG]  [BUGGY]  if(option.getValue()!=  null)return  null;  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()!=  null)return  null;  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()!=  null)return  null;  if(optionMap.containsKey(option.getKey()))  {  return  null;  }	  if(optionMap.containsKey(option.getKey()))    return    null;    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	32	None	replace
44	[BUG]  [BUGGY]  OptionGroup  required  =  options.get(option.getSelectedIndex(),  option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  options.get(option.getSelectedIndex(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  options.get(option.getSelectedIndex(),  option);	  OptionGroup    required    =    options.get(option.getSelectedIndex());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
45	[BUG]  [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	48	None	replace
46	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  option  =(OptionGroup)optionMap.get(option.getKey());  }  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  option  =(OptionGroup)optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  option  =(OptionGroup)optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  incompatible  types	48	None	replace
47	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getSelectedValue(),  option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  optionMap.get(option.getSelectedValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  optionMap.get(option.getSelectedValue(),  option);	  String    selected    =    optionMap.get(option.getSelectedValue());    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
48	[BUG]  [BUGGY]  String  selected  =  options.get(option.getSelectedValue());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  options.get(option.getSelectedValue());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  options.get(option.getSelectedValue());	  String    selected    =    optionMap.get(option.getSelectedValue());    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
49	[BUG]  [BUGGY]  String  selected  =  optionsMap.get(option.getSelectedValue());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  optionsMap.get(option.getSelectedValue());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  optionsMap.get(option.getSelectedValue());	  String    selected    =    optionMap.get(option.getSelectedValue());    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
50	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  option);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  Option  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	Option  optionMap.put(option.getKey(),  option);	          optionMap.put(option.getKey(),    option);    Option    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	13	None	replace
51	[BUG]  [BUGGY]  this.optionMap.put(option.getId(),  selected);  [CE]  method  put  in  interface  Map  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getId(),  selected);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getId(),  selected);	  this.optionMap.put(option.getId(),    option);    	non-compiled	[CE]  method  put  in  interface  Map  cannot  be  applied  to  given  types;	22	None	replace
52	[BUG]  [BUGGY]  this.optionMap.put(option.getId(),  options);  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getId(),  options);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getId(),  options);	  this.optionMap.put(option.getId(),    option);    	non-compiled	[CE]  cannot  find  symbol  options	22	None	replace
53	[BUG]  [BUGGY]  this.optionMap.put(option.getId(),  selection);  [CE]  cannot  find  symbol  selection  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getId(),  selection);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getId(),  selection);	  this.optionMap.put(option.getId(),    option);    	non-compiled	[CE]  cannot  find  symbol  selection	22	None	replace
54	[BUG]  [BUGGY]  OptionGroup  option  =  optionMap.get(option.getKey());  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =  optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =  optionMap.get(option.getKey());	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	60	None	replace
55	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  option  =  optionMap.get(option.getKey());  }  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  }  else  {  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  incompatible  types	60	None	replace
56	[BUG]  [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  option  =  optionMap.get(option.getKey());  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  return  null;  }  else  {  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  incompatible  types	60	None	replace
57	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  }  else  if(optionMap.containsKey(option.getKey()))  {  option  =  optionMap.get(option.getKey());  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  }  else  if(optionMap.containsKey(option.getKey()))  {  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  }  else  if(optionMap.containsKey(option.getKey()))  {  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  incompatible  types	60	None	replace
58	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  this.optionMap.get(option.getKey());  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  this.optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  this.optionMap.get(option.getKey());	  return(this.optionMap    ==    null)?    null    :    this.optionMap.get(option.getKey());    	non-compiled	[CE]  incompatible  types	37	None	replace
59	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selected,  options);  [CE]  cannot  find  symbol  options  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selected,  options);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selected,  options);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    selected);    	non-compiled	[CE]  cannot  find  symbol  options	20	None	replace
60	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selected,  option);  [CE]  no  suitable  method  found  for  toArray(OptionGroup,String,Option)  [FE]                        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selected,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  selected,  option);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    selected);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(OptionGroup,String,Option)	20	None	replace
61	[BUG]  [BUGGY]  return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  selected,  options);  [CE]  cannot  find  symbol  options  [FE]                          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  selected,  options);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  selected,  options);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    selected);    	non-compiled	[CE]  cannot  find  symbol  options	20	None	replace
62	[BUG]  [BUGGY]  return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  selected,  option);  [CE]  no  suitable  method  found  for  toArray(OptionGroup,String,Option)  [FE]                            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  selected,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  selected,  option);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    selected);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(OptionGroup,String,Option)	20	None	replace
63	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	67	None	add
64	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	67	None	add
65	[BUG]  [BUGGY]  return(selected  ==  null)?  null  :  optionMap.values().toArray(this,  option);  [CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(selected  ==  null)?  null  :  optionMap.values().toArray(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(selected  ==  null)?  null  :  optionMap.values().toArray(this,  option);	  return(optionMap    ==    null)?    null    :    optionMap.values().toArray(this,    selected);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)	19	None	replace
66	[BUG]  [BUGGY]  return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  optional);  [CE]  cannot  find  symbol  optional  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  optional);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap!=  null)?  null  :  optionMap.values().toArray(this,  optional);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    options);    	non-compiled	[CE]  cannot  find  symbol  optional	63	None	replace
67	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  optional);  [CE]  cannot  find  symbol  optional  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  optional);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  optional);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    options);    	non-compiled	[CE]  cannot  find  symbol  optional	63	None	replace
68	[BUG]  [BUGGY]  String  selected  =  this.optionMap.getSelectedValue();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  this.optionMap.getSelectedValue();  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  this.optionMap.getSelectedValue();	  String    selected    =    options.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
69	[BUG]  [BUGGY]  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	62	None	replace
70	[BUG]  [BUGGY]  OptionGroup  option  =  optionMap.get(option.getKey());  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =  optionMap.get(option.getKey());  if(option  ==  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =  optionMap.get(option.getKey());  if(option  ==  null)  {  return  option;  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	62	None	replace
71	[BUG]  [BUGGY]  if(option.isRequired())  {  return  null;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.isRequired())  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.isRequired())  {  return  null;  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  missing  return  statement	62	None	replace
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getValue(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	64	3	add
73	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getValue(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	64	3	add
74	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  OptionGroup  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  OptionGroup  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getValue(),    option);    OptionGroup  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);	  	non-compiled	[CE]  not  a  statement	64	None	add
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getValue(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	64	3	add
76	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getValue(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	64	3	add
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                optionMap.put(option.getValue(),        option);        optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	14	3	add
78	[BUG]  [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getValue(),        option);        optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	14	3	add
79	[BUG]  [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  OptionGroup  optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  OptionGroup  optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getValue(),        option);        optionMap.put(option.getValue(),    option);    OptionGroup  optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);	  	non-compiled	[CE]  ';'  expected	14	None	add
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	24	3	add
81	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	24	3	add
82	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  OptionGroup  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  OptionGroup  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    OptionGroup  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  not  a  statement	24	None	add
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	24	3	add
84	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	24	3	add
85	[BUG]  [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)optionMap.get(option.getKey(),  option);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionGroup  =(OptionGroup)optionMap.get(option.getKey(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionGroup  =(OptionGroup)optionMap.get(option.getKey(),  option);	  if(optionMap!=    null)    {    return    null;    }    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	66	None	replace
86	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  selected);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  selected);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getValue(),  selected);	  OptionGroup    required    =    optionMap.get(option.getValue(),    options);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	9	None	replace
87	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  value);  [CE]  cannot  find  symbol  value  [FE]                        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  value);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getValue(),  value);	  OptionGroup    required    =    optionMap.get(option.getValue(),    options);    	non-compiled	[CE]  cannot  find  symbol  value	9	None	replace
88	[BUG]  [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  if(option  ==  null)  {  return  option;  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  if(option  ==  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  if(option  ==  null)  {  return  option;  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	50	None	replace
89	[BUG]  [BUGGY]  OptionGroup  optionMap.put(option.getValue(),  option);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionMap.put(option.getValue(),  option);	          optionMap.put(option.getValue(),    option);    OptionGroup    optionMap.put(option.getValue(),    option);    	non-compiled	[CE]  ';'  expected	16	None	replace
90	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getKey()))    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
91	[BUG]  [BUGGY]  if(option.getSelected()!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getSelected()!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getSelected()!=  null)  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getKey()))    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
92	[BUG]  [BUGGY]  if(option.getType()  ==  Token.NAME)  {  return  null;  }  [CE]  cannot  find  symbol  Token  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getType()  ==  Token.NAME)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getType()  ==  Token.NAME)  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getKey()))    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  Token	3	None	replace
93	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected  ==  null)  {  return  null;  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  option.getSelectedValue();  if(selected  ==  null)  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
94	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getRequired());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getRequired());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getRequired());	  OptionGroup    required    =    optionMap.get(option.getKey());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
95	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getKey(),  option);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getKey(),  option);	  OptionGroup    required    =    optionMap.get(option.getKey());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	8	None	replace
96	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getId());  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getId());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getId());	  OptionGroup    required    =    optionMap.get(option.getKey());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	8	None	replace
97	[BUG]  [BUGGY]  OptionGroup  optionMap.put(option.getKey(),  option);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionMap.put(option.getKey(),  option);	          optionMap.put(option.getKey(),    option);    OptionGroup    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  ';'  expected	12	None	replace
98	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  option,  selected);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  option,  selected);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getValue(),  option,  selected);	  OptionGroup    required    =    optionMap.get(option.getValue(),    option);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	7	None	replace
99	[BUG]  [BUGGY]  Option  optionMap.put(option.getValue(),  option);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  Option  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	Option  optionMap.put(option.getValue(),  option);	          optionMap.put(option.getValue(),    option);    Option    optionMap.put(option.getValue(),    option);    	non-compiled	[CE]  ';'  expected	17	None	replace
100	[BUG]  [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  option);  [CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(optionMap  ==  null)?  null  :  optionMap.values().toArray(this,  option);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    option);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)	47	None	replace
101	[BUG]  [BUGGY]  optionMap.put(option.getSelected(),  option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  optionMap.put(option.getSelected(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	optionMap.put(option.getSelected(),  option);	  this.optionMap.put(option.getSelected(),    option);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
102	[BUG]  [BUGGY]  if(optionMap.containsKey(option))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }	  return    null;    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	2	None	replace
103	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }	  return    null;    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	2	None	replace
104	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getValue()))  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }	  return    null;    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	2	None	replace
105	[BUG]  [BUGGY]  OptionGroup  required  =  optionalMap.get(option.getSelectedIndex());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionalMap.get(option.getSelectedIndex());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionalMap.get(option.getSelectedIndex());	  OptionGroup    required    =    optionsMap.get(option.getSelectedIndex());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
106	[BUG]  [BUGGY]  if(option  ==  null)  {  return  this;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  return  this;  }	  if(option!=    null)    {    return    this;    }    	non-compiled	[CE]  missing  return  statement	54	None	replace
107	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    new    OptionGroup(selected);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
108	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    new    OptionGroup(selected);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
109	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    new    OptionGroup(selected);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
110	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    new    OptionGroup(selected);    }    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	10	3	add
112	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	10	3	add
113	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  OptionGroup  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  OptionGroup  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    OptionGroup  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  ';'  expected	10	None	add
114	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  Option  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    Option  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  ';'  expected	10	None	add
115	[BUG]  [BUGGY]  OptionGroup  this.optionMap.put(option.getKey(),  option);  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  this.optionMap.put(option.getKey(),  option);	          this.optionMap.put(option.getKey(),    option);    OptionGroup    this.optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  not  a  statement	26	None	replace
116	[BUG]  [BUGGY]  if(option.getValue()  ==  null)  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()  ==  null)  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()  ==  null)  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	11	None	replace
117	[BUG]  [BUGGY]  if(option.getType()  ==  Token.FUNCTION)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  cannot  find  symbol  Token  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getType()  ==  Token.FUNCTION)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getType()  ==  Token.FUNCTION)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol  Token	11	None	replace
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                optionMap.put(option.getValue(),        option);        optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	14	3	add
119	[BUG]  [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getValue(),        option);        optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	14	3	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                optionMap.put(option.getValue(),        option);        optionMap.put(option.getValue(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	14	3	add
121	[BUG]  [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getValue(),  option);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),  option);  optionMap.put(option.getKey(),  option);  optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getValue(),        option);        optionMap.put(option.getValue(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	14	3	add
122	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedValue(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  optionMap.getSelectedValue(option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  optionMap.getSelectedValue(option);	  String    selected    =    optionMap.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
123	[BUG]  [BUGGY]  return(this.optionMap  ==  null)?  null  :  optionMap.get(option.getValue());  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(this.optionMap  ==  null)?  null  :  optionMap.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(this.optionMap  ==  null)?  null  :  optionMap.get(option.getValue());	  return(this.optionMap!=    null)?    null    :    this.optionMap.get(option.getValue());    	non-compiled	[CE]  incompatible  types	38	None	replace
124	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  optionMap.get(option.getValue());  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionGroup  =  optionMap.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionGroup  =  optionMap.get(option.getValue());	  if(optionMap.containsKey(option.getKey()))    return    null;    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  incompatible  types	32	None	replace
125	[BUG]  [BUGGY]  if(option.isRequired())  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.isRequired())  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.isRequired())  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
126	[BUG]  [BUGGY]  if(option.isRequired())  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.isRequired())  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.isRequired())  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  if(option!=  null)  {  return  option;  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
127	[BUG]  [BUGGY]  OptionGroup  required  =  optionsMap.get(option.getValue(),  option);  [CE]  cannot  find  symbol  optionsMap  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionsMap.get(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionsMap.get(option.getValue(),  option);	  OptionGroup    required    =    optionMap.get(option.getValue(),    option);    	non-compiled	[CE]  cannot  find  symbol  optionsMap	7	None	replace
128	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  optional);  [CE]  cannot  find  symbol  optional  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  optional);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getValue(),  optional);	  OptionGroup    required    =    optionMap.get(option.getValue(),    options);    	non-compiled	[CE]  cannot  find  symbol  optional	9	None	replace
129	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	49	None	replace
130	[BUG]  [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	49	None	replace
131	[BUG]  [BUGGY]  if(option.isRequired())  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.isRequired())  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.isRequired())  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	49	None	replace
132	[BUG]  [BUGGY]  option!=  null)  {  return  this;  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  option!=  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	option!=  null)  {  return  this;  }	  if(option!=    null)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
133	[BUG]  [BUGGY]  option!=  null  &&  optionMap.containsKey(option.getKey());  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  option!=  null  &&  optionMap.containsKey(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	option!=  null  &&  optionMap.containsKey(option.getKey());	  if(option!=    null)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
134	[BUG]  [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	60	None	replace
135	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	60	None	replace
136	[BUG]  [BUGGY]  if(option  ==  null)  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	60	None	replace
137	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	60	None	replace
138	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  String  selected  =  option.getSelectedValue();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  String  selected  =  option.getSelectedValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	throw    new    IllegalArgumentException(   "   ");    String  selected  =  option.getSelectedValue();	  	non-compiled	[CE]  cannot  find  symbol	67	None	add
139	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option.getKey());  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  Option  option  =(Option)optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	Option  option  =(Option)optionMap.get(option.getKey());	  if(option!=    null)    {    return    null;    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	53	None	replace
140	[BUG]  [BUGGY]  OptionGroup  optionMap  =(OptionGroup)optionMap.get(option.getKey());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionMap  =(OptionGroup)optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionMap  =(OptionGroup)optionMap.get(option.getKey());	  if(optionMap!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
141	[BUG]  [BUGGY]  OptionGroup  optionMap  =  optionMap.get(option.getKey());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionMap  =  optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionMap  =  optionMap.get(option.getKey());	  if(optionMap!=    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
142	[BUG]  [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	11	None	replace
143	[BUG]  [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  optionMap.put(option.getKey(),  option);  }  else  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	11	None	replace
144	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  options.get(option.getKey());  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionGroup  =  options.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionGroup  =  options.get(option.getKey());	  if(optionMap.containsKey(option.getKey()))    return    null;    if(optionMap.containsKey(option.getKey()))    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  options	34	None	replace
145	[BUG]  [BUGGY]  optionMap.put(option.getId(),  option);  [CE]  method  put  in  interface  Map  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  optionMap.put(option.getId(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	optionMap.put(option.getId(),  option);	  this.optionMap.put(option.getId(),    option);    	non-compiled	[CE]  method  put  in  interface  Map  cannot  be  applied  to  given  types;	22	None	replace
146	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  optionMap.values().toArray(this,  option);  [CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(option  ==  null)?  null  :  optionMap.values().toArray(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(option  ==  null)?  null  :  optionMap.values().toArray(this,  option);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    option);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)	47	None	replace
147	[BUG]  [BUGGY]  return(option!=  null)?  null  :  optionMap.values().toArray(this,  option);  [CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)  [FE]                    ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(option!=  null)?  null  :  optionMap.values().toArray(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(option!=  null)?  null  :  optionMap.values().toArray(this,  option);	  return(optionMap!=    null)?    null    :    optionMap.values().toArray(this,    option);    	non-compiled	[CE]  no  suitable  method  found  for  toArray(OptionGroup,Option)	47	None	replace
148	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  selected  =  option.getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  selected  =  option.getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  selected  =  option.getSelectedValue();  }	  return    null;    String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
149	[BUG]  [BUGGY]  if(selected  ==  null)  {  return  null;  selected  =  option.getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(selected  ==  null)  {  return  null;  selected  =  option.getSelectedValue();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(selected  ==  null)  {  return  null;  selected  =  option.getSelectedValue();  }	  return    null;    String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
150	[BUG]  [BUGGY]  if(option.getValue()  ==  null)  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()  ==  null)  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	4	None	replace
151	[BUG]  [BUGGY]  if(option.getValue()!=  null)  {  return  null;  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()!=  null)  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	4	None	replace
152	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	48	None	replace
153	[BUG]  [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	48	None	replace
154	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	48	None	replace
155	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getValue()))  {  String  selected  =  option.getSelectedValue();  if(selected!=  null)  {  return  new  OptionGroup(selected);  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    new    OptionGroup(selected);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
156	[BUG]  [BUGGY]  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  missing  return  statement	68	None	replace
157	[BUG]  [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  missing  return  statement	68	None	replace
158	[BUG]  [BUGGY]  if(option.hasOption())  {  return  null;  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.hasOption())  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.hasOption())  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getKey()))    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
159	[BUG]  [BUGGY]  if(option!=  null)  {  optionMap.put(option.getValue(),  option);  }  else  {  optionMap.put(option.getValue(),  option);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  optionMap.put(option.getValue(),  option);  }  else  {  optionMap.put(option.getValue(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  optionMap.put(option.getValue(),  option);  }  else  {  optionMap.put(option.getValue(),  option);  }	          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),    option);    	non-compiled	[CE]  missing  return  statement	15	None	replace
160	[BUG]  [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option!=  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option!=  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }	  return    null;    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	2	None	replace
161	[BUG]  [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option  ==  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option  ==  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }	  return    null;    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	2	None	replace
162	[BUG]  [BUGGY]  if(option.isRequired())  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.isRequired())  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.isRequired())  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }	  return    null;    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	2	None	replace
163	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey()  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey()  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getKey()	  	non-compiled	[CE]  ')'  expected	24	None	add
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getValue(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	64	3	add
165	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getValue(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	64	3	add
166	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	10	3	add
167	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);	  	compilable	  [FE]  ComparisonFailure  	10	3	add
168	[BUG]  [BUGGY]  this.optionMap.put(option.getKey(),  option);  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getKey(),  option);  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getKey(),  option);  OptionGroup  option  =(OptionGroup)optionMap.get(option.getValue());	          this.optionMap.put(option.getKey(),    option);    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	46	None	replace
169	[BUG]  [BUGGY]  if(option.isRequired())  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.isRequired())  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.isRequired())  {  return  null;  OptionGroup  option  =  optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	60	None	replace
170	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  this);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  this);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getValue(),  this);	  OptionGroup    required    =    optionMap.get(option.getValue(),    options);    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	9	None	replace
171	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalStateException  	68	9	replace
172	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  IllegalStateException  [FE]    IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalStateException  	68	9	replace
173	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalArgumentException( "Added  option: ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	throw  new  IllegalArgumentException( "Added  option: ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalArgumentException  	68	9	replace
174	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Added  option: ");  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalArgumentException( "Added  option: ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	throw  new  IllegalArgumentException( "Added  option: ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalArgumentException  	68	9	replace
175	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getValue()))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getValue()))  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getValue()))  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
176	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getValue())  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getValue())  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getValue())  ==  null)  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
177	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getValue()))  {  return  null;  }  [CE]  missing  return  statement  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getValue()))  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey())||  optionMap.containsKey(option.getValue()))  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getValue()))    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	4	None	replace
178	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  option,  options);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getValue(),  option,  options);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getValue(),  option,  options);	  OptionGroup    required    =    optionMap.get(option.getValue(),    option);    	non-compiled	[CE]  cannot  find  symbol  options	7	None	replace
179	[BUG]  [BUGGY]  if(optionMap!=  null)  {  return  null;  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap!=  null)  {  return  null;  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap!=  null)  {  return  null;  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	48	None	replace
180	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(OptionGroup)optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	return(OptionGroup)optionMap.get(option.getKey());	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	compilable	  [FE]  ClassCastException  	48	9	replace
181	[BUG]  [BUGGY]  return(OptionGroup)optionMap.get(option.getKey());  [FE]  ClassCastException  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(OptionGroup)optionMap.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(OptionGroup)optionMap.get(option.getKey());	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	compilable	  [FE]  ClassCastException  	48	9	replace
182	[BUG]  [BUGGY]  if(optionMap!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [CE]  variable  option  is  already  defined  in  method  addOption(Option)  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap!=  null)  {  return  null;  }  else  {  OptionGroup  option  =(OptionGroup)optionMap.get(option.getKey());  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  addOption(Option)	48	None	replace
183	[BUG]  [BUGGY]  return(this.optionMap!=  null)?  null  :  this.optionMap.get(option.getValue(),  option);  [CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(this.optionMap!=  null)?  null  :  this.optionMap.get(option.getValue(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(this.optionMap!=  null)?  null  :  this.optionMap.get(option.getValue(),  option);	  return(this.optionMap!=    null)?    null    :    this.optionMap.get(option.getValue());    	non-compiled	[CE]  method  get  in  interface  Map  cannot  be  applied  to  given  types;	38	None	replace
184	[BUG]  [BUGGY]  if(option.hasOption(option))  {  optionMap.put(option.getKey(),  option);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.hasOption(option))  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.hasOption(option))  {  optionMap.put(option.getKey(),  option);  }	          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
185	[BUG]  [BUGGY]  OptionGroup  optionMap  =  option.getOptionMap();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  optionMap  =  option.getOptionMap();  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  optionMap  =  option.getOptionMap();	          optionMap.put(option.getKey(),    option);    OptionGroup    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
186	[BUG]  [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  OptionGroup  optionMap  =(OptionGroup)optionMap.get(option.getKey());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          optionMap.put(option.getKey(),    option);    optionMap.put(option.getKey(),  option);  OptionGroup  optionMap  =(OptionGroup)optionMap.get(option.getKey());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                optionMap.put(option.getKey(),        option);        optionMap.put(option.getKey(),    option);    OptionGroup  optionMap  =(OptionGroup)optionMap.get(option.getKey());	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
187	[BUG]  [BUGGY]  OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  optional);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  optional);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	OptionGroup  required  =  optionMap.get(option.getSelectedIndex(),  optional);	  OptionGroup    required    =    optionMap.get(option.getSelectedIndex(),    option);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
188	[BUG]  [BUGGY]  option!=  null  &&  optionMap.put(option.getKey(),  option);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  option!=  null  &&  optionMap.put(option.getKey(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	option!=  null  &&  optionMap.put(option.getKey(),  option);	  if(option!=    null)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
189	[BUG]  [BUGGY]  if(optionMap.get(option.getKey())!=  null)  {  return  option;  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.get(option.getKey())!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.get(option.getKey())!=  null)  {  return  option;  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  incompatible  types	62	None	replace
190	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  option;  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  return  option;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  return  option;  }	  return    null;    OptionGroup    option    =    optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  incompatible  types	62	None	replace
191	[BUG]  [BUGGY]  parentMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  parentMap  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  parentMap.put(option.getKey(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	parentMap.put(option.getKey(),  option);	  if(optionMap.containsKey(option.getKey()))    {    return    null;    }    else    {    optionMap.put(option.getValue(),    option);    }    	non-compiled	[CE]  cannot  find  symbol  parentMap	33	None	replace
192	[BUG]  [BUGGY]  if(option.getValue()  ==  null)  {  this.optionMap.put(option.getKey(),  option);  }  else  {  this.optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()  ==  null)  {  this.optionMap.put(option.getKey(),  option);  }  else  {  this.optionMap.put(option.getKey(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()  ==  null)  {  this.optionMap.put(option.getKey(),  option);  }  else  {  this.optionMap.put(option.getKey(),  option);  }	          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	25	None	replace
193	[BUG]  [BUGGY]  if(option.getValue()  ==  null)  {  this.optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()  ==  null)  {  this.optionMap.put(option.getKey(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()  ==  null)  {  this.optionMap.put(option.getKey(),  option);  }	          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	25	None	replace
194	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  if(optionMap.containsKey(option.getKey()))  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getKey()))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
195	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getValue()))  {  if(optionMap.containsKey(option.getKey()))  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getValue()))  {  if(optionMap.containsKey(option.getKey()))  {  return  null;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    if(optionMap.containsKey(option.getKey()))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
196	[BUG]  [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected  ==  null)  {  return  selected;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected  ==  null)  {  return  selected;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option.getKey()))  {  String  selected  =  option.getSelectedValue();  if(selected  ==  null)  {  return  selected;  }	  return    null;    if(optionMap.containsKey(option.getKey()))    {    String    selected    =    option.getSelectedValue();    if(selected!=    null)    {    return    selected;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
197	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedValue(option.getKey());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  String  selected  =  optionMap.getSelectedValue(option.getKey());  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	String  selected  =  optionMap.getSelectedValue(option.getKey());	  String    selected    =    optionMap.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
198	[BUG]  [BUGGY]  this.optionMap.put(option.getId(),  option)  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getId(),  option)  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getId(),  option)	  this.optionMap.put(option.getId(),    option);    	non-compiled	[CE]  ';'  expected	22	None	replace
199	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	throw    new    IllegalArgumentException(   "   ");    new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	67	None	add
200	[BUG]  [BUGGY]  if(optionMap  ==  null)  {  return  null;  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap  ==  null)  {  return  null;  }	  if(optionMap!=    null)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
201	[BUG]  [BUGGY]  if(optionMap!=  null)  {  return  this;  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap!=  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap!=  null)  {  return  this;  }	  if(optionMap!=    null)    {    return    null;    }    	non-compiled	[CE]  missing  return  statement	66	None	replace
202	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  options.get(option.getKey());  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(option  ==  null)?  null  :  options.get(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(option  ==  null)?  null  :  options.get(option.getKey());	  return(option    ==    null)?    null    :    optionMap.get(option.getKey());    	non-compiled	[CE]  cannot  find  symbol  options	35	None	replace
203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	24	3	add
204	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),  option);  this.optionMap.put(option.getValue(),  option);	  	compilable	  [FE]  ComparisonFailure  	24	3	add
205	[BUG]  [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getName(),  option);  this.optionMap.put(option.getKey(),  option);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getName(),  option);  this.optionMap.put(option.getKey(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	                this.optionMap.put(option.getKey(),        option);        this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getName(),  option);  this.optionMap.put(option.getKey(),  option);	  	non-compiled	[CE]  cannot  find  symbol	24	None	add
206	[BUG]  [BUGGY]  if(optionMap.containsKey(option))  {  return  null;  }  [CE]  missing  return  statement  [FE]            ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap.containsKey(option))  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap.containsKey(option))  {  return  null;  }	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getKey());    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  missing  return  statement	50	None	replace
207	[BUG]  [BUGGY]  return  this;  selected  =  option.getSelectedValue();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return  this;  selected  =  option.getSelectedValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return  this;  selected  =  option.getSelectedValue();	  return    null;    String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
208	[BUG]  [BUGGY]  this.optionMap.put(option.getLongValue(),  option);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  this.optionMap.put(option.getLongValue(),  option);  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	this.optionMap.put(option.getLongValue(),  option);	          this.optionMap.put(option.getKey(),    option);    this.optionMap.put(option.getValue(),    option);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(OptionGroup)optionMap.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	add	return(OptionGroup)optionMap.get(option.getValue());	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	compilable	  [FE]  ComparisonFailure  	49	3	replace
210	[BUG]  [BUGGY]  return(OptionGroup)optionMap.get(option.getValue());  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(OptionGroup)optionMap.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(OptionGroup)optionMap.get(option.getValue());	  return    null;    OptionGroup    option    =(OptionGroup)optionMap.get(option.getValue());    	compilable	  [FE]  ComparisonFailure  	49	3	replace
211	[BUG]  [BUGGY]  if(optionMap!=  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(optionMap!=  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(optionMap!=  null)  {  return  null;  }  else  {  optionMap.put(option.getKey(),  option);  }	  return    null;    optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  missing  return  statement	2	None	replace
212	[BUG]  [BUGGY]  if(option.getValue()!=  null)  {  optionMap.put(option.getValue(),  option);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  if(option.getValue()!=  null)  {  optionMap.put(option.getValue(),  option);  }  [BUGGY]      return  this;  }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	if(option.getValue()!=  null)  {  optionMap.put(option.getValue(),  option);  }	          optionMap.put(option.getValue(),    option);    optionMap.put(option.getValue(),    option);    	non-compiled	[CE]  missing  return  statement	15	None	replace
213	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  options.get(option.getValue());  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      public  OptionGroup  addOption(Option  option)  {    optionMap.put(option.getKey(),  option);      [BUGGY]  return(option  ==  null)?  null  :  options.get(option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  addOption  [RETURN_TYPE]  OptionGroup  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	57	57	3	replace	return(option  ==  null)?  null  :  options.get(option.getValue());	  return(option    ==    null)?    null    :    optionMap.get(option.getValue());    	non-compiled	[CE]  cannot  find  symbol  options	1	None	replace
