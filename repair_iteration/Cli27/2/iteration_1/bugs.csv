bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  option  =(Option)optionMap.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    Option  option  =(Option)optionMap.get(selected);  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    Option  option  =(Option)optionMap.get(selected);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
2	[BUG]  [BUGGY]    String  option  =  option.getItem(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    String  option  =  option.getItem(selected);  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    String  option  =  option.getItem(selected);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
3	[BUG]  [BUGGY]    String  option  =  optionMap.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]        ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    String  option  =  optionMap.get(selected);  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    String  option  =  optionMap.get(selected);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
4	[BUG]  [BUGGY]    String  option  =  option.getText();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]          ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    String  option  =  option.getText();  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    String  option  =  option.getText();		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
5	[BUG]  [BUGGY]    String  option  =  option.getSelectedString();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]            ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    String  option  =  option.getSelectedString();  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    String  option  =  option.getSelectedString();		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
6	[BUG]  [BUGGY]  selected  =  option.getSelected();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  selected  =  option.getSelected();  [BUGGY]  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	selected  =  option.getSelected();	selected  =  option.getOpt();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
7	[BUG]  [BUGGY]  selected  =  option.getItemCount();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  selected  =  option.getItemCount();  [BUGGY]  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	selected  =  option.getItemCount();	selected  =  option.getOpt();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
8	[BUG]  [BUGGY]  selected  =  option.getName();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  selected  =  option.getName();  [BUGGY]  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	selected  =  option.getName();	selected  =  option.getOpt();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
9	[BUG]  [BUGGY]  selected  =  option.getString();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  selected  =  option.getString();  [BUGGY]  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	selected  =  option.getString();	selected  =  option.getOpt();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
10	[BUG]  [BUGGY]    Option  option  =  optionMap.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    Option  option  =  optionMap.get(selected);  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    Option  option  =  optionMap.get(selected);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
11	[BUG]  [BUGGY]    String  option  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    String  option  =  option.getOpt();  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    String  option  =  option.getOpt();		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
12	[BUG]  [BUGGY]    String  option  =  option.getOption();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]        ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    String  option  =  option.getOption();  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    String  option  =  option.getOption();		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	4	None	add
13	[BUG]  [BUGGY]    if(selected.equals(option.getLongOpt()))  {  if(!selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if(selected.equals(option.getLongOpt()))  {  if(!selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    if(selected.equals(option.getLongOpt()))  {  if(!selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
14	[BUG]  [BUGGY]    if(selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if(selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    if(selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
15	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	add	    if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }		compilable	  [FE]  NullPointerException  	4	6	add
16	[BUG]  [BUGGY]    if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	    if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }		compilable	  [FE]  NullPointerException  	4	6	add
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  selected  =  option.getLongOpt();  [BUGGY]  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	add	selected  =  option.getLongOpt();	selected  =  option.getOpt();  	compilable	  [FE]  ComparisonFailure  	3	3	replace
18	[BUG]  [BUGGY]  selected  =  option.getLongOpt();  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  selected  =  option.getLongOpt();  [BUGGY]  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	selected  =  option.getLongOpt();	selected  =  option.getOpt();  	compilable	  [FE]  ComparisonFailure  	3	3	replace
19	[BUG]  [BUGGY]  selected  =  option.getItem(selected);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]    selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  selected  =  option.getItem(selected);  [BUGGY]  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	100	100	3	replace	selected  =  option.getItem(selected);	selected  =  option.getOpt();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
