bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
2	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
4	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
5	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
6	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
7	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
8	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
9	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
10	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLo  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLo  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLo	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	137	None	replace
11	[BUG]  [BUGGY]  safeMultiply(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  	50	None	replace
12	[BUG]  [BUGGY]  safeMultiply(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  	50	None	replace
13	[BUG]  [BUGGY]  safeMultiply(selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  	50	None	replace
14	[BUG]  [BUGGY]  safeMultiply(selected,  option.getSelectedIndex()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getSelectedIndex()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getSelectedIndex()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  	50	None	replace
15	[BUG]  [BUGGY]  safeMultiply(selected,  null);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  null);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  null);	  safeMultiply(selected,    this);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
16	[BUG]  [BUGGY]  String  selected  =  option.getText();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
17	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  	180	None	replace
18	[BUG]  [BUGGY]  safeMultiply(selected,  option.getSelectedIndex(),  selected))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getSelectedIndex(),  selected))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getSelectedIndex(),  selected))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  	180	None	replace
19	[BUG]  [BUGGY]  pendencyChecker.checkState(selected  ==  null);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pendencyChecker.checkState(selected  ==  null);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pendencyChecker.checkState(selected  ==  null);	  pendencyChecker.checkState(selected!=    null);    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
20	[BUG]  [BUGGY]  PendencyChecker.checkState(selected!=  null);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  PendencyChecker.checkState(selected!=  null);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	PendencyChecker.checkState(selected!=  null);	  pendencyChecker.checkState(selected!=    null);    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
21	[BUG]  [BUGGY]  PendencyChecker.checkState(selected  ==  null);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  PendencyChecker.checkState(selected  ==  null);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	PendencyChecker.checkState(selected  ==  null);	  pendencyChecker.checkState(selected!=    null);    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
22	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1	None	replace
23	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1	None	replace
24	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	146	None	replace
25	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	146	None	replace
26	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	146	None	replace
27	[BUG]  [BUGGY]  safeMultiply(selected,  option.getSelectedIndex()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getSelectedIndex()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getSelectedIndex()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	146	None	replace
28	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
29	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
30	[BUG]  [BUGGY]  if(selected!=  null)  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
31	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  cast(option,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  cast(option,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  cast(option,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
32	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
33	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
34	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
35	[BUG]  [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getLocation()!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(option.getLocation()!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
36	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
37	[BUG]  [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	170	None	replace
38	[BUG]  [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    	non-compiled	[CE]  not  a  statement	141	None	replace
39	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    	non-compiled	[CE]  not  a  statement	141	None	replace
40	[BUG]  [BUGGY]  safeMultiply(selected,  required);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  required);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  required);	  safeMultiply(selected);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  safeMultiply(selected,  selected);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  selected);	  safeMultiply(selected);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
43	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
44	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	63	6	add
46	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	63	6	add
47	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	63	6	add
48	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	63	6	add
49	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
50	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	63	6	add
51	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	63	6	add
52	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	97	None	replace
53	[BUG]  [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	97	None	replace
54	[BUG]  [BUGGY]  safeMultiply(selected,  option.getUpperCase());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getUpperCase());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getUpperCase());	  safeMultiply(selected,    option.getLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
55	[BUG]  [BUGGY]  safeMultiply(selected,  optionMap.getLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  optionMap.getLowerCase());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  optionMap.getLowerCase());	  safeMultiply(selected,    option.getLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
56	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.setSelected(option.getOpt());  }	  vice.setSelected(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
57	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  throw  new  IllegalStateException( " ");  }	  vice.setSelected(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
58	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  vice.setSelected(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
59	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
62	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
63	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
64	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
65	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
66	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
67	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
68	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey());	  safeMultiply(selected,    option.getValue());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
69	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue(),  selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue(),  selected);	  safeMultiply(selected,    option.getValue());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
70	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue(),  required);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue(),  required);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue(),  required);	  safeMultiply(selected,    option.getValue());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
71	[BUG]  [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
72	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected  +  1);	  Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
73	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected  -  1);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected  -  1);	  Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
74	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected,  required);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected,  required);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected,  required);	  Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
75	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	14	None	replace
76	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	14	None	replace
77	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
78	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
79	[BUG]  [BUGGY]  safeAdd(selected,  option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getName()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getName()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	72	None	replace
80	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.getOpt());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected.getOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected.getOpt());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.get(option.getOpt());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  options.get(option.getOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  options.get(option.getOpt());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
82	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getOpt(),  selected);	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
83	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(option.getKey(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getKey(),  option);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
84	[BUG]  [BUGGY]  parentMap.put(option.getName(),  selected);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(option.getName(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getName(),  selected);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
85	[BUG]  [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getKey();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
86	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
87	[BUG]  [BUGGY]  String  selected  =  option.getSelectedString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getSelectedString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getSelectedString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
88	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected    ==    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
89	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected    ==    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
90	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected    ==    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
91	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue())  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
92	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
93	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
94	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	24	None	replace
95	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	58	None	replace
96	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.setSelected(selected);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.setSelected(selected);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.setSelected(selected);  }	  vice.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.setSelected(selected);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.setSelected(selected);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.setSelected(selected);  }  else  {  throw  new  IllegalStateException( " ");  }	  vice.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.setSelected(selected);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.setSelected(selected);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.setSelected(selected);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  vice.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
99	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt());	  safeMultiply(selected,    option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
100	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt(),  selected);	  safeMultiply(selected,    option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
101	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selectionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	75	None	replace
102	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	127	None	replace
103	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	127	None	replace
104	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    select.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
105	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected    >=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
106	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected    >=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
107	[BUG]  [BUGGY]  optionMap.put(selected.getLongOpt(),  option);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(selected.getLongOpt(),  option);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(selected.getLongOpt(),  option);	  optionMap.put(option.getLongOpt(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
108	[BUG]  [BUGGY]  parentMap.put(selected.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(selected.getKey(),  option);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(selected.getKey(),  option);	  parentMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
109	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getIntOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getIntOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getIntOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getIntOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
110	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getIntOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
111	[BUG]  [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.size()    >    0)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
112	[BUG]  [BUGGY]  Option  option  =  selected.getOption();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  selected.getOption();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  selected.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
113	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =(Option)optionMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =(Option)optionMap.get(selected);	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
114	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  options.getOption();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  options.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
115	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getValue());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getValue());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getValue());	  safeSelected    =    selected.equals(option.getKey());    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
116	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getName());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getName());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getName());	  safeSelected    =    selected.equals(option.getKey());    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
117	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getKey(),  option);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getKey(),  option);	  safeSelected    =    selected.equals(option.getKey());    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
118	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getUpperBound());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getUpperBound());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getUpperBound());	  safeSelected    =    selected.equals(option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
119	[BUG]  [BUGGY]  OptionGroup.this.setSelected(option.getOpt());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup.this.setSelected(option.getOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup.this.setSelected(option.getOpt());	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
120	[BUG]  [BUGGY]  OptionGroup.this.setSelected(option.getOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup.this.setSelected(option.getOpt(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup.this.setSelected(option.getOpt(),  selected);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
121	[BUG]  [BUGGY]  OptionGroup.this.setSelected(option.getText(),  selected);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup.this.setSelected(option.getText(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup.this.setSelected(option.getText(),  selected);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
122	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
123	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
124	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
125	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
126	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
127	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
128	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
129	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.addChangeListener(this);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.addChangeListener(this);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.addChangeListener(this);  }	  vice.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
130	[BUG]  [BUGGY]  null.addChangeListener(this);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  null.addChangeListener(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	null.addChangeListener(this);	  vice.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
131	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.addChangeListener(this);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.addChangeListener(this);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.addChangeListener(this);  }  else  {  throw  new  IllegalStateException( " ");  }	  vice.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
132	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	44	None	replace
133	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue()));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue()));  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue()));	  safeMultiply(selected,    option.getKey()));    	non-compiled	[CE]  ';'  expected	82	None	replace
134	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
135	[BUG]  [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
136	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	40	None	replace
137	[BUG]  [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	40	None	replace
138	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	40	None	replace
139	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  ';'  expected	46	None	replace
140	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
141	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  <identifier>  expected	46	None	replace
142	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  not  a  statement	46	None	replace
143	[BUG]  [BUGGY]  if(selected!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(optionMap!=    null)    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
144	[BUG]  [BUGGY]  if(selected  ==  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(optionMap!=    null)    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
145	[BUG]  [BUGGY]  if(selected!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(optionMap!=    null)    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
146	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
147	[BUG]  [BUGGY]  selected  =  option.getSelected();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  selected  =  option.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	selected  =  option.getSelected();	  selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
148	[BUG]  [BUGGY]  selected  =  option.getName();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  selected  =  option.getName();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	selected  =  option.getName();	  selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
149	[BUG]  [BUGGY]  selected  =  option.getOpt()  +  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  selected  =  option.getOpt()  +  1;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	selected  =  option.getOpt()  +  1;	  selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
150	[BUG]  [BUGGY]  elected  =  option.getSelected();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  elected  =  option.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getSelected();	  elected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
151	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	16	None	replace
152	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	101	None	replace
153	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	101	None	replace
154	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	101	None	replace
155	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.getIndex());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected.getIndex());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected.getIndex());	  Option    option    =    optionMap.get(option.getSelectedIndex());    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
156	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.getSelectedIndex());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected.getSelectedIndex());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected.getSelectedIndex());	  Option    option    =    optionMap.get(option.getSelectedIndex());    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
157	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.getKey());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected.getKey());	  Option    option    =    optionMap.get(option.getSelectedIndex());    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
158	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getSelectedIndex()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(option.getSelectedIndex()  -  1);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getSelectedIndex()  -  1);	  Option    option    =    optionMap.get(option.getSelectedIndex());    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
159	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	110	None	replace
160	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	110	None	replace
161	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	74	None	replace
162	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	74	None	replace
163	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
164	[BUG]  [BUGGY]  Option  selected  =  option.getSelected();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getSelected();	  Option    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
165	[BUG]  [BUGGY]  Option  selected  =  option.getOptionalLocation();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getOptionalLocation();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getOptionalLocation();	  Option    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
166	[BUG]  [BUGGY]  Option  selected  =  option.getSelectedValue();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getSelectedValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getSelectedValue();	  Option    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
167	[BUG]  [BUGGY]  Option  selected  =  option.getOpt();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getOpt();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getOpt();	  Option    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
168	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    select.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
169	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    select.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
170	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getLocation(),  option);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getLocation(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getLocation(),  option);	  safeSelected    =    selected.equals(option.getLocation());    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
171	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	134	None	replace
172	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	134	None	replace
173	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    	non-compiled	[CE]  not  a  statement	175	None	replace
174	[BUG]  [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    	non-compiled	[CE]  not  a  statement	175	None	replace
175	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	41	None	replace
176	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	138	None	replace
177	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation(),  selected);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLocation(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation(),  selected);	  safeMultiply(selected,    option.getLocation());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
178	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation(),  required);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLocation(),  required);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation(),  required);	  safeMultiply(selected,    option.getLocation());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
179	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(optionMap!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
180	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(optionMap!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
181	[BUG]  [BUGGY]  parentMap.put(option.getName(),  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(option.getName(),  null);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getName(),  null);	  parentMap.put(option.getName(),    this);    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
182	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	184	None	replace
183	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	184	None	replace
184	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	73	None	replace
185	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	73	None	replace
186	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	73	None	replace
187	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	142	None	replace
188	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue())  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue())  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue())  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getKey())    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	89	None	replace
189	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  option.getOption(this,  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  option.getOption(this,  selected);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
190	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  this.optionMap.getOption(this);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
191	[BUG]  [BUGGY]  Option  option  =  options.getOption(this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  options.getOption(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  options.getOption(this);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
192	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getName()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
193	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getName()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
194	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getName()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
195	[BUG]  [BUGGY]  safeAdd(selected,  option.getOpt());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getOpt());	  safeAdd(selected,    option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
196	[BUG]  [BUGGY]  safeAdd(selected,  option.getLongOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getLongOpt(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getLongOpt(),  selected);	  safeAdd(selected,    option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
197	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	149	None	replace
198	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	179	6	add
199	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	179	6	add
200	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	179	6	add
201	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	179	6	add
202	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
203	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	179	6	add
204	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	179	6	add
205	[BUG]  [BUGGY]  safeAdd(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getValue())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	125	None	replace
206	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getValue())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	125	None	replace
207	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
208	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
209	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
210	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selectionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	111	None	replace
211	[BUG]  [BUGGY]  for(String  selected  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selectionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	111	None	replace
212	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	187	None	replace
213	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	187	None	replace
214	[BUG]  [BUGGY]  parentMap.put(option.getKey(),  this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(option.getKey(),  this);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getKey(),  this);	  parentMap.put(option.getOpt(),    this);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
215	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
216	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
217	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
218	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
219	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
220	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
221	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
222	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
223	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
224	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  ')'  expected	56	None	replace
225	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
226	[BUG]  [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
227	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	135	None	replace
228	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	135	None	replace
229	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName()  +  1))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName()  +  1))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName()  +  1))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getName()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
230	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
231	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
232	[BUG]  [BUGGY]  if(selected!=  null)  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
233	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  cast(option,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
234	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	122	None	replace
235	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getKey()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	87	None	replace
236	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
237	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
238	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
239	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
240	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
241	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	22	None	replace
242	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
243	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalStateException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
244	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
245	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.get  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.get  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.get	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
246	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
247	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
248	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt()));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt()));  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt()));	  safeMultiply(selected,    option.getLongOpt()));    	non-compiled	[CE]  ';'  expected	173	None	replace
249	[BUG]  [BUGGY]  safeMultiply(selected,  option.getUpperOpt()));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getUpperOpt()));  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getUpperOpt()));	  safeMultiply(selected,    option.getLongOpt()));    	non-compiled	[CE]  ';'  expected	173	None	replace
250	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	2	None	replace
251	[BUG]  [BUGGY]  optionMap.put(selected.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(selected.getKey(),  option);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(selected.getKey(),  option);	  optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
252	[BUG]  [BUGGY]  Option  optionMap.put(option.getKey(),  selected);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  optionMap.put(option.getKey(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  optionMap.put(option.getKey(),  selected);	  optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  ';'  expected	80	None	replace
253	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
254	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
255	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
256	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getShortOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
257	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
258	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
259	[BUG]  [BUGGY]  optionMap.put(selected.getName(),  option);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(selected.getName(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(selected.getName(),  option);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
260	[BUG]  [BUGGY]  Option  optionMap.put(option.getName(),  selected);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  optionMap.put(option.getName(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  optionMap.put(option.getName(),  selected);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  ';'  expected	99	None	replace
261	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  if(selected    ==    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
262	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	65	6	add
263	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	65	6	add
264	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
265	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	65	6	add
266	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	65	6	add
267	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
268	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	65	None	add
269	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	5	None	replace
270	[BUG]  [BUGGY]  String  selected  =  option.getKey();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getKey();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getKey();	  String    selected    =    option.getString();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
271	[BUG]  [BUGGY]  String  selected  =  option.getSelectedString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getSelectedString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getSelectedString();	  String    selected    =    option.getString();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
272	[BUG]  [BUGGY]  String  selected  =  option.getName();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getName();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getName();	  String    selected    =    option.getString();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
273	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
274	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
275	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
276	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
277	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
278	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
279	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
280	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	133	None	replace
281	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	133	None	replace
282	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS  [CE]  '('  or  '['  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  '('  or  '['  expected	76	None	replace
283	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
284	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    ||    selected.equals(option.getName()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
285	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    ||    selected.equals(option.getName()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
286	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    ||    selected.equals(option.getName()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
287	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getKey();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Aleger  <?>  selected  =  option.getKey();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Aleger  <?>  selected  =  option.getKey();	  Aleger    <?>    selected    =    option.getLocation();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	151	None	replace
288	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getSelectedValue();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Aleger  <?>  selected  =  option.getSelectedValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Aleger  <?>  selected  =  option.getSelectedValue();	  Aleger    <?>    selected    =    option.getLocation();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	151	None	replace
289	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getSelectedOption();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Aleger  <?>  selected  =  option.getSelectedOption();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Aleger  <?>  selected  =  option.getSelectedOption();	  Aleger    <?>    selected    =    option.getLocation();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	151	None	replace
290	[BUG]  [BUGGY]  pends.add(option.getOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pends.add(option.getOpt(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getOpt(),  selected);	  pends.add(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
291	[BUG]  [BUGGY]  Pends.add(selected,  option.getOpt());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Pends.add(selected,  option.getOpt());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Pends.add(selected,  option.getOpt());	  pends.add(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
292	[BUG]  [BUGGY]  pends.add(option.getOpt()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pends.add(option.getOpt()  +  1);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getOpt()  +  1);	  pends.add(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
293	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	64	None	replace
294	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	174	None	replace
295	[BUG]  [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	174	None	replace
296	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
297	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
298	[BUG]  [BUGGY]  Option  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
299	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
300	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	143	6	add
301	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	143	6	add
302	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
303	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
304	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	143	6	add
305	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	143	6	add
306	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  return;  }	  	compilable	  [FE]  NullPointerException  	143	6	add
307	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  return;  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  return;  }	  	compilable	  [FE]  NullPointerException  	143	6	add
308	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
309	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getSelectedValue();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getSelectedValue();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
310	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
311	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
312	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
313	[BUG]  [BUGGY]  safeAdd(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
314	[BUG]  [BUGGY]  pends.add(option.getLongOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pends.add(option.getLongOpt(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getLongOpt(),  selected);	  pends.add(option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
315	[BUG]  [BUGGY]  Pends.add(selected.getLongOpt());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Pends.add(selected.getLongOpt());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Pends.add(selected.getLongOpt());	  pends.add(option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
316	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	39	None	replace
317	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getOpt())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	169	None	replace
318	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName())  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getOpt())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	169	None	replace
319	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLowerCase())  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLowerCase())  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLowerCase())  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getOpt())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	169	None	replace
320	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getOpt())    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	169	None	replace
321	[BUG]  [BUGGY]  setSelected(optionMap.get(selected));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  setSelected(optionMap.get(selected));  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	setSelected(optionMap.get(selected));	  cast(optionMap.get(selected));    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
322	[BUG]  [BUGGY]  cast(optionMap.get(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  cast(optionMap.get(0));  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	cast(optionMap.get(0));	  cast(optionMap.get(selected));    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
323	[BUG]  [BUGGY]  cast(optionMap.get(selected),  this);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  cast(optionMap.get(selected),  this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	cast(optionMap.get(selected),  this);	  cast(optionMap.get(selected));    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
324	[BUG]  [BUGGY]  String  selected  =  option.getSelectedString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getSelectedString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getSelectedString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
325	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	144	None	replace
326	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this,  option);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this,  option);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	144	None	replace
327	[BUG]  [BUGGY]  safeAdd(selected,  option.getOpt()));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getOpt()));  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getOpt()));	  safeAdd(selected,    option.getLongOpt()));    	non-compiled	[CE]  ';'  expected	62	None	replace
328	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
329	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
330	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  throw  new  IllegalArgumentException( " ");  }	  safeMultiply(selected,    option.getName())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  	38	None	replace
331	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName()  +  1)  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName()  +  1)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName()  +  1)  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getName())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
332	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    select.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
333	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    select.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
334	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    select.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
335	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getKey(),  selected);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(option.getKey(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getKey(),  selected);	  Option    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
336	[BUG]  [BUGGY]  Option  option  =  options.get(option.getKey());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  options.get(option.getKey());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  options.get(option.getKey());	  Option    option    =    optionMap.get(option.getKey());    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
337	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	102	None	replace
338	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	167	None	replace
339	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getSelected();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Aleger  <?>  selected  =  option.getSelected();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Aleger  <?>  selected  =  option.getSelected();	  Aleger    <?>    selected    =    option.getOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	36	None	replace
340	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getValue();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Aleger  <?>  selected  =  option.getValue();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Aleger  <?>  selected  =  option.getValue();	  Aleger    <?>    selected    =    option.getOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	36	None	replace
341	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  	182	None	replace
342	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getName()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	59	None	replace
343	[BUG]  [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
344	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
345	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
346	[BUG]  [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
347	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	140	None	replace
348	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
349	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
350	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  ')'  expected	77	None	replace
351	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	183	None	replace
352	[BUG]  [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	183	None	replace
353	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getValue()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	183	None	replace
354	[BUG]  [BUGGY]  safeNameMap.put(selected.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(selected.getKey(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(selected.getKey(),  option);	  safeNameMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
355	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
356	[BUG]  [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
357	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
358	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
359	[BUG]  [BUGGY]  parent.setSelected(null);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent.setSelected(null);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent.setSelected(null);	  parent.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
360	[BUG]  [BUGGY]  parent.setSelected(this);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent.setSelected(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent.setSelected(this);	  parent.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
361	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getValue()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getValue()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getValue()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	4	None	replace
362	[BUG]  [BUGGY]  pendSeparator  =  selected.getSeparator();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pendSeparator  =  selected.getSeparator();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pendSeparator  =  selected.getSeparator();	  pendSeparator    =    option.getSeparator();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
363	[BUG]  [BUGGY]  pendSeparator  =  option.getPendSeparator();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pendSeparator  =  option.getPendSeparator();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pendSeparator  =  option.getPendSeparator();	  pendSeparator    =    option.getSeparator();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
364	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
365	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException(this);  }	  safeMultiply(selected,    option.getKey())    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	89	None	replace
366	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	2	None	replace
367	[BUG]  [BUGGY]  for(String  option  :  options.values())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.values())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.values())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getName()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	59	None	replace
368	[BUG]  [BUGGY]  pendSeparator  =  option.getPosition();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pendSeparator  =  option.getPosition();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pendSeparator  =  option.getPosition();	  pendSeparator    =    option.getSeparator();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
369	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
370	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(selected);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  String>  selected  =  optionMap.get(selected);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	56	None	replace
371	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(option.getText());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(option.getText());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  String>  selected  =  optionMap.get(option.getText());	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	56	None	replace
372	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	97	None	replace
373	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selectionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	15	None	replace
374	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this);  }  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this);  }	  safeMultiply(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	70	None	replace
375	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLopt())  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLopt())  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLopt())  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	70	None	replace
376	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selectionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	75	None	replace
377	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(selected);  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected);  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
378	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
379	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
380	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
381	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLopt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLopt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLopt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
382	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
383	[BUG]  [BUGGY]  safeNameMap.put(option.getKey(),  option.getValue());  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(option.getKey(),  option.getValue());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getKey(),  option.getValue());	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
384	[BUG]  [BUGGY]  fieldMap.put(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  fieldMap.put(option.getKey(),  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	fieldMap.put(option.getKey(),  option);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
385	[BUG]  [BUGGY]  safeNameMap.put(option.getKey(),  option.getOpt());  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(option.getKey(),  option.getOpt());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getKey(),  option.getOpt());	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
386	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selectionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	111	None	replace
387	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
388	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
389	[BUG]  [BUGGY]  elected  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  elected  =  option.getOption();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getOption();	  elected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
390	[BUG]  [BUGGY]  if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS  [CE]  '('  or  '['  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  '('  or  '['  expected	76	None	replace
391	[BUG]  [BUGGY]  if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
392	[BUG]  [BUGGY]  if(option.getOptions()  ==  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS  [CE]  '('  or  '['  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOptions()  ==  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOptions()  ==  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadyS	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  '('  or  '['  expected	76	None	replace
393	[BUG]  [BUGGY]  if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException  [CE]  '('  or  '['  expected  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOptions()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  '('  or  '['  expected	76	None	replace
394	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
395	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
396	[BUG]  [BUGGY]  parent.setSelected(option.getOpt());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent.setSelected(option.getOpt());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent.setSelected(option.getOpt());	  parent.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
397	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    select.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
398	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	184	None	replace
399	[BUG]  [BUGGY]  ensureCapacity(selected,  option.getLongOpt()));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  ensureCapacity(selected,  option.getLongOpt()));  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	ensureCapacity(selected,  option.getLongOpt()));	  safeAdd(selected,    option.getLongOpt()));    	non-compiled	[CE]  ';'  expected	62	None	replace
400	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
401	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    	non-compiled	[CE]  not  a  statement	175	None	replace
402	[BUG]  [BUGGY]  pends.add(option.getSelectedLongOpt());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pends.add(option.getSelectedLongOpt());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getSelectedLongOpt());	  pends.add(option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
403	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	44	None	replace
404	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	44	None	replace
405	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
406	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
407	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	149	None	replace
408	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getSelectedValue()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getSelectedValue()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getSelectedValue()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    selected    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	40	None	replace
409	[BUG]  [BUGGY]  safeMultiply(selected,  option);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option);	  safeMultiply(selected);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
410	[BUG]  [BUGGY]  safeMultiply(selected,  options);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  options);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  options);	  safeMultiply(selected);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
411	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
412	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
413	[BUG]  [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  }	  safeMultiply(selected,    option.getLocation())    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	133	None	replace
414	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
415	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
416	[BUG]  [BUGGY]  SafeNameMap.put(option.getKey(),  selected);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  SafeNameMap.put(option.getKey(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	SafeNameMap.put(option.getKey(),  selected);	  safeNameMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
417	[BUG]  [BUGGY]  safeNameMap.put(option.getKey(),  selected  +  1);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(option.getKey(),  selected  +  1);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getKey(),  selected  +  1);	  safeNameMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
418	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
419	[BUG]  [BUGGY]  safeSelected  =  option.equals(selected.getLongOpt());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  option.equals(selected.getLongOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  option.equals(selected.getLongOpt());	  safeSelected    =    selected.equals(option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
420	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getUpperOpt());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getUpperOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getUpperOpt());	  safeSelected    =    selected.equals(option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
421	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    select.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
422	[BUG]  [BUGGY]  Option  selected  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getOption();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getOption();	  Option    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
423	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	73	None	replace
424	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalStateException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
425	[BUG]  [BUGGY]  if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
426	[BUG]  [BUGGY]  if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
427	[BUG]  [BUGGY]  optionMap.put(selected,  option);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(selected,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(selected,  option);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
428	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getText());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  options.getOption(option.getText());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  options.getOption(option.getText());	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
429	[BUG]  [BUGGY]  Context.checkState(selected!=  null);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Context.checkState(selected!=  null);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Context.checkState(selected!=  null);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
430	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
431	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  ';'  expected	46	None	replace
432	[BUG]  [BUGGY]  if(option.getSelectedIndex()!=  0)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getSelectedIndex()!=  0)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getSelectedIndex()!=  0)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  ';'  expected	46	None	replace
433	[BUG]  [BUGGY]  if(option.getSelectedIndex()  ==  0)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getSelectedIndex()  ==  0)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getSelectedIndex()  ==  0)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  ';'  expected	46	None	replace
434	[BUG]  [BUGGY]  pends.add(option.getSelected());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pends.add(option.getSelected());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getSelected());	  pends.add(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
435	[BUG]  [BUGGY]  Pends.add(option.getOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Pends.add(option.getOpt(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Pends.add(option.getOpt(),  selected);	  pends.add(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
436	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getLocation());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(option.getLocation());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getLocation());	  if(selected    ==    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
437	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  option.getText();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  String>  selected  =  option.getText();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  String>  selected  =  option.getText();	  if(selected    ==    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	162	None	replace
438	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
439	[BUG]  [BUGGY]  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  option  =  option.getOption();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	option  =  option.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
440	[BUG]  [BUGGY]  Option  option  =  option.cloneOption();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  option.cloneOption();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  option.cloneOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
441	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
442	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
443	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
444	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	145	6	add
445	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	74	None	replace
446	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
447	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
448	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
449	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(option.getString());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(option.getString());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  String>  selected  =  optionMap.get(option.getString());	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	77	None	replace
450	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLong()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLong()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLong()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected    ==    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
451	[BUG]  [BUGGY]  if(selected!=  null)  {  cast(optionMap.get(selected));  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  cast(optionMap.get(selected));  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  cast(optionMap.get(selected));  }	  cast(optionMap.get(selected));    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
452	[BUG]  [BUGGY]  if(selected!=  null)  {  cast(optionMap.get(selected));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  cast(optionMap.get(selected));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  cast(optionMap.get(selected));  }  else  {  throw  new  IllegalStateException( " ");  }	  cast(optionMap.get(selected));    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
453	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getText());  if(option!=  null  ||  option.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(option.getText());  if(option!=  null  ||  option.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getText());  if(option!=  null  ||  option.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.size()    >    0)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
454	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getText());  if(option!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(option.getText());  if(option!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getText());  if(option!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.size()    >    0)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
455	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(option.getOpt());  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  String>  selected  =  optionMap.get(option.getOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  String>  selected  =  optionMap.get(option.getOpt());	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	25	None	replace
456	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	3	None	replace
457	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	187	None	replace
458	[BUG]  [BUGGY]  if(option.getLocation()  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getLocation()  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getLocation()  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(option.getLocation()!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
459	[BUG]  [BUGGY]  if(option!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(optionMap!=    null)    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
460	[BUG]  [BUGGY]  if(option  ==  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(optionMap!=    null)    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
461	[BUG]  [BUGGY]  if(option!=  null)  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(optionMap!=    null)    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
462	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	101	None	replace
463	[BUG]  [BUGGY]  optionMap.put(option.getLocation(),  selected);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(option.getLocation(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getLocation(),  selected);	  optionMap.put(option.getOpt(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
464	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( " ");  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	170	None	replace
465	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	170	None	replace
466	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(selected);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionsMap.get(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionsMap.get(selected);	  Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
467	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
468	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getLowerCase());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getLowerCase());	  safeSelected    =    selected.equals(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
469	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  selected  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(option.getKey(),  selected  +  1);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getKey(),  selected  +  1);	  optionMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
470	[BUG]  [BUGGY]  if(option!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
471	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	142	None	replace
472	[BUG]  [BUGGY]  if(selected  ==  null)  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  cast(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
473	[BUG]  [BUGGY]  if(selected!=  null)  {  cast(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  cast(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  cast(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
474	[BUG]  [BUGGY]  while(selected!=  null  &&  option.getLongOpt()!=  null)  {  selected  =  option.getLongOpt();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  while(selected!=  null  &&  option.getLongOpt()!=  null)  {  selected  =  option.getLongOpt();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	while(selected!=  null  &&  option.getLongOpt()!=  null)  {  selected  =  option.getLongOpt();	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
475	[BUG]  [BUGGY]  safeMultiply(selected,  option.getUpperOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getUpperOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getUpperOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
476	[BUG]  [BUGGY]  this.selected  =  option.getString();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  this.selected  =  option.getString();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	this.selected  =  option.getString();	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
477	[BUG]  [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
478	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
479	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected    >=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
480	[BUG]  [BUGGY]  safeNameMap.put(option.getLongOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(option.getLongOpt(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getLongOpt(),  selected);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
481	[BUG]  [BUGGY]  safeNameMap.put(option.getKey(),  option.getLongOpt());  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(option.getKey(),  option.getLongOpt());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getKey(),  option.getLongOpt());	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
482	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
483	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	174	None	replace
484	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
485	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
486	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
487	[BUG]  [BUGGY]  elected  =  option.getLongOpt();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  elected  =  option.getLongOpt();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getLongOpt();	  elected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
488	[BUG]  [BUGGY]  elected  =  option.getOpt()  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  elected  =  option.getOpt()  +  1;  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getOpt()  +  1;	  elected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
489	[BUG]  [BUGGY]  OptionGroup.this.setSelected(option);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup.this.setSelected(option);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup.this.setSelected(option);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
490	[BUG]  [BUGGY]  Option  group  =  optionMap.get(selected);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  group  =  optionMap.get(selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  group  =  optionMap.get(selected);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
491	[BUG]  [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	102	None	replace
492	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	102	None	replace
493	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
494	[BUG]  [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getLocation()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
495	[BUG]  [BUGGY]  if(selected  ==  null)  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
496	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
497	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getValue())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	125	None	replace
498	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
499	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
500	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()  ==  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()  ==  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
501	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
502	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getShortOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getShortOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getShortOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
503	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getIntOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getIntOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getIntOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
504	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this);  }	  safeMultiply(selected,    option.getName()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	72	None	replace
505	[BUG]  [BUGGY]  optionMap.put(option.getName(),  selected  +  1);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  optionMap.put(option.getName(),  selected  +  1);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getName(),  selected  +  1);	  optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
506	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getKey())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	128	None	replace
507	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getKey())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	128	None	replace
508	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	14	None	replace
509	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  IllegalArgumentException(this,  option);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  IllegalArgumentException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  throw  new  IllegalArgumentException(this,  option);  }	  safeMultiply(selected,    option.getName())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
510	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getText());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeSelected  =  selected.equals(option.getText());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getText());	  safeSelected    =    selected.equals(option.getKey());    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
511	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
512	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null)  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
513	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
514	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	147	6	add
515	[BUG]  [BUGGY]  selected  =  option.getKey();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  selected  =  option.getKey();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	selected  =  option.getKey();	  selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
516	[BUG]  [BUGGY]  parentMap.put(option.getLocation(),  selected);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(option.getLocation(),  selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getLocation(),  selected);	  parentMap.put(option.getOpt(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
517	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	126	None	replace
518	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	167	None	replace
519	[BUG]  [BUGGY]  parentMap.put(option.getKey(),  selected  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(option.getKey(),  selected  +  1);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getKey(),  selected  +  1);	  parentMap.put(option.getKey(),    selected);    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
520	[BUG]  [BUGGY]  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
521	[BUG]  [BUGGY]  if(option!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
522	[BUG]  [BUGGY]  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
523	[BUG]  [BUGGY]  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
524	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	127	None	replace
525	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	127	None	replace
526	[BUG]  [BUGGY]  option.setSelected(option.getOpt());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  option.setSelected(option.getOpt());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	option.setSelected(option.getOpt());	  vice.setSelected(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
527	[BUG]  [BUGGY]  safeAdd(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getName()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
528	[BUG]  [BUGGY]  safeName(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeName(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeName(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getName()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
529	[BUG]  [BUGGY]  safeNameMap.put(option.getLocalName(),  selected);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(option.getLocalName(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getLocalName(),  selected);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
530	[BUG]  [BUGGY]  safeNameMap.put(option.getLocation(),  selected);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeNameMap.put(option.getLocation(),  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getLocation(),  selected);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
531	[BUG]  [BUGGY]  vice.removeChangeListener(this);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  vice.removeChangeListener(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	vice.removeChangeListener(this);	  vice.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
532	[BUG]  [BUGGY]  v.addChangeListener(this);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  v.addChangeListener(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	v.addChangeListener(this);	  vice.addChangeListener(this);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
533	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
534	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected!=  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	181	6	add
535	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
536	[BUG]  [BUGGY]  selected  =  option.getLongOpt();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  selected  =  option.getLongOpt();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	selected  =  option.getLongOpt();	  selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
537	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getOpt());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionsMap.get(option.getOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionsMap.get(option.getOpt());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
538	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  parent!=  null  &&  parent.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
539	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  parent!=  null  &&  parent.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
540	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
541	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=    null)    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	109	None	replace
542	[BUG]  [BUGGY]  parent.replaceChild(option,  selected);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent.replaceChild(option,  selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent.replaceChild(option,  selected);	  parent.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
543	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    select.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
544	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
545	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.get  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.get  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.get	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
546	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.getOption(this);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.getOption(this);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
547	[BUG]  [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getUpperBound())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
548	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
549	[BUG]  [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getUpperBound())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	126	None	replace
550	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    	non-compiled	[CE]  not  a  statement	175	None	replace
551	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    	non-compiled	[CE]  not  a  statement	175	None	replace
552	[BUG]  [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  Preconditions.checkState(selected.equals(option.getOpt()));  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  Preconditions.checkState(selected.equals(option.getOpt()));  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  vice.setSelected(option.getOpt());  }  else  {  Preconditions.checkState(selected.equals(option.getOpt()));  }	  vice.setSelected(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
553	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
554	[BUG]  [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.size()    >    0)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
555	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	146	None	replace
556	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this);  }  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this);  }	  safeMultiply(selected,    option.getKey()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	87	None	replace
557	[BUG]  [BUGGY]  v.setSelected(selected);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  v.setSelected(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	v.setSelected(selected);	  vice.setSelected(selected);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
558	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getLongOpt());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  option  =  optionMap.get(option.getLongOpt());  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getLongOpt());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
559	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  if(selected    ==    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
560	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected    ==    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
561	[BUG]  [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	14	None	replace
562	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  }	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	138	None	replace
563	[BUG]  [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	22	None	replace
564	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
565	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  ||  selected.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getParent()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	140	None	replace
566	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	140	None	replace
567	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
568	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
569	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selectionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	15	None	replace
570	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(optionMap!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
571	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option.getOpt()!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
572	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
573	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
574	[BUG]  [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
575	[BUG]  [BUGGY]  OptionGroup  <  String,String>  selected  =  option.getText();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  String,String>  selected  =  option.getText();  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  String,String>  selected  =  option.getText();	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	27	None	replace
576	[BUG]  [BUGGY]  OptionGroup  <  String>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  String>  selected  =  option.getOpt();  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  String>  selected  =  option.getOpt();	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	27	None	replace
577	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	149	None	replace
578	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
579	[BUG]  [BUGGY]  if(option.getLocation()  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getLocation()  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getLocation()  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
580	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	135	None	replace
581	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
582	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
583	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
584	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
585	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
586	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
587	[BUG]  [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	187	None	replace
588	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  ';'  expected	46	None	replace
589	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.get    	non-compiled	[CE]  ';'  expected	46	None	replace
590	[BUG]  [BUGGY]  luate(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  luate(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	luate(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
591	[BUG]  [BUGGY]  clazz(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  clazz(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	clazz(option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getLongOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	177	None	replace
592	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName(),  false))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName(),  false))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName(),  false))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getName()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
593	[BUG]  [BUGGY]  parentMap.put(option.getLocation(),  this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(option.getLocation(),  this);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getLocation(),  this);	  parentMap.put(option.getOpt(),    this);    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
594	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
595	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
596	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
597	[BUG]  [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
598	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
599	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	142	None	replace
600	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	74	None	replace
601	[BUG]  [BUGGY]  pends.add(option.getKey());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  pends.add(option.getKey());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getKey());	  pends.add(option.getOpt());    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
602	[BUG]  [BUGGY]  parentMap.put(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parentMap.put(option.getKey(),  option);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getKey(),  option);	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected    >=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
603	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(optionMap!=    null)    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
604	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName(),  false)  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getName(),  false)  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName(),  false)  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getName())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	38	None	replace
605	[BUG]  [BUGGY]  safeAdd(selected,  option.getLongOpt(),  this);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getLongOpt(),  this);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getLongOpt(),  this);	  safeAdd(selected,    option.getLongOpt());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
606	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
607	[BUG]  [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(optionMap!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
608	[BUG]  [BUGGY]  Option  selected  =  option.getKey();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getKey();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getKey();	  Option    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
609	[BUG]  [BUGGY]  Option  selected  =  option.getItem(selected);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  Option  selected  =  option.getItem(selected);  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getItem(selected);	  Option    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
610	[BUG]  [BUGGY]  safeMultiply(selected,  option.getText(),  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getText(),  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getText(),  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
611	[BUG]  [BUGGY]  safeMultiply(selected,  option.getText(),  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getText(),  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getText(),  option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
612	[BUG]  [BUGGY]  safeMultiply(selected,  option.getText(),  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getText(),  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getText(),  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	104	None	replace
613	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	133	None	replace
614	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	133	None	replace
615	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	174	None	replace
616	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	174	None	replace
617	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
618	[BUG]  [BUGGY]  safeMultiply(selected,  option.getText(),  option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getText(),  option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getText(),  option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	105	None	replace
619	[BUG]  [BUGGY]  safeMultiply(selected,  option.getText(),  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getText(),  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getText(),  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	105	None	replace
620	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  option.getParent())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  parent  ==  option.getParent())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  parent  ==  option.getParent())  {  throw  new  AlreadySelectedException(this,  option);  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	64	None	replace
621	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
622	[BUG]  [BUGGY]  if(selected!=  null)  {  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	  cast(selected,    option.getOpt())    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	176	None	replace
623	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
624	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
625	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
626	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	47	6	add
627	[BUG]  [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getUpperBound())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	101	None	replace
628	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  }	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
629	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(optionMap!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
630	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
631	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(optionMap!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
632	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
633	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	167	None	replace
634	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    if(selected    ==    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
635	[BUG]  [BUGGY]  if(option.getSelectedIndex()!=  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getSelectedIndex()!=  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getSelectedIndex()!=  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
636	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException( " ");  }	  parent!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	170	None	replace
637	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(optionMap!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
638	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap.containsKey(selected))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap.containsKey(selected))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(optionMap.containsKey(selected))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
639	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(optionMap!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(optionMap!=  null)  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
640	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
641	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  if(option!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
642	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
643	[BUG]  [BUGGY]  if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected)||  optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
644	[BUG]  [BUGGY]  if(optionMap!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
645	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
646	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
647	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    &&    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option.getOpt()!=  null)  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	179	None	add
648	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  parent.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(       "       ");    }    if(selected!=    null    ||    selected.equals(option.getName()))    {    throw    new    AlreadySelectedException(   "       ");    }    	non-compiled	[CE]  not  a  statement	51	None	replace
649	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
650	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
651	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(this,        option);        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option  ==  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
652	[BUG]  [BUGGY]  elected  =  option.getKey();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  elected  =  option.getKey();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getKey();	  elected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
653	[BUG]  [BUGGY]  elected  =  option.getName();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  elected  =  option.getName();  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getName();	  elected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
654	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	181	None	add
655	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    optionMap.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	110	None	replace
656	[BUG]  [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
657	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalStateException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
658	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }	  [Delete]    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	139	None	replace
659	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
660	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  IllegalStateException( " ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
661	[BUG]  [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getName()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	59	None	replace
662	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadyS  [CE]  '('  or  '['  expected  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadyS  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadyS	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  '('  or  '['  expected	29	None	replace
663	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	16	None	replace
664	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  String    selected    =    option.getText();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
665	[BUG]  [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadyS  [CE]  '('  or  '['  expected  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadyS  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadyS	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  '('  or  '['  expected	55	None	replace
666	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
667	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    &&    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
668	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getOpt())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  safeMultiply(selected,    option.getLocation())    {    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	134	None	replace
669	[BUG]  [BUGGY]  safeAdd(selected,  option.getKey()));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getKey()));  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getKey()));	  safeAdd(selected,    option.getLongOpt()));    	non-compiled	[CE]  ';'  expected	62	None	replace
670	[BUG]  [BUGGY]  safeAdd(selected,  option.getUpperBound()));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeAdd(selected,  option.getUpperBound()));  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getUpperBound()));	  safeAdd(selected,    option.getLongOpt()));    	non-compiled	[CE]  ';'  expected	62	None	replace
671	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  parent  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException( " ");	  parent    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    	non-compiled	[CE]  not  a  statement	141	None	replace
672	[BUG]  [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getUpperBound())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getUpperBound())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	102	None	replace
673	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	102	None	replace
674	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	73	None	replace
675	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	  if(optionMap.containsKey(selected))    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
676	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	127	None	replace
677	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  safeMultiply(selected,    option.getLongOpt())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	127	None	replace
678	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(option.getOpt()!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
679	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
680	[BUG]  [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]          if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(     "     ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "     ");  }  if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	                if(selected!=        null        ||        selected.equals(option.getOpt()))        {        throw        new        AlreadySelectedException(       "       ");        }        if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "       ");    }    if(selected  ==  null)  {  throw  new  AlreadySelectedException( " ");  }	  	compilable	  [FE]  NullPointerException  	49	6	add
681	[BUG]  [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(selected);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  OptionGroup  <  K,  V>  selected  =  optionMap.get(selected);  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	OptionGroup  <  K,  V>  selected  =  optionMap.get(selected);	  if(optionMap.containsKey(selected))    {    if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	25	None	replace
682	[BUG]  [BUGGY]  cast(optionMap.get(selected).toString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  cast(optionMap.get(selected).toString());  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	cast(optionMap.get(selected).toString());	  cast(optionMap.get(selected));    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
683	[BUG]  [BUGGY]  cast(optionMap.get(selected  +  1));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  cast(optionMap.get(selected  +  1));  [BUGGY]      }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	cast(optionMap.get(selected  +  1));	  cast(optionMap.get(selected));    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
684	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
685	[BUG]  [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]        if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }      [BUGGY]  if(option.getOpt()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]        [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getOpt()!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
