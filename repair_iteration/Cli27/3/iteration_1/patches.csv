bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLocation();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	18	None	replace
2	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	18	None	replace
3	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	18	None	replace
4	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	17	None	replace
5	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	17	None	replace
6	[BUG]  [BUGGY]  elected  =  option.getLocation();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  elected  =  option.getLocation();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getLocation();	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  selected  =  option.getLocation();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  selected  =  option.getLocation();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	selected  =  option.getLocation();	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  Option  selected  =  option.getLocation();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Option  selected  =  option.getLocation();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  selected  =  option.getLocation();	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
9	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLocation());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation());	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
10	[BUG]  [BUGGY]  elected  =  option.getOpt();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  elected  =  option.getOpt();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	elected  =  option.getOpt();	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  vice.setSelected(selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  vice.setSelected(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	vice.setSelected(selected);	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  parent.setSelected(selected);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parent.setSelected(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent.setSelected(selected);	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  safeMultiply(selected);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected);	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	11	None	replace
15	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	11	None	replace
16	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	11	None	replace
17	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
19	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
20	[BUG]  [BUGGY]  selected  =  option.getOpt();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  selected  =  option.getOpt();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	selected  =  option.getOpt();	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  safeMultiply(selected,  this);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  this);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  this);	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	10	None	replace
23	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	10	None	replace
24	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	10	None	replace
25	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
28	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
29	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
30	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
31	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
32	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
33	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Aleger  <?>  selected  =  option.getOpt();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Aleger  <?>  selected  =  option.getOpt();	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
37	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
38	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getName())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName())  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
39	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	9	None	replace
40	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	9	None	replace
41	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	9	None	replace
42	[BUG]  [BUGGY]  vice.setSelected(option.getOpt());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  vice.setSelected(option.getOpt());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	vice.setSelected(option.getOpt());	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  vice.addChangeListener(this);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  vice.addChangeListener(this);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	vice.addChangeListener(this);	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
45	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
46	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.get	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	25	None	replace
47	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
48	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
49	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
50	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
51	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( "   ");  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
52	[BUG]  [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option.getLocation()!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option.getLocation()!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
56	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
57	[BUG]  [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.size()  >  0)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	16	None	replace
59	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	16	None	replace
60	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt());	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  safeAdd(selected,  option.getLongOpt());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeAdd(selected,  option.getLongOpt());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getLongOpt());	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  safeAdd(selected,  option.getLongOpt()));  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeAdd(selected,  option.getLongOpt()));  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeAdd(selected,  option.getLongOpt()));	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	20	None	replace
63	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
64	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
66	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
67	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getName()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
68	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
69	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
70	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
71	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
72	[BUG]  [BUGGY]  safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]        NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getName()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
73	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	replace
74	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	replace
75	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	replace
76	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
77	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap.containsKey(selected))  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
80	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  selected);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  optionMap.put(option.getKey(),  selected);  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getKey(),  selected);	  if(selected!=    null)    {    if(selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
81	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getValue());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue());	  if(selected!=    null)    {    if(selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
82	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey()));  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getKey()));  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey()));	  if(selected!=    null)    {    if(selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
83	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  >=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  >=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  >=  null  ||  selected.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
86	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
87	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
88	[BUG]  [BUGGY]  optionMap.put(option.getOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  optionMap.put(option.getOpt(),  selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getOpt(),  selected);	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]        NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
90	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  ';'  expected	7	None	replace
91	[BUG]  [BUGGY]  pendSeparator  =  option.getSeparator();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  pendSeparator  =  option.getSeparator();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pendSeparator  =  option.getSeparator();	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
92	[BUG]  [BUGGY]  pends.add(option.getOpt());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  pends.add(option.getOpt());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getOpt());	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
93	[BUG]  [BUGGY]  pends.add(option.getLongOpt());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  pends.add(option.getLongOpt());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pends.add(option.getLongOpt());	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
94	[BUG]  [BUGGY]  Option  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Option  option  =  option.getOption();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  option.getOption();	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
95	[BUG]  [BUGGY]  Option  option  =  option.getOption(this);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Option  option  =  option.getOption(this);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  option.getOption(this);	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
96	[BUG]  [BUGGY]  String  selected  =  option.getString();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getString();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getString();	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
97	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	11	None	replace
98	[BUG]  [BUGGY]  safeNameMap.put(option.getKey(),  selected);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeNameMap.put(option.getKey(),  selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeNameMap.put(option.getKey(),  selected);	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
99	[BUG]  [BUGGY]  optionMap.put(option.getName(),  selected);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  optionMap.put(option.getName(),  selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getName(),  selected);	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
100	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	20	None	replace
101	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	20	None	replace
102	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	20	None	replace
103	[BUG]  [BUGGY]  optionMap.put(option.getLongOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  optionMap.put(option.getLongOpt(),  selected);  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	optionMap.put(option.getLongOpt(),  selected);	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
104	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
105	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
106	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
107	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getIntOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getIntOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getIntOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLocation()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
109	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(option!=  null)  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
110	[BUG]  [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	10	None	replace
111	[BUG]  [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selectionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	9	None	replace
112	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
113	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected  ==  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
114	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  >=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected  >=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected  >=  null  ||  selected.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
115	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  select.equals(option.getString()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
116	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
117	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
118	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
119	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
121	[BUG]  [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
122	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	16	None	replace
123	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLowerCase());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLowerCase());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLowerCase());	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
124	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  select.equals(option.getText()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
125	[BUG]  [BUGGY]  safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getValue())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
126	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
127	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt())  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
128	[BUG]  [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]                    ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getKey())  {  if(selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	5	None	replace
129	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getKey());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Option  option  =  optionMap.get(option.getKey());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getKey());	  if(selected!=    null)    {    if(selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
131	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
132	[BUG]  [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(option!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
133	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation())  {  if(selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
134	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation())  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
135	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLocation())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLocation())  {  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  ';'  expected	14	None	replace
136	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getString();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
137	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getString();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
138	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
139	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  [Delete]  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	[Delete]	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
140	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
141	[BUG]  [BUGGY]  parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  [CE]  not  a  statement  [FE]                    ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
142	[BUG]  [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  options.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	  for(String    option    :    options.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	16	None	replace
143	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
144	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
145	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
146	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
147	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
148	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  	compilable	  [FE]  NullPointerException  	3	6	add
149	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	11	None	replace
150	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getLocation());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeSelected  =  selected.equals(option.getLocation());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getLocation());	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
151	[BUG]  [BUGGY]  Aleger  <?>  selected  =  option.getLocation();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Aleger  <?>  selected  =  option.getLocation();  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Aleger  <?>  selected  =  option.getLocation();	      if(selected!=    null)    {    if(selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
152	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getLongOpt());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeSelected  =  selected.equals(option.getLongOpt());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getLongOpt());	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
153	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getOpt());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeSelected  =  selected.equals(option.getOpt());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getOpt());	  if(selected!=    null)    {    if(selected.equals(option.getLongOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
154	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getOpt());	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
155	[BUG]  [BUGGY]  parentMap.put(option.getOpt(),  this);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parentMap.put(option.getOpt(),  this);  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getOpt(),  this);	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
156	[BUG]  [BUGGY]  parentMap.put(option.getOpt(),  selected);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parentMap.put(option.getOpt(),  selected);  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getOpt(),  selected);	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
157	[BUG]  [BUGGY]  if(optionMap!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap!=  null)  {  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
158	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getLongOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLongOpt()))    {    selected    =    option.getLongOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
159	[BUG]  [BUGGY]  parentMap.put(option.getKey(),  selected);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parentMap.put(option.getKey(),  selected);  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getKey(),  selected);	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
160	[BUG]  [BUGGY]  parentMap.put(option.getName(),  this);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parentMap.put(option.getName(),  this);  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parentMap.put(option.getName(),  this);	  if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
161	[BUG]  [BUGGY]  safeSelected  =  selected.equals(option.getKey());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeSelected  =  selected.equals(option.getKey());  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeSelected  =  selected.equals(option.getKey());	  if(selected!=    null)    {    if(selected.equals(option.getKey()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
162	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
163	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  selected  =  option.getLocation();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getLocation()))    {    selected    =    option.getLocation();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
164	[BUG]  [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected  ==  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
165	[BUG]  [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(optionMap!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
166	[BUG]  [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	if(selected!=  null)  {  String  selected  =  option.getText();  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
167	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	replace
168	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	8	None	replace
169	[BUG]  [BUGGY]  safeMultiply(selected,  option.getOpt())  {  selected  =  option.getOpt();  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getOpt())  {  selected  =  option.getOpt();  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getOpt())  {  selected  =  option.getOpt();  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    selected    =    option.getOpt();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
170	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
171	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [CE]  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt()))  {  throw  new  AlreadySelectedException( " ");  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
172	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Option  option  =  optionMap.get(selected);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(selected);	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
173	[BUG]  [BUGGY]  safeMultiply(selected,  option.getLongOpt()));  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  safeMultiply(selected,  option.getLongOpt()));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	safeMultiply(selected,  option.getLongOpt()));	      if(selected!=    null)    {    String    selected    =    option.getString();    if(selected!=    null    ||    selected.equals(option.getString()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
174	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
175	[BUG]  [BUGGY]  parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	parent!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(this,  option);	      if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  not  a  statement	4	None	replace
176	[BUG]  [BUGGY]  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	cast(selected,  option.getOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
177	[BUG]  [BUGGY]  cast(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  cast(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	cast(selected,  option.getLongOpt())  {  throw  new  AlreadySelectedException(this,  option);  }	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
178	[BUG]  [BUGGY]  cast(optionMap.get(selected));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  cast(optionMap.get(selected));  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	cast(optionMap.get(selected));	      if(selected!=    null)    {    if(selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
179	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
180	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null  &&  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
181	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	add	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
182	[BUG]  [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]      if(selected!=  null  ||  selected.equals(option.getOpt()))  {  throw  new  AlreadySelectedException(   "   ");  }  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( "   ");  }  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	        if(selected!=    null    ||    selected.equals(option.getOpt()))    {    throw    new    AlreadySelectedException(   "   ");    }    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  throw  new  AlreadySelectedException( "   ");  }	  	compilable	  [FE]  NullPointerException  	6	6	add
183	[BUG]  [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  selected  :  optionMap.keySet())  {  if(selected!=  null  ||  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	10	None	replace
184	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  AlreadySelectedException(this,  option.getValue());  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    AlreadySelectedException(this,    option.getValue());    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	10	None	replace
185	[BUG]  [BUGGY]  pendencyChecker.checkState(selected!=  null);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  pendencyChecker.checkState(selected!=  null);  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	pendencyChecker.checkState(selected!=  null);	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
186	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getSelectedIndex());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  Option  option  =  optionMap.get(option.getSelectedIndex());  [BUGGY]    }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	Option  option  =  optionMap.get(option.getSelectedIndex());	      if(selected!=    null)    {    String    selected    =    option.getText();    if(selected    ==    null    ||    selected.equals(option.getText()))    {    throw    new    AlreadySelectedException(this,    option);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
187	[BUG]  [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]          ComparisonFailure    [CONTEXT]      if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }    [BUGGY]  for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	106	106	3	replace	for(String  option  :  selected.keySet())  {  if(selected!=  null  &&  selected.equals(option.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    option    :    selected.keySet())    {    if(selected!=    null    ||    selected.equals(option.getKey()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	9	None	replace
