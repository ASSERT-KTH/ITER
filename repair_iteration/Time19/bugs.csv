bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } else if (offsetLocal > 0) { [FE] ComparisonFailure [CONTEXT] if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); long nextAdjusted = nextTransition(instantLocal - offsetAdjusted); if (nextLocal != nextAdjusted) { return offsetLocal; } } [BUGGY] } else if (offsetLocal > 0) { [BUGGY] long prev = previousTransition(instantAdjusted); if (prev < instantAdjusted) { int offsetPrev = getOffset(prev); int diff = offsetPrev - offsetLocal; if (instantAdjusted - prev <= diff) { return offsetPrev; } } } return offsetAdjusted; [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.11547005383792514	900	900	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); long nextAdjusted = nextTransition(instantLocal - offsetAdjusted); if (nextLocal != nextAdjusted) { return offsetLocal; } } [BUGGY] [BUGGY] } else if (offsetLocal > 0) { long prev = previousTransition(instantAdjusted); if (prev < instantAdjusted) { int offsetPrev = getOffset(prev); int diff = offsetPrev - offsetLocal; if (instantAdjusted - prev <= diff) { return offsetPrev; } } } return offsetAdjusted; [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.11547005383792514	900	900	1	add	
3	[BUG] [BUGGY] return offsetAdjusted; [FE] ComparisonFailure [CONTEXT] } else if (offsetLocal > 0) { long prev = previousTransition(instantAdjusted); if (prev < instantAdjusted) { int offsetPrev = getOffset(prev); int diff = offsetPrev - offsetLocal; if (instantAdjusted - prev <= diff) { return offsetPrev; } } } [BUGGY] return offsetAdjusted; [BUGGY] } [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.11043152607484653	910	910	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } else if (offsetLocal > 0) { long prev = previousTransition(instantAdjusted); if (prev < instantAdjusted) { int offsetPrev = getOffset(prev); int diff = offsetPrev - offsetLocal; if (instantAdjusted - prev <= diff) { return offsetPrev; } } } [BUGGY] [BUGGY] return offsetAdjusted; } [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.11043152607484653	910	910	1	add	
5	[BUG] [BUGGY] final int offsetLocal = getOffset(instantLocal); [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  [BUGGY] final int offsetLocal = getOffset(instantLocal); [BUGGY]  final long instantAdjusted = instantLocal - offsetLocal; final int offsetAdjusted = getOffset(instantAdjusted);  if (offsetLocal != offsetAdjusted) {   if ((offsetLocal - offsetAdjusted) < 0) {   [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	882	882	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  [BUGGY] [BUGGY] final int offsetLocal = getOffset(instantLocal);  final long instantAdjusted = instantLocal - offsetLocal; final int offsetAdjusted = getOffset(instantAdjusted);  if (offsetLocal != offsetAdjusted) {   if ((offsetLocal - offsetAdjusted) < 0) {   [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	882	882	1	add	
7	[BUG] [BUGGY] final long instantAdjusted = instantLocal - offsetLocal; [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  final int offsetLocal = getOffset(instantLocal);  [BUGGY] final long instantAdjusted = instantLocal - offsetLocal; [BUGGY] final int offsetAdjusted = getOffset(instantAdjusted);  if (offsetLocal != offsetAdjusted) {   if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	884	884	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  final int offsetLocal = getOffset(instantLocal);  [BUGGY] [BUGGY] final long instantAdjusted = instantLocal - offsetLocal; final int offsetAdjusted = getOffset(instantAdjusted);  if (offsetLocal != offsetAdjusted) {   if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	884	884	1	add	
9	[BUG] [BUGGY] final int offsetAdjusted = getOffset(instantAdjusted); [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  final int offsetLocal = getOffset(instantLocal);  final long instantAdjusted = instantLocal - offsetLocal; [BUGGY] final int offsetAdjusted = getOffset(instantAdjusted); [BUGGY]  if (offsetLocal != offsetAdjusted) {   if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); long nextAdjusted = nextTransition(instantLocal - offsetAdjusted); [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	885	885	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  final int offsetLocal = getOffset(instantLocal);  final long instantAdjusted = instantLocal - offsetLocal; [BUGGY] [BUGGY] final int offsetAdjusted = getOffset(instantAdjusted);  if (offsetLocal != offsetAdjusted) {   if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); long nextAdjusted = nextTransition(instantLocal - offsetAdjusted); [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	885	885	1	add	
11	[BUG] [BUGGY] if (offsetLocal != offsetAdjusted) { [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  final int offsetLocal = getOffset(instantLocal);  final long instantAdjusted = instantLocal - offsetLocal; final int offsetAdjusted = getOffset(instantAdjusted);  [BUGGY] if (offsetLocal != offsetAdjusted) { [BUGGY]   if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); long nextAdjusted = nextTransition(instantLocal - offsetAdjusted); if (nextLocal != nextAdjusted) { return offsetLocal; [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	887	887	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public int getOffsetFromLocal(long instantLocal) {  final int offsetLocal = getOffset(instantLocal);  final long instantAdjusted = instantLocal - offsetLocal; final int offsetAdjusted = getOffset(instantAdjusted);  [BUGGY] [BUGGY] if (offsetLocal != offsetAdjusted) {   if ((offsetLocal - offsetAdjusted) < 0) {    long nextLocal = nextTransition(instantAdjusted); long nextAdjusted = nextTransition(instantLocal - offsetAdjusted); if (nextLocal != nextAdjusted) { return offsetLocal; [CLASS] DateTimeZone 1 Stub [METHOD] getOffsetFromLocal [RETURN_TYPE] int  long instantLocal [VARIABLES] Set cAvailableIDs ids boolean NameProvider cNameProvider nameProvider String convId iID id name nameKey providerClass str DateTimeFormatter cOffsetFormatter Map cZoneIdConversion iFixedOffsetCache map long instant instantAdjusted instantLocal nextAdjusted nextLocal prev serialVersionUID DateTimeZone UTC cDefault dtz temp zone int diff offsetAdjusted offsetLocal offsetPrev Provider cProvider provider  	projects/Time19/src/main/java/org/joda/time/DateTimeZone.java	0.10540925533894598	887	887	1	add	
