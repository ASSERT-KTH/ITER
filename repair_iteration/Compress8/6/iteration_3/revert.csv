projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result==result){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,buffer.length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,32):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result==0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result==-1){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-start)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsString(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result>0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>>0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(end<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(long)Math.rint((long)result)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,3);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<0||result>0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86thrownewIllegalArgumentException("");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<0||result==0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86thrownewIllegalArgumentException("".equals(currentByte));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86aughtInvalidArgumentException("");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=0;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<2)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-2)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+2)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<2)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<2)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+=(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte-'0')+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte-'0')+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')/(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result-'0')+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')+(currentByte+'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')+(currentByte*'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Throwablecause=result==-1){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Throwables.thrownewIllegalArgumentException("");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Throwablecause=result==-1?newIllegalArgumentException("");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86thrownewIllegalArgumentException("".equals(result));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L--result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1l;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsString(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsByte(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsShort(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsLong(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsciiString(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsISOControl(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsString(buffer,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte+3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte+3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte+3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result+3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start+3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(start<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(offset<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte<<2)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/(currentByte<<3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,end):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*BYTE_MASK-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*BYTE_MASK/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=offset*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*BYTE_MASK+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<1)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte+1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result+1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte+1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result+1)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,currentByte,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length-1,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+(currentByte+'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<4)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(currentByte<<3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+(currentByte*'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK*2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_SIZE;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4)?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK-2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK-3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0'+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0'+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0'+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result-='0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0'+(currentByte-'1');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4+(result/BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4+(result/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(length<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<4)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(offset<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(end<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,0);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*1000)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*4*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+=3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+=(result<<3)?'0':'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0'||currentByte>'7';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+=(result<<3)-'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result-(length*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result-(result*2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>>3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<1)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_MASK+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result-=3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,3);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte+1)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*(currentByte+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte+1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:result.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:result.longValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:result.intValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte+1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,end,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result,32):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,16):JsonStringEncoder.getInstance().encodeAsCII(result,16);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte,32):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,4):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*BYTE_MASK+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/'0'+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK-'0'+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,J
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,3);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:result.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result.length+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2.0;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>=0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,offset,length):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(result/BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,0,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,start,length-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,start,length,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,0,currentByte.length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte,offset);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte,end);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte,start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,start,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+BYTE_MASK+1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<1)+BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<1)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<4)+BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<4)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<2)+BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte,buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,end);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length-start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-offset)/(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-offset)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length,start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length,end);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length-start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length+1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0'-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0'-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0'-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result-='0'-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().quoteAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().quoteAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().quoteAsCII(currentByte));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:end;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().encodeAsByte(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:System.arraycopy(buffer,offset,result,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().quoteAsCII(result));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/2+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAscii(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().parseAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsISO(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,10);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance())
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/2+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*2)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<=result||result==BYTE_MASK){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<=result||result==BYTE_MASK){thrownewIllegalArgumentException("");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonStringEncoder.getInstance().quoteAsCII(result):JsonStringEncoder.getInstance().quoteAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonStringEncoder.getInstance().quoteAsCII(result):JsonStringEncoder.getInstance().quoteAsCII(result]);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length*BYTE_MASK+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result*BYTE_MASK+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*2+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1)/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*4+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length-start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,result.length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,currentByte.length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,buffer.length-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte.length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,buffer.length-start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,size);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_SIZE;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_MILLIS;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0'+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0'+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte<<'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(end<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_SIZE;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(length+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*(length+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3)?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>>0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<4)BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAscii(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().decodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(BYTE_MASK,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result-start)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-start)/(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte-'0')+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-start)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<0||result==BYTE_MASK){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4)?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,buffer.length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte+'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,result,0,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,size-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte,offset);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte,start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte,end);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result+1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK+3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK+4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:0;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3+(currentByte*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,0):JsonStringEncoder.getInstance().encodeAsCII(result,0);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(result-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0'+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'9')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(result/BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(currentByte-'0')/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(currentByte-'0').result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>=0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:end;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result+1)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte+1)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/4+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>>0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-3)+(currentByte*'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-3)+(currentByte<<'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-3)+(currentByte+'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<4)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<4)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<4)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-4)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result-(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(length<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(end<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,0);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,start,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2*result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2*result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2+offset;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)+(result-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-offset)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(currentByte>'0'?currentByte:'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<7)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<2)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsByte(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsciiString(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsShort(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsISOControl(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result-=BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result+3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+(currentByte>'0'?'7':'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+(currentByte<<3)?'0':result+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+(currentByte>'0'?'9':'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:buffer;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:buffer;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:buffer;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=7;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=0;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=8;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(currentByte-'0'));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+=BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(result-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0'+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4)?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(offset+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(length+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(int)Math.rint((long)result)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(int)Math.rint((int)result)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(long)Math.rint((long)result)/3);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(long)Math.rint((long)currentByte)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(long)Math.rint((long)result)/4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(long)Math.rint((long)result)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L--result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+7;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>>3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4)?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,end):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length-offset)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)+(currentByte+'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)+(currentByte*'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<7)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(long-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:buffer.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:buffer.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer.length+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:buffer.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L-result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset+1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset+1)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(offset+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,end):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte,buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(start,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,end,result,0,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,0,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,start,result,0,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(start,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,start);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(source,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+end);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+end;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().parseAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(buffer,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,end);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*(result+1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=BYTE_MASK+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,0):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(long)Math.rint((long)currentByte)+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(long)Math.rint((int)result)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(start+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:result.longValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:result.intValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:result.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:result.toByteArray();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=-result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=null;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86safeTree();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86thrownewIllegalArgumentException("".);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:result.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:result.longValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:result.intValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<6)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(long*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*4*BYTE_MASK)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-2L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-2+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,0);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(start):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(long*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*3);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*1000);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result/3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(long)Math.rint((long)result)+(long)Math.rint((long)currentByte));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(long)Math.rint((long)result)+(long)Math.rint((long)result));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0'+(long)Math.rint((long)result)*(long)Math.rint((long)currentByte));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-(start<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-(start<<3)+(currentByte-'0'));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(currentByte-'0')-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0')-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-1)/'0'-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86lendemain(result){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<=result){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result{thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_BACKSLASH;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3+(result%BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3+(currentByte-'1');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3+(long)Math.floor(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(long-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_SIZE;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(long-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-offset)+(currentByte*'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+(long-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.get
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(currentByte-'0')/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*(currentByte-'0')+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(currentByte-'0')+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,end):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsciiString(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0')+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(currentByte-'0')+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L*result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0')+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,J
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4+(currentByte-'0')/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4+(result-offset);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result!=0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result!=0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_MASK+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)/2+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2+3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2+(result%BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK-1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK-1+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+=(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0'+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0'+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0'+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(offset<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(long)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0')+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(currentByte-'0')+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'9',currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*'0'+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86lendemain(result>0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<=0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86lendemain(result,0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)+(long-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<6)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(start,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_BACKSLASH;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:result.longValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:result.intValue();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<4)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte*BYTE_MASK+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(long*BYTE_MASK+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result,32):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,0):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,0);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:buffer;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer[offset];
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_BACKSLASH;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=end*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start-result)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(long-start)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_BYTE;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsciiString(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsString(buffer);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*2)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(currentByte+'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<4)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result/=BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=32;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,result.length-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/BYTE_SIZE;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_BYTE;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_LONG;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_END;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,length-1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,start,length+1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte<<3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte+3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-start)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')+(currentByte-'0')/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(source,result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:BYTE_MASK-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:BYTE_BACKSLASH;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:end;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,0):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:buffer.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,end):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,start):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,end,result,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,start,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-1-(currentByte-'0'));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,length):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0'+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:1L+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,16):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,4),JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86lendemain(result{0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86Result<=0||result==0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+(end-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-3)+(currentByte-'0')/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')/(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length-'0')+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-1)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().decodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-31;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK*BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'-1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L};
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte*'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset+length):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:buffer.toByteArray();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-1)/(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(start<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==null?JsonStringEncoder.getInstance().encodeAsString("UTF-8"):JsonStringEncoder.getInstance().encodeAsString("UTF-8"));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==null?JsonStringEncoder.getInstance().encodeAsString("UTF-8"):JsonStringEncoder.getInstance().encodeAsString("UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==null?JsonStringEncoder.getInstance().encodeAsString(result):JsonStringEncoder.getInstance().encodeAsString("UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==null?JsonStringEncoder.getInstance().quoteAsString("UTF-8"):JsonStringEncoder.getInstance().quoteAsString("UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==null?JsonStringEncoder.getInstance().quoteAsString(result):JsonStringEncoder.getInstance().quoteAsString("UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==null?JsonStringEncoder.getInstance().encodeAsString(result):JsonStringEncoder.getInstance().encodeAsString("UTF-8"));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length-result)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+(length-'0')/'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+(length-'0')+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0'*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<8;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<7)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(length-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length<<3)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==-1?JsonStringEncoder.getInstance().encodeAsString("UTF-8"):JsonStringEncoder.getInstance().encodeAsString("UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==-1?JsonStringEncoder.getInstance().encodeAsString("UTF-8"):JsonStringEncoder.getInstance().encodeAsString("UTF-8"));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(JsonString.valueOf(result));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==-1?JsonStringEncoder.getInstance().encodeAsString("UTF-8"):JsonStringEncoder.getInstance().encodeAsString("UTF-8","UTF-8"));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result==-1){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString("UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<4)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,end,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=10;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result+1)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().encodeAsByte(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().encodeAsString("UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().encodeAsString(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset*BYTE_MASK+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(start<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonStringEncoder.getInstance().encodeAsString(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonEncoder.getInstance().quoteAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:JsonStringEncoder.getInstance().quoteAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*3+1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=1?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,0,result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0'+(result-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:0;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86[Delete]
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86aught(newIllegalArgumentException(""));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86aught(newIllegalArgumentException("");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86aught(newIllegalArgumentException("").toString());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86aught(newIllegalArgumentException("").toString()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:result.toByteArray();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().parseAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<2)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<6)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length<<3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start<<3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(long)Math.rint((long)result)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(long)Math.rint((long)result)/2L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(long)Math.rint((long)currentByte)/2L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2+(long)Math.rint((long)result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>>0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_BACKSLASH;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+length/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(result)*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(result)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/2+length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,J
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,J
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,J
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<7)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<8)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result/(result+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(end+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset+length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer.toByteArray();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:buffer.toByteArray();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:buffer.toString();
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==1?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(int)Math.rint((int)currentByte)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(int)Math.rint((int)currentByte));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3+(int)Math.rint((int)currentByte)/4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,buffer,end,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer.length-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0',currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86aughtException("");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-(offset<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length-start)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(result)-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(result)+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-3)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L-start;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L-offset;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result,32):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result,32):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+=(length-'0')?'7':'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0'+(long)Math.rint((long)result)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0'+(long)Math.rint((long)currentByte));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+3)+(length-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(end<<1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length<<4)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<4)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start<<4)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'7')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'7',currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>>3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=1?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/2+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length<<2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<8)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-1-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-length)+(currentByte-'0');
