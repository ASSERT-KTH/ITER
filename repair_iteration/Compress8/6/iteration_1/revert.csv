projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result+='0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'7');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result>0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<1)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<2)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(currentByte<<3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result-(currentByte<<3)+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:result.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result==result){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=(result<<3)+BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,buffer.length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,0,currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86System.arraycopy(buffer,offset,result,buffer,start,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result*BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK-1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result*=BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=result<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,1);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<4?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result,32):JsonStringEncoder.getInstance().encodeAsCII(result,32);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,BYTE_MASK);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,4);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result==0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result==-1){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsCII(currentByte);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result*BYTE_MASK)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=0?result:result;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)/2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(length<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,JsonStringEncoder.getIn
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+(result-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(currentByte-'9');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+1L;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*4;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-offset)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-start)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result-'0')+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<3)+(currentByte-'0')+1;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result<<4)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(buffer,currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset+1)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+1)/3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance());
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().quoteAsString(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86result=JsonStringEncoder.getInstance().encodeAsString(buffer,offset,length);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86if(result>0){thrownewIllegalArgumentException("");}
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(result+3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(currentByte<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer.length;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>0?result:buffer;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,result,JsonStringEncoder.
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance()));
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,JsonStringEncoder.getInstance
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>>0?result:BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start<<3)+(currentByte-'0');
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+'0';
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult*BYTE_MASK+2;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=0?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult==3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<2?JsonStringEncoder.getInstance().encodeAsCII(result):JsonStringEncoder.getInstance().encodeAsCII(result);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(offset<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(start<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult/(result<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult-(end<<3)/BYTE_MASK;
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult!=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult>=3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(result,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult<<3?JsonStringEncoder.getInstance().encodeAsCII(currentByte):JsonStringEncoder.getInstance().encodeAsCII(buffer,offset,length,"UTF-8");
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'+(long)Math.rint((long)result)/2);
projects/Compress8/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java86returnresult+'0'-1;
