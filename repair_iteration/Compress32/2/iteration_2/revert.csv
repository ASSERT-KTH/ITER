projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311paxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Long.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.isPaxHeader()){rehashPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF){rehashPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){rehashPaxHeader(currEntry.getPaxHeader());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){rehashPaxHeader(currEntry.getPaxHeader());}else{thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){rehashPaxHeader(currEntry.getPaxHeader());}else{returnnull;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getString());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()==null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSourceName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longNameData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData));returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF){rehashPaxHeader(currEntry.getPaxHeader());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getBase());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeaderSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getShortName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSimpleName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(0,0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(64);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getName(),this.headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.header);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,this.stringEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,longLinkData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPax(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxFileHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,false,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),shortNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getRawHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getRealHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getPaxHeaders()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSize()-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getParent());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getRecordSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader());}else{thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RectangleEdgecurrEntry=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getCurrentPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=(RehashPaxHeaders)getNextPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getPreviousPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextPaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.headerData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.headerBuf,this.zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.headerBuf,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(this.headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.header);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.headerBuf,0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeaderscurrEntry=wrapPaxHeaders(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry,currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),false,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getParent());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=headers.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=this.currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=currEntry.getCurrentPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=cache.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=currEntry.getRealPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=currEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getURL(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getTarHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getNextTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getTarHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getTarHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),null,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),buffer);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getParent());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),true,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311resetPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),null,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),null,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),header);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeaderSize()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeaderSize(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeaderSize(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeaderSize(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeaderSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311returncurrEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311||currEntry.getPaxHeader()!=null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311while(currEntry.getPaxHeader()!=null){currEntry.setPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311while(currEntry.getPaxHeader()!=null){currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getName()!=null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeaders(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeaders()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(n);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(getNextTarEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(nextTarEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(p);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getKey());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311PaxcurrEntry=getPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headers,skipped);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311ParserUtil.parsePaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),Long.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),zipEncoding.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),cache.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getSourceName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311readPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getSize()-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getParent());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getRecordSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getSize()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers,skipped);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.clone();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getPax();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE,longNameData.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MIN_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Short.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getSimpleName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSize()-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSize()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getString());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getLastChild());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getNextTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getTarHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getTarHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getTarHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeaders()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeaders(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getURL();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(headerPax);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(headerBuf,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(headerData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(header);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getSize()-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getSize()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getLength());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getLastChild());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getLowerCase());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getLongLinkData();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxBase();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getNextTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getTarHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getTarHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getTarHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaderBytes();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaderSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Long.MAX_VALUE,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),0,Long.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Long.MAX_VALUE,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),4);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Long.MAX_VALUE,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getName(),headerBuf,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerData,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,headerBuf,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,shortNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),zipEncoding,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,zipEncoding,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,fileEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this.zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePax(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311PaxcurrEntry=getPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getSourceName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getParent());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),zipEncoding.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),cache.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSourceName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSourceName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311||currEntry.getPaxHeader()==null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311currEntry.setPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311||hasHitEOF){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311||!hasHitEOF){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311while(!hasHitEOF){currEntry.setPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(hasHitEOF){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.encode(headerPaxHeader));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getValue()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currentEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeaderscurrEntry=wrapPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize()-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){writePaxHeader(currEntry.getPaxHeader());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311finalTarArchiveEntrycurrEntry=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){writePaxHeader(currEntry.getPaxHeader());}else{returnnull;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerData));returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.encode(longNameData));returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),0);returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),headerBuf);returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),headers);returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData));returnnull;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadersrehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=rehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry,currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),false,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSize(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,isHitEOF,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),cache.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,true,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longNameData),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longNameData),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(headerData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longNameData),0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longNameData),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311PaxcurrEntry=getPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(path);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(null,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(null,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeaderscurrEntry=wrapPaxHeaders(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),true,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry,currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,hasHitEOF,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,hasHitEOF,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,hasHitEOF,skipped);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getPax();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getNumberOfLinks();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getNumberOfLines();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getPaxNumber();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getPaxHeader()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getPaxEnd();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getBaseName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getBase(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getBase(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),true,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),true,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry,currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSize(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),true,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311repaintPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311resetPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headers));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311recvHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeader(rehashEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),header);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader());returnnull;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311resetPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RectangleEdgecurrEntry=currEntry.getRect();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RectangleEdgecurrEntry=getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSimpleName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getAbsolutePath());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Long.MAX_VALUE+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,this.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,this.sourceEnd);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,this.currentSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxDecoder();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,0,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,buffer);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(headerBuf,headerSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),false,currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getKey());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getString(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPax();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=headers.rehashPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=headers.getRehashPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(headers));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.encode(longNameData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(headerBuf,longNameData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(headerBuf));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaderBytes("UTF-8");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaderSegment();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaderBuffer();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getCharset());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getUpperBound());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RectangleEdge.this.rehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),shortNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),fullNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF&&currEntry.getPaxHeader()!=null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF&&currEntry.getPaxHeader()==null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311pending||currEntry.getPaxHeader()!=null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getTarHeader(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeadercurrEntry=wrapPaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.encode(longNameData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,isEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this.headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName(),headerData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=currEntry.getNextPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=newRehashPaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=newRehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeaderSize(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getAbsolutePath());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getURL(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getURL(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getNextPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getNextPax();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeaderscurrEntry=wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName(),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSimpleName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeaders(headerData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeaders(-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.headerBuf,this.available);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(this.headerData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,skipped);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getNameHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getString(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getScope());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getBase(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getSource();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getParent());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeaderSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getString());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=headers();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=headers.remove(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPath());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311WrapPaxHeaderscurrEntry=wrapPaxHeaders(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getScope());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getTarHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getNextPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getHeaderSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getPaxHeader()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getString(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getSegmentHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(null,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(mapEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311PaxcurrEntry=getPaxHeaders(header);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getName()==null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){currEntry.setPaxHeader(null);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),headers,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getPaxHeaders(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getTarHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getPaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getPaxHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getLongNameData();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getLongHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeader()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headers));returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setName(zipEncoding.decode(longNameData));returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),null,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerPrefix);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeaders(-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getLongHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),shortNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headers,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaderBounds();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeaderByName("headers");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getReasonHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getHeaderSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(entry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE,4);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getTarHeader(),hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parseTarHeader(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RectangleEdgeisEOF=hasHitEOF?rehashPaxHeaders():null;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=headers.rehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311MutablePaxHeader.rehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry,zipEncoding.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getHeaderData();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=headers.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getHeaderSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getPaxHeaderSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getTarHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),headers,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getBaseDesc());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311try{rehashPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getHeaderSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(this.headerBuf,this.zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(this.headerBuf,this.string);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(this.headerBuf,this.stringData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(headerBuf,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(headerBuf,headerData.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,this.zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf,this.type);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=headers.rehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,lineEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getTarHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getTarHeader()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getHeaders(currEntry.getPaxHeaderSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax(),currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=zipEncoding.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longNameData),encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longPaxHeader));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),null,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this,headerEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName(),cacheEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getMethod(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getHeaderLimit());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getSize(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getHandler());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers,cacheEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311MutablePaxHeaders.rehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311MutablePaxHeadercurrEntry=getPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this.hashCode);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this.hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this.hashEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311while(currEntry.getPaxHeader()!=null){currEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getPax(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF){rehashPaxHeaders(currEntry);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rechashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),null,currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),newString[]{});
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData));returnthis;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData));returnheaders;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getURL(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader),encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(paxHeader));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader+1));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getHeaderSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf,cacheEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=headers.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerSize,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerbuf,longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry,zipEncoding.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),false,currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData),encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF&&currEntry.isPaxHeader()){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF&&currEntry.getPaxHeader()>0){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF&&currEntry.getPaxHeader()>=null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getHeadersByTag();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName(),cacheEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Long.MAX_VALUE,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Short.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),true,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSourceName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers,currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311try{rehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=headers.rehashPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers,cacheEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getTarHeader(),true);
