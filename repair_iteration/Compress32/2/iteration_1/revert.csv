projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311paxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),Long.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311writePaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),Long.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.isPaxHeader()){rehashPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF){rehashPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),this.headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){rehashPaxHeader(currEntry.getPaxHeader());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){rehashPaxHeader(currEntry.getPaxHeader());}else{thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){rehashPaxHeader(currEntry.getPaxHeader());}else{returnnull;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]longLinkData=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311TarArchiveEntrycurrEntry=(TarArchiveEntry)currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311byte[]headerBuf=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getString());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPax(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeader(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeader(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()!=null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(currEntry.getPaxHeader()==null){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311n=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this.headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxFileHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getSourceName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeadercurrEntry=currEntry.getPaxHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getURL());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getPax());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF){returncurrEntry.getPaxHeader();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setHeader(zipEncoding.decode(longNameData));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(headerPaxHeader));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311((TarArchiveEntry)currEntry).setPaxHeader(zipEncoding.decode(longNameData));returncurrEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getName(),longNameData,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311traversePaxHeaders(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getPaxHeader(),currEntry.getSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeaders(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=newRehashPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311RehashPaxHeaderscurrEntry=getNextPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311if(!hasHitEOF){rehashPaxHeader(currEntry.getPaxHeader());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getPaxHeader(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311rehashPaxHeader(currEntry.getMethod());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),longNameData);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311parsePaxHeader(currEntry.getTarHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanPaxHeaders(currEntry.getPaxHeader());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311validatePaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311Paxheaders=getPaxHeaders(currEntry.getBase());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeader(currEntry.getPaxHeader(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311scanHeaders(currEntry.getPaxHeaderSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java311wrapPaxHeader(currEntry.getPaxHeader(),currEntry.getName());
