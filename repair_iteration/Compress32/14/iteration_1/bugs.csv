bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  (int)(recordSize  -  entryOffset);  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]  return  (int)(recordSize  -  entryOffset);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	return  (int)(recordSize  -  entryOffset);	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2	[BUG]  [BUGGY]  return  (int)(blockSize  -  entryOffset);  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]  return  (int)(blockSize  -  entryOffset);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	return  (int)(blockSize  -  entryOffset);	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  return(int)(entrySize  -  entryOffset  +  1);  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]  return(int)(entrySize  -  entryOffset  +  1);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	return(int)(entrySize  -  entryOffset  +  1);	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]    [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	  	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  return(int)(available  -  entryOffset);  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]  return(int)(available  -  entryOffset);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	return(int)(available  -  entryOffset);	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]  return(int)(entrySize  -  recordSize);  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]  return(int)(entrySize  -  recordSize);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	return(int)(entrySize  -  recordSize);	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
7	[BUG]  [BUGGY]  return(int)(entrySize  -  blockSize);  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]  return(int)(entrySize  -  blockSize);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	return(int)(entrySize  -  blockSize);	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
8	[BUG]  [BUGGY]  return(int)(0,  entryOffset  -  entryOffset);  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  public  int  available()  throws  IOException  {  if  (entrySize  -  entryOffset  >  Integer.MAX_VALUE)  {  return  Integer.MAX_VALUE;  }  [BUGGY]  return(int)(0,  entryOffset  -  entryOffset);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  available  [RETURN_TYPE]  int  [VARIABLES]  byte[]  SMALL_BUF  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  int  SMALL_BUFFER_SIZE  blockSize  recordSize  long  entryOffset  entrySize  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.4472135954999579	184	184	1	replace	return(int)(0,  entryOffset  -  entryOffset);	return  (int)  (entrySize  -  entryOffset);  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
