projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read++;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<len;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<len;read++){break;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){read++;}else{coll.add(i.nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.reset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.add(i.next());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.put(i.next(),coll);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()||coll.hasMoreElements()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ReadByteArrayOutputStreamcoll=coll.readByteArrayOutputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!i.hasMoreElements()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ReadByteArrayOutputStreamcoll=newReadByteArrayOutputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ReadByteBuffercoll=coll.readByteBuffer(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(i.hasNext()){read++;}else{coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||coll.hasNext()){read++;}else{coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.close():null;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.length():0;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()>read){read++;}else{coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||!hasHitEOF){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(hasHitEOF){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||hasHitEOF){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){if(!hasHitEOF){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(!hasHitEOF){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.set(len,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447IOUtils.readFully(i,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.set(len,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.remove();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.reset(len,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.setLength(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||coll.hasMoreTokens()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!i.hasMoreTokens()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasMoreTokens()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasMoreTokens()&&coll.isEmpty())){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasMoreTokens()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()||coll.hasMoreTokens()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!i.hasMoreTokens()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF){if(i.hasMoreElements()){read++;}else{coll.add(i.nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447col.add(i.nextElement());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF){if(i.hasMoreElements()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447coll.add(i.nextElement());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF){if(i.hasMoreElements()){read++;}else{Coll.add(i.nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||coll.hasNext()){read++;}else{coll.put(i.next(),coll);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}else{coll.put(i.next(),coll);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(i.hasNext()){read++;}else{coll.put(i.next(),coll);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.getValue(ch)!=null)){read++;}else{coll.put(i.next(),coll);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447for(intread=0;read<len;read++){break;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while((ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read=0;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447for(intread=0;read<len;read++){continue;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Context.reportCodeChange();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447for(intread=0;read<len;read++){break;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.charAt(i.next())!='/')){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.charAt(i.next())!='n')){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.charAt(i.next())!='-')){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.charAt(i.next())!='-')){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasNext()&&coll.charAt(i.next())!='-')){read++;}else{coll.append('+');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF){if(i.hasMoreElements()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||coll.hasMoreElements()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(i.hasMoreElements()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||coll.hasMoreElements()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||i.hasNext()){read++;}else{coll.add(i.next());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.getLength():0;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.getChars(ch,0):0;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.size():0;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.size():0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(len>0&&coll.charAt(len-1)!='/')){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(len>0&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(len>0&&coll.charAt(len-1)!='n')){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(len>0&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES))){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447||(len>0&&coll.charAt(len-1)!='-')){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len<=0){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ReadByteArrayOutputStreamcoll=coll.readByteArrayOutputStream(i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(i.hasNext()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ReadByteArrayOutputStreamcoll=coll.readByteArrayInputStream(i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read(len){for(intread=0;read<len;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read(len){for(intread=0;read<SMALL_BUFFER_SIZE;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while((ch=coll.read())!=-1){len>0){for(intread=0;read<len;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read(len){for(intread=0;read<length;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read(len){for(intread=0;read<restLen;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read(len){for(intread=0;read<SMALL_BUFFER_LENGTH;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ch=coll.toString(CharsetNames.UTF_8);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ByteArrayOutputStreamcoll=newByteArrayOutputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(len,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447InputStreamcoll=i.readInputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.writeInt(len,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(hasHitEOF){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(!hasHitEOF&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(!hasHitEOF){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(!hasHitEOF&&coll.isEmpty()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(!hasHitEOF&&coll.charAt(len-1)!='n'){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()||coll.size()==0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()||coll.length()==0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.hasMoreTokens();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447intlen=coll.length();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Integerlen=coll.readInt();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Integeri=coll.readInt();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ch=coll.toString(CharsetNames.UTF_8)+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Integeri=coll.getIntValue(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447ch=coll.toString();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.put(i.next(),null);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read=i.next();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.put(i.next(),newByteArrayOutputStream());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.put(i.next(),col);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.put(i.next(),newBigInteger(len));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}else{coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.hasNext()){read++;}else{coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.next()!=null){read++;}else{coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()||coll.hasMoreElements()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read+=coll.toString();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<restLen;read++){break;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<length;read++){break;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Integerch=coll.toString(CharsetNames.UTF_8);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<limit;read++){break;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()||coll.hasMoreElements()){read++;}else{coll.add(i.nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){Read++;}else{coll.add(i.nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){read++;}else{coll.add(nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){read++;}else{coll.add(i.getElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()>read){read++;}else{coll.add(i.next());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.add(0,i.next());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read=coll.read(i.next());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.add(next());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.add(i.getNext());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.charAt(len-read)!=''){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.charAt(len-read)!='n'){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.equals(ch)){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.isEmpty()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.length()>0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((TarArchiveEntry)i.next()).setMoreElements(read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((TarArchiveEntry)i).setMoreElements(read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.setMoreElements(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read=!hasHitEOF&&coll.toString().endsWith(".java");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.setRead(read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.setRead(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.set();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.reset(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.charAt(i.next())!='-'){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.charAt(i.next())!='/'){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()>read){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.charAt(i.next())!='n'){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.hasNext()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((TarArchiveEntry<K,V>)i.next()).setRead(read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((TarArchiveEntry)i.next()).setLength(len-read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read>0){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read>0;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>=0){read++;}else{coll.append('n');}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()||coll.hasMoreTokens()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()||coll.getMoreTokens()!=null){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()||coll.size()==0){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read>0){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read>0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read>0||coll.toString().indexOf(':')>=-1){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read>0||coll.toString().endsWith(".java")){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read>0||coll.toString().equals(ch)){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Len<SMALL_BUFFER_SIZE){for(intread=0;read<len;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Len<=0||len>SMALL_BUFFER_SIZE){for(intread=0;read<len;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<length;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447Len<SMALL_BUFFER_SIZE){for(intread=0;read<len;read++){coll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<restLen;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<LAST_LENGTH;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len<=0){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){while((ch=i.read())!=-1){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){while((ch=i.read())!=-1){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreTokens()||coll.size()>0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(i.hasMoreTokens()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.hasCharsetName(CharsetNames.UTF_8)){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.toString(CharsetNames.UTF_8):null;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.toString(CharsetNames.UTF_8):null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||coll.next().equals(ch)){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447parsePaxHeaders(i,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.setLength(len);coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(len>0){for(intread=0;read<len;read++){break;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<SMALL_BUFFER_SIZE;read++){break;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447read=0;read<len;read++;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.add(i.nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()){read++;}else{coll.add(ch.nextElement());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<SMALL_BUFFER_SIZE;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<SMALL_BUFFER_LIZE;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(len>0){for(intread=0;read<2;read++){returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(i.hasMoreTokens()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447i.set(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447((ch=i.read())!=-1)?coll.toString():null;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasMoreElements()||coll.size()>0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while(i.hasMoreElements()){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.equals(CharsetNames.UTF_8)){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.size()>0){read++;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.isEOF()){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.size()>0){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(!hasHitEOF&&coll.length()>0){read++;}else{returncoll.toString();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.add(ch.next());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()||i.hasNext()){read++;}else{coll.add(i.next());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.add(ch);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.put(ch.next(),coll);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447while((ch=i.read())!=-1){coll.put(i.next(),coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java447if(i.hasNext()){read++;}else{coll.put(ch,coll);}
