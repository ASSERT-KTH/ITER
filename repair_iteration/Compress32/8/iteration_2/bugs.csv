bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  val  =  ent.trim();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.trim();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.trim();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  String  val  =  key.trim()  + ": "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.trim()  + ": "  +  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.trim()  + ": "  +  ent.getValue();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  String  val  =  key.trim()  + ", "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.trim()  + ", "  +  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.trim()  + ", "  +  ent.getValue();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  String  val  =  key.trim()  + ": "  +  ent.getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.trim()  + ": "  +  ent.getKey();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.trim()  + ": "  +  ent.getKey();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  String  val  =  key.trim()  + ": "  +  ent.toString();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.trim()  + ": "  +  ent.toString();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.trim()  + ": "  +  ent.toString();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  String  val  =  ent.toString();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.toString();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.toString();	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  String  val  =  key.toString()  + ": "  +  ent.toString();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toString()  + ": "  +  ent.toString();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toString()  + ": "  +  ent.toString();	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  String  val  =  key.substring(ent.length()  -  1);  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.length()  -  1);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.length()  -  1);	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  String  val  =  key.substring(0,  key.length()  -  1);  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(0,  key.length()  -  1);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(0,  key.length()  -  1);	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  String  val  =  key.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toString()  + "n ";  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toString()  + "n ";	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  String  val  =  key.getKey();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.getKey();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.getKey();	  String    val    =    key.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  String  val  =  key.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.getValue()  +  1;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.getValue()  +  1;	  String    val    =    key.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  String  val  =  ent.getShortName();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getShortName();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getShortName();	  String    val    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  String  val  =  ent.getShortKey();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getShortKey();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getShortKey();	  String    val    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  String  val  =  ent.toUpperCase();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.toUpperCase();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.toUpperCase();	  String    val    =    key.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  String  val  =  key.toUpperCase(ent.getValue());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toUpperCase(ent.getValue());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toUpperCase(ent.getValue());	  String    val    =    key.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  String  val  =  key.toUpperCase(ent.getKey());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toUpperCase(ent.getKey());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toUpperCase(ent.getKey());	  String    val    =    key.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  String  val  =  ent.toLowerCase();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.toLowerCase();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.toLowerCase();	  String    val    =    key.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  String  val  =  key.toUpperCase()  +  1;  [CE]  illegal  start  of  type  [FE]                        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toUpperCase()  +  1;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toUpperCase()  +  1;	  String    val    =    key.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getKey());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getKey());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getKey());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue()  +  1);	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue(),  ent.length());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue(),  ent.length());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue(),  ent.length());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.length());  [CE]  illegal  start  of  type  [FE]                        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.length());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue()  +  1,  ent.length());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getLength());  [CE]  illegal  start  of  type  [FE]                          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getLength());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue()  +  1,  ent.getLength());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  String  val  =  ent.substring(key.getValue());  [CE]  illegal  start  of  type  [FE]                            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.substring(key.getValue());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.substring(key.getValue());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue(),  ent.getEncoding());  [CE]  illegal  start  of  type  [FE]                              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue(),  ent.getEncoding());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue(),  ent.getEncoding());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  String  val  =  key.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toLowerCase(Locale.ENGLISH);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toLowerCase(Locale.ENGLISH);	  String    val    =    key.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  String  val  =  key.toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toLowerCase()  +  1;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toLowerCase()  +  1;	  String    val    =    key.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  String  val  =  key.toLowerCase(ent.getValue());  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toLowerCase(ent.getValue());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toLowerCase(ent.getValue());	  String    val    =    key.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  String  val  =  ent.getKey()  +  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getKey()  +  1;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getKey()  +  1;	  String    val    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  String  val  =  ent.getValue()  *  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  *  1;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  *  1;	  String    val    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  +  2;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  +  2;	  String    val    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  Value  val  =  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Value  val  =  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Value  val  =  ent.getValue();	  String    val    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  String  val  =  ent.getValue()  *  key;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  *  key;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  *  key;	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  key  +  1;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  +  key  +  1;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  +  key  +  1;	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  String  val  =  key.getValue()  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.getValue()  +  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.getValue()  +  ent.getValue();	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  key  + ": ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  +  key  + ": ";  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  +  key  + ": ";	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
38	[BUG]  [BUGGY]  String  val  =  ent.getKey()  +  key;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getKey()  +  key;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getKey()  +  key;	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  String  val  =  ent.getValue()  /  key;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  /  key;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  /  key;	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
40	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  entry.getValue();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  ent.getValue();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(entry  ==  null)?  null  :  entry.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =(entry  ==  null)?  null  :  entry.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =(entry  ==  null)?  null  :  entry.getValue();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getKey();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getKey();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  entry.getKey();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(entry  ==  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =(entry  ==  null)?  null  :  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =(entry  ==  null)?  null  :  ent.getValue();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  String  val  =  key!=  null?  key.toUpperCase()  :  value;  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key!=  null?  key.toUpperCase()  :  value;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key!=  null?  key.toUpperCase()  :  value;	  String    val    =    key.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().get(key);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().get(key);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().get(key);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey());  [CE]  illegal  start  of  type  [FE]                          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  String  val  =  key!=  null?  key.toLowerCase()  :  value;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key!=  null?  key.toLowerCase()  :  value;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key!=  null?  key.toLowerCase()  :  value;	  String    val    =    key.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  String  val  =  key.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.trim().toLowerCase();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.trim().toLowerCase();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  String  val  =  key!=  null?  key.trim()  :  value;  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key!=  null?  key.trim()  :  value;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key!=  null?  key.trim()  :  value;	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  String  val  =  key  ==  null?  key.trim()  :  value;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key  ==  null?  key.trim()  :  value;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key  ==  null?  key.trim()  :  value;	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  String  val  =  key!=  null?  key.trim()  :  val;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key!=  null?  key.trim()  :  val;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key!=  null?  key.trim()  :  val;	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  String  val  =  value.trim();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  value.trim();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  value.trim();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  String  val  =  ent.substring(key.length());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.substring(key.length());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.substring(key.length());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue()  -  1);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue()  -  1);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue()  -  1);	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  String  val  =  value.substring(ent.getValue());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  value.substring(ent.getValue());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  value.substring(ent.getValue());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  key,  hasHitEOF;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  +  key,  hasHitEOF;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  +  key,  hasHitEOF;	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  key  +  2;  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  +  key  +  2;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  +  key  +  2;	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  key  +  length;  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  ent.getValue()  +  key  +  length;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  ent.getValue()  +  key  +  length;	  String    val    =    ent.getValue()    +    key;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  String  val  =  key!=  null?  key.toString()  :  value;  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key!=  null?  key.toString()  :  value;  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key!=  null?  key.toString()  :  value;	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  String  val  =  key.substring(0,  key.length()  -  2);  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(0,  key.length()  -  2);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(0,  key.length()  -  2);	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  String  val  =  entry.toLowerCase();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  entry.toLowerCase();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  entry.toLowerCase();	  String    val    =    key.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
67	[BUG]  [BUGGY]  Entry  <  String,  String>  val  =  ent.getKey();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  val  =  ent.getKey();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  val  =  ent.getKey();	  String    val    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  Entry  <  String,  String>  val  =  ent.getValue();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  Entry  <  String,  String>  val  =  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	Entry  <  String,  String>  val  =  ent.getValue();	  String    val    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
69	[BUG]  [BUGGY]  char  val  =  ent.getKey();  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  char  val  =  ent.getKey();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	char  val  =  ent.getKey();	  String    val    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
70	[BUG]  [BUGGY]  val  =  ent.getValue();  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  val  =  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	val  =  ent.getValue();	  String    val    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  String  val  =  entry.toUpperCase();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  entry.toUpperCase();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  entry.toUpperCase();	  String    val    =    key.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  String  val  =  key.trim()  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.trim()  +  ent.getValue();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.trim()  +  ent.getValue();	  String    val    =    key.trim();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getValue());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getValue());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue()  +  1,  ent.getValue());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue(),  encoding);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue(),  encoding);  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue(),  encoding);	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getChars());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getChars());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue()  +  1,  ent.getChars());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getKey());  [CE]  illegal  start  of  type  [FE]                        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.substring(ent.getValue()  +  1,  ent.getKey());  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.substring(ent.getValue()  +  1,  ent.getKey());	  String    val    =    key.substring(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
77	[BUG]  [BUGGY]  String  val  =  key.toString()  + ", "  +  ent.toString();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toString()  + ", "  +  ent.toString();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toString()  + ", "  +  ent.toString();	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  String  val  =  key.toString()  + ". "  +  ent.toString();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]            for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();    [BUGGY]  String  val  =  key.toString()  + ". "  +  ent.toString();  [BUGGY]    if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	495	495	1	replace	String  val  =  key.toString()  + ". "  +  ent.toString();	  String    val    =    key.toString();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
