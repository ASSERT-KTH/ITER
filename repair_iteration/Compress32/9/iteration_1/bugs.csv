bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(val  ==  null)  {  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val  ==  null)  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null)  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  if(val!=  null)  {  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val!=  null)  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null)  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  if(val.equals(key))  {  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val.equals(key))  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key))  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val.length()  ==  0)  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0)  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()  ==  0)  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()  ==  0)  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  if( ")path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if( ")path ".equals(key))  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if( ")path ".equals(key))  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]    [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	  	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  if(val  ==  null  ||  val  ==  null)  {  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val  ==  null  ||  val  ==  null)  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val  ==  null)  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  if(val!=  null  ||  val  ==  null)  {  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val!=  null  ||  val  ==  null)  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val  ==  null)  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
11	[BUG]  [BUGGY]  if  ( "name ".equals(key))  {  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if  ( "name ".equals(key))  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if  ( "name ".equals(key))  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  if(val  ==  null  ||   "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]          for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();  [BUGGY]  if(val  ==  null  ||   "path ".equals(key))  {  [BUGGY]  currEntry.setName(val);  }  else  if  ( "linkpath ".equals(key)){  currEntry.setLinkName(val);  }  else  if  ( "gid ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  ( "gname ".equals(key)){  currEntry.setGroupName(val);  }  else  if  ( "uid ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  ( "uname ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||   "path ".equals(key))  {	if  ( "path ".equals(key)){  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
