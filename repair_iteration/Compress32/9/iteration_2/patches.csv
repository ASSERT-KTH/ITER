bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(key  ==  val  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  val  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  val  ||  val.length()  ==  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2	[BUG]  [BUGGY]  if(val!=  key  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  key  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  key  ||  val.length()  ==  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
3	[BUG]  [BUGGY]  if(val  ==  key  ||  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  key  ||  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  key  ||  val.length()!=  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  if(value  ==  key  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  key  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  key  ||  val.length()  ==  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  if(key!=  val  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  val  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  val  ||  val.length()  ==  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  if(key  ==  val  ||  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  val  ||  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  val  ||  val.length()!=  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  if(key  ==  null  ||  val  >=  null)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val  >=  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val  >=  null)  {	  if(key    ==    null    ||    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
8	[BUG]  [BUGGY]  if(key  ==  null  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.equals(key))  {	  if(key    ==    null    ||    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  if(val.equals(key)&&  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  val.equals(key))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals(key)||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equals(key)||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equals(key)||  val.equals(key))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
11	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals(ent.getValue()))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals(ent.getValue()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals(ent.getValue()))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals(encoding))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals(encoding))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals(encoding))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  if(key.equals(val)||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.equals(key))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  if(val.equals(key)&&  val.equals( "name   "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  val.equals( "name   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  val.equals( "name   "))  {	  if(val.equals(key)||    val.equals(   "name   "))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
15	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals( ".name "))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals( ".name "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals( ".name "))  {	  if(val.equals(key)||    val.equals(   "name   "))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
16	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals( "prototype "))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals( "prototype "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals( "prototype "))  {	  if(val.equals(key)||    val.equals(   "name   "))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
17	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals( "Name "))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals( "Name "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals( "Name "))  {	  if(val.equals(key)||    val.equals(   "name   "))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
18	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals( "path "))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals( "path "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals( "path "))  {	  if(val.equals(key)||    val.equals(   "name   "))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
19	[BUG]  [BUGGY]  if(val  ==  null  ||  key.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  key.length()  ==  0)  {	  if(value    ==    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
20	[BUG]  [BUGGY]  if(key!=  null  &&  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.length()  ==  0)  {	  if(val!=    null    &&    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  if(val!=  null  &&  val.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.length()  >=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.length()  >=  0)  {	  if(val!=    null    &&    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.length()  <  =  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()  <  =  0)  {	  if(val!=    null    ||    val.length()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
23	[BUG]  [BUGGY]  if(val!=  null  &&  val.length()  <  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.length()  <  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.length()  <  0)  {	  if(val!=    null    ||    val.length()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
24	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()  >  0)  {	  if(val!=    null    ||    val.length()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
25	[BUG]  [BUGGY]  if(key!=  null  ||  val.length()  <  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.length()  <  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.length()  <  0)  {	  if(val!=    null    ||    val.length()    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
26	[BUG]  [BUGGY]  if(val  ==  null  &&  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  val.equals(key))  {	  if(val!=    null    &&    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
27	[BUG]  [BUGGY]  if(val  >=  null  &&  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  &&  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  &&  val.equals(key))  {	  if(val!=    null    &&    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
28	[BUG]  [BUGGY]  if(val!=  null  &&  value.equals(val))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  value.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  value.equals(val))  {	  if(val!=    null    &&    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
29	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.keySet().iterator();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.keySet().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
30	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key).iterator();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key).iterator();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key).iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
31	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
32	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.iterator();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.iterator();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
33	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  val.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  val.entrySet().iterator();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  val.entrySet().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
34	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.equals(val))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.equals(val))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  if(val.length()  ==  0  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  &&  key.equals(val))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
36	[BUG]  [BUGGY]  if(key.equals(val)||  val.length()  ==  0  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.length()  ==  0  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.length()  ==  0  ||  val.equals(key))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
37	[BUG]  [BUGGY]  if(key.equals(val)||  val.length()  ==  0  ||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.length()  ==  0  ||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.length()  ==  0  ||  val.equals(value))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
38	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.equals(value))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
39	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.length()!=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()!=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
40	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
41	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0  ||  val.charAt(val.length())!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.length()  ==  0  ||  val.charAt(val.length())!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()  ==  0  ||  val.charAt(val.length())!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
42	[BUG]  [BUGGY]  if(key  ==  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
43	[BUG]  [BUGGY]  if(val  ==  null  ||  key.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  key.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  key.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
44	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  hasHitEOF)  {	  if(val.length()    ==    0    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
45	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.length()  ==  0)  {	  if(val.length()    ==    0    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
46	[BUG]  [BUGGY]  if(val.length()!=  0  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  0  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  0  ||  hasHitEOF)  {	  if(val.length()    ==    0    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
47	[BUG]  [BUGGY]  if(val.length()  ==  0  &&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  &&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  &&  hasHitEOF)  {	  if(val.length()    ==    0    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
48	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  isEOF)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  ||  isEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  ||  isEOF)  {	  if(val.length()    ==    0    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
49	[BUG]  [BUGGY]  if(val.equals(key)&&  val.startsWith( "/   "))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  val.startsWith( "/   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  val.startsWith( "/   "))  {	  if(val.equals(key)||    val.startsWith(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
50	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( ".prototype. "))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( ".prototype. "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( ".prototype. "))  {	  if(val.equals(key)||    val.startsWith(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
51	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( "./ "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( "./ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( "./ "))  {	  if(val.equals(key)||    val.startsWith(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
52	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( ". "))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( ". "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( ". "))  {	  if(val.equals(key)||    val.startsWith(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
53	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( ".js "))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( ".js "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( ".js "))  {	  if(val.equals(key)||    val.startsWith(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
54	[BUG]  [BUGGY]  if  (val!=  null  &&   "name ".equals(key))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if  (val!=  null  &&   "name ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if  (val!=  null  &&   "name ".equals(key))  {	  if    (val!=    null    ||       "name   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
55	[BUG]  [BUGGY]  if  (val!=  null  ||! "name ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if  (val!=  null  ||! "name ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if  (val!=  null  ||! "name ".equals(key))  {	  if    (val!=    null    ||       "name   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
56	[BUG]  [BUGGY]  if(val!=  null  &&   "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&   "path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&   "path ".equals(key))  {	  if(val!=    null    ||       "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
57	[BUG]  [BUGGY]  if(val  ==  null  ||  key!=  null)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  key!=  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  key!=  null)  {	  if(val    ==    null    ||    val!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
58	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key,  val);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key,  val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key,  val);	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
59	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  +  val);  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  +  val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key  +  val);	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
60	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  +  1);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key  +  1);	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
61	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  -  1);  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  -  1);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key  -  1);	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
62	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(val);  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(val);	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
63	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key).trim();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key).trim();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key).trim();	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
64	[BUG]  [BUGGY]  if(val!=  null  ||  key.equals( "path "))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key.equals( "path "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key.equals( "path "))  {	  if(val!=    null    ||?   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
65	[BUG]  [BUGGY]  if(key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val))  {	  if(   ")path   ".equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
66	[BUG]  [BUGGY]  if( ".path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if( ".path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if( ".path ".equals(key))  {	  if(   ")path   ".equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
67	[BUG]  [BUGGY]  if(val!=  null  &&  val.equals( "   "))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.equals( "   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.equals( "   "))  {	  if(val!=    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
68	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals( "_ "))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equals( "_ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equals( "_ "))  {	  if(val!=    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
69	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals( "/ "))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equals( "/ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equals( "/ "))  {	  if(val!=    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
70	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals( "* "))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equals( "* "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equals( "* "))  {	  if(val!=    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
71	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( "/.java "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( "/.java "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( "/.java "))  {	  if(val.equals(key)||    val.startsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
72	[BUG]  [BUGGY]  if(val.equals(key)&&  val.startsWith( ".java "))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  val.startsWith( ".java "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  val.startsWith( ".java "))  {	  if(val.equals(key)||    val.startsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
73	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( "java "))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( "java "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( "java "))  {	  if(val.equals(key)||    val.startsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
74	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( "java/ "))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( "java/ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( "java/ "))  {	  if(val.equals(key)||    val.startsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
75	[BUG]  [BUGGY]  if(val!=  null  &&  val  <  VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  <  VALUE_NUMBER_INT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  <  VALUE_NUMBER_INT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
76	[BUG]  [BUGGY]  if(val!=  null  ||  val  <  =  VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val  <  =  VALUE_NUMBER_INT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val  <  =  VALUE_NUMBER_INT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
77	[BUG]  [BUGGY]  if(val!=  null  &&  val  <  =  VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  <  =  VALUE_NUMBER_FLOAT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  <  =  VALUE_NUMBER_FLOAT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
78	[BUG]  [BUGGY]  if(val!=  null  &&  val  <  =  VALUE_NUMBER_INT  ||  val  >  MIN_VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  <  =  VALUE_NUMBER_INT  ||  val  >  MIN_VALUE_NUMBER_FLOAT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  <  =  VALUE_NUMBER_INT  ||  val  >  MIN_VALUE_NUMBER_FLOAT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
79	[BUG]  [BUGGY]  if(val!=  null  &&  val  <  =  DEFAULT_VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  <  =  DEFAULT_VALUE_NUMBER_INT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  <  =  DEFAULT_VALUE_NUMBER_INT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
80	[BUG]  [BUGGY]  if(val!=  null  &&  val  <  =  MAX_VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  <  =  MAX_VALUE_NUMBER_INT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  <  =  MAX_VALUE_NUMBER_INT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
81	[BUG]  [BUGGY]  if(val  >=  null  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  ||  val.equals(key))  {	  if(val    ==    null    ||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
82	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
83	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue()  +  1;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  ent.getValue()  +  1;	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
84	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue()  +  key;  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue()  +  key;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  ent.getValue()  +  key;	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
85	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  key.getValue();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  key.getValue();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  key.getValue();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
86	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getCurrentEntry();  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getCurrentEntry();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  ent.getCurrentEntry();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
87	[BUG]  [BUGGY]  if(key!=  null  &&  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
88	[BUG]  [BUGGY]  if(key!=  null  &&  key.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  key.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  key.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
89	[BUG]  [BUGGY]  if(val!=  null  ||  key.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
90	[BUG]  [BUGGY]  if(key!=  null  ||  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
91	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  key.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  key.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
92	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key).iterator().next();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key).iterator().next();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key).iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
93	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next(),  val);  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next(),  val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next(),  val);	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
94	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.keySet().iterator().next();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.keySet().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
95	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator().next();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
96	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey().iterator().next();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey().iterator().next();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
97	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.iterator().next();  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.iterator().next();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
98	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  <  0)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.length()  <  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()  <  0)  {	  if(val    ==    null    ||    val.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
99	[BUG]  [BUGGY]  if(key  ==  null  ||  val.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.length()  <  =  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.length()  <  =  0)  {	  if(val    ==    null    ||    val.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
100	[BUG]  [BUGGY]  if(val.length()  >  0  ||  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  >  0  ||  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  >  0  ||  key.equals(val))  {	  if(val.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
101	[BUG]  [BUGGY]  if(val.length()  >  0  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  >  0  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  >  0  &&  key.equals(val))  {	  if(val.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
102	[BUG]  [BUGGY]  if(val.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  <  =  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  <  =  0)  {	  if(val.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
103	[BUG]  [BUGGY]  if(val!=  null  ||   ")path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||   ")path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||   ")path ".equals(key))  {	  if(val    ==    null    ||       ")path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
104	[BUG]  [BUGGY]  if(val  ==  null  ||   ")path= ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||   ")path= ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||   ")path= ".equals(key))  {	  if(val    ==    null    ||       ")path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
105	[BUG]  [BUGGY]  if(val  ==  null  ||   ")path ",  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||   ")path ",  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||   ")path ",  val.equals(key))  {	  if(val    ==    null    ||       ")path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
106	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.startsWith(val))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.startsWith(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.startsWith(val))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
107	[BUG]  [BUGGY]  if(val.length()  ==  0  &&  key.startsWith(val))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  &&  key.startsWith(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  &&  key.startsWith(val))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
108	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
109	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  key.endsWith(val))  {  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  ||  key.endsWith(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  ||  key.endsWith(val))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
110	[BUG]  [BUGGY]  if(val.length()!=  0  ||  key.startsWith(val))  {  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  0  ||  key.startsWith(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  0  ||  key.startsWith(val))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
111	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()!=  0)  {	  if(val!=    null    ||    val.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
112	[BUG]  [BUGGY]  if(val.length()!=  0  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  0  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  0  &&  key.equals(val))  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
113	[BUG]  [BUGGY]  if(key.length()!=  0  ||  val.equals(val))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()!=  0  ||  val.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()!=  0  ||  val.equals(val))  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
114	[BUG]  [BUGGY]  if(key.equals(val)||  val.length()!=  0  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.length()!=  0  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.length()!=  0  ||  val.equals(key))  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
115	[BUG]  [BUGGY]  if(val.length()  >=  0  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  >=  0  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  >=  0  &&  key.equals(val))  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
116	[BUG]  [BUGGY]  if(key  ==  null  ||!hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||!hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||!hasHitEOF)  {	  if(val    ==    null    ||!hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
117	[BUG]  [BUGGY]  if(val!=  null  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  hasHitEOF)  {	  if(val    ==    null    ||!hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
118	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getKey();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getKey();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  entry.getKey();	  Entry    <    String,    String>    currEntry    =    entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
119	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue()  +  1;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  entry.getValue()  +  1;	  Entry    <    String,    String>    currEntry    =    entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
120	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue()  +  val;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue()  +  val;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  entry.getValue()  +  val;	  Entry    <    String,    String>    currEntry    =    entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
121	[BUG]  [BUGGY]  if(val.equals(key)||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  hasHitEOF)  {	  if(val.equals(key)&&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
122	[BUG]  [BUGGY]  if(key.equals(val)&&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)&&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)&&  hasHitEOF)  {	  if(val.equals(key)&&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
123	[BUG]  [BUGGY]  if(val.equals(key)&&  hasHitEOF  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  hasHitEOF  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  hasHitEOF  ||  val.equals(key))  {	  if(val.equals(key)&&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
124	[BUG]  [BUGGY]  if(val.equals(key)&&  isEOF)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  isEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  isEOF)  {	  if(val.equals(key)&&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
125	[BUG]  [BUGGY]  if(value.equals(key)&&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value.equals(key)&&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value.equals(key)&&  hasHitEOF)  {	  if(val.equals(key)&&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
126	[BUG]  [BUGGY]  if(!val.equals(key)&&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(!val.equals(key)&&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(!val.equals(key)&&  hasHitEOF)  {	  if(val.equals(key)&&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
127	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  '/')  {	  if(key.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
128	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  ':')  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  ':')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  ':')  {	  if(key.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
129	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  '_')  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  '_')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.charAt(key.length()  -  1)!=  '_')  {	  if(key.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
130	[BUG]  [BUGGY]  if(key.length()!=  0  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()!=  0  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()!=  0  ||  val.length()  ==  0)  {	  if(key.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
131	[BUG]  [BUGGY]  if(val!=  null  ||  val.equalsIgnoreCase(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equalsIgnoreCase(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equalsIgnoreCase(key))  {	  if(val!=    null    ||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
132	[BUG]  [BUGGY]  if(key!=  null  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.equals(key))  {	  if(val!=    null    ||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
133	[BUG]  [BUGGY]  if(value  ==  null  ||  val  ==  null)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  null  ||  val  ==  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  null  ||  val  ==  null)  {	  if(val    ==    null    ||    key    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
134	[BUG]  [BUGGY]  if(key!=  null  &&  val.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
135	[BUG]  [BUGGY]  if(val!=  null  ||  key.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
136	[BUG]  [BUGGY]  if(val  ==  null  &&  key.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  key.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  key.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
137	[BUG]  [BUGGY]  if(key  ==  null  &&  val.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  &&  val.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  &&  val.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
138	[BUG]  [BUGGY]  if(key!=  null  &&  key.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  key.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  key.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
139	[BUG]  [BUGGY]  if(value!=  null  &&  key.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value!=  null  &&  key.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value!=  null  &&  key.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
140	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key,  val);  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key,  val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key,  val);	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
141	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  +  val);  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  +  val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  +  val);	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
142	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  -  val);  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  -  val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  -  val);	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
143	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  +  1);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  +  1);	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
144	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(val);  [CE]  illegal  start  of  type  [FE]                                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(val);	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
145	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  -  1);  [CE]  illegal  start  of  type  [FE]                                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  -  1);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key  -  1);	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
146	[BUG]  [BUGGY]  if(value!=  null  ||  val  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value!=  null  ||  val  ==  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value!=  null  ||  val  ==  null)  {	  if(val!=    null    ||    key    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
147	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()  >  0)  {	  if(val    ==    null    ||    val.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
148	[BUG]  [BUGGY]  if(val.equals(key)&&  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  val.equals(value))  {	  if(val.equals(key)||    val.equals(value))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
149	[BUG]  [BUGGY]  if(key.equals(val)||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.equals(value))  {	  if(val.equals(key)||    val.equals(value))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
150	[BUG]  [BUGGY]  if(val.equals(key)||  value.equals(val))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  value.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  value.equals(val))  {	  if(val.equals(key)||    val.equals(value))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
151	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith(value))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith(value))  {	  if(val.equals(key)||    val.equals(value))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
152	[BUG]  [BUGGY]  if(val!=  null  &&  val.startsWith( "path   "))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.startsWith( "path   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.startsWith( "path   "))  {	  if(val!=    null    ||    val.startsWith(   "path   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
153	[BUG]  [BUGGY]  if(val!=  null  ||  val.startsWith( ".path "))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.startsWith( ".path "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.startsWith( ".path "))  {	  if(val!=    null    ||    val.startsWith(   "path   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
154	[BUG]  [BUGGY]  if(val!=  null  ||  val.startsWith(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.startsWith(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.startsWith(key))  {	  if(val!=    null    ||    val.startsWith(   "path   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
155	[BUG]  [BUGGY]  if(val!=  null  &&  val.startsWith( ".path "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.startsWith( ".path "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.startsWith( ".path "))  {	  if(val!=    null    ||    val.startsWith(   "path   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
156	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "path "))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.startsWith( "path "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.startsWith( "path "))  {	  if(val!=    null    ||    val.startsWith(   "path   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
157	[BUG]  [BUGGY]  if(key!=  null  ||  val.startsWith( "path   "))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.startsWith( "path   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.startsWith( "path   "))  {	  if(val!=    null    ||    val.startsWith(   "path   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
158	[BUG]  [BUGGY]  if(val  ==  null  ||! "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||! "path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||! "path ".equals(key))  {	  if(val!=    null    ||!   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
159	[BUG]  [BUGGY]  if(val!=  null  &&! "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&! "path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&! "path ".equals(key))  {	  if(val!=    null    ||!   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
160	[BUG]  [BUGGY]  if(val.length()!=  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  0  ||  key.charAt(val.length()  -  1)!=  '/')  {	  if(val.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
161	[BUG]  [BUGGY]  if(key  ==  null  ||  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.length()!=  0)  {	  if(val    ==    null    ||    val.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
162	[BUG]  [BUGGY]  if(key!=  null  &&  val.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.equals(ent.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
163	[BUG]  [BUGGY]  if(val!=  null  ||  key.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key.equals(ent.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
164	[BUG]  [BUGGY]  if(key!=  null  &&  key.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  key.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  key.equals(ent.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
165	[BUG]  [BUGGY]  if(key  ==  null  &&  val.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  &&  val.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  &&  val.equals(ent.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
166	[BUG]  [BUGGY]  if(key!=  null  ||  val.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.equals(ent.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
167	[BUG]  [BUGGY]  if(val  ==  null  &&  key.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  key.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  key.equals(ent.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
168	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( "_ "))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.equals( "_ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.equals( "_ "))  {	  if(val    ==    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
169	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( "/ "))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.equals( "/ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.equals( "/ "))  {	  if(val    ==    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
170	[BUG]  [BUGGY]  if(val!=  null  ||  key.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key.length()  ==  0)  {	  if(key!=    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
171	[BUG]  [BUGGY]  if(key  ==  null  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  hasHitEOF)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
172	[BUG]  [BUGGY]  if(key  ==  null  ||  val!=  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val!=  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val!=  hasHitEOF)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
173	[BUG]  [BUGGY]  if(val!=  null  ||  key  ==  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key  ==  null  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key  ==  null  ||  val.length()  ==  0)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
174	[BUG]  [BUGGY]  if(val  ==  null  ||  isEOF)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  isEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  isEOF)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
175	[BUG]  [BUGGY]  if(val!=  null  ||  key!=  null)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key!=  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key!=  null)  {	  if(key!=    null    ||    val!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
176	[BUG]  [BUGGY]  if(key!=  null  &&  val!=  null)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val!=  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val!=  null)  {	  if(key!=    null    ||    val!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
177	[BUG]  [BUGGY]  if(key!=  null  ||  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  key.equals(val))  {	  if(val!=    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
178	[BUG]  [BUGGY]  if(value!=  null  ||  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value!=  null  ||  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value!=  null  ||  key.equals(val))  {	  if(val!=    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
179	[BUG]  [BUGGY]  if  (val  ==  null  ||! "name ".equals(key))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if  (val  ==  null  ||! "name ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if  (val  ==  null  ||! "name ".equals(key))  {	  if    (val    ==    null    ||       "name   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
180	[BUG]  [BUGGY]  if(key!=  null  &&  val  ==  null)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val  ==  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val  ==  null)  {	  if(val!=    null    &&    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
181	[BUG]  [BUGGY]  if(val!=  null  &&  key  ==  null)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  key  ==  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  key  ==  null)  {	  if(val!=    null    &&    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
182	[BUG]  [BUGGY]  if(key!=  null  &&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  hasHitEOF)  {	  if(val!=    null    &&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
183	[BUG]  [BUGGY]  if(val  ==  null  &&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  hasHitEOF)  {	  if(val!=    null    &&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
184	[BUG]  [BUGGY]  if(key!=  null  ||  val!=  null  &&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val!=  null  &&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val!=  null  &&  hasHitEOF)  {	  if(val!=    null    &&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
185	[BUG]  [BUGGY]  if(val!=  null  &&  isEOF)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  isEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  isEOF)  {	  if(val!=    null    &&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
186	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()  ==  0  ||  key.charAt(val.length()  -  1)!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
187	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0  ||  val.charAt(val.length())!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.length()  ==  0  ||  val.charAt(val.length())!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()  ==  0  ||  val.charAt(val.length())!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
188	[BUG]  [BUGGY]  if(val!=  null  ||  key.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
189	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  >=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.length()  >=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()  >=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
190	[BUG]  [BUGGY]  if(val!=  null  &&  'path'.equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  'path'.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  'path'.equals(key))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
191	[BUG]  [BUGGY]  if(val  ==  null  ||  'path'.equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  'path'.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  'path'.equals(key))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
192	[BUG]  [BUGGY]  if(key!=  null  ||  'path'.equals(val))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  'path'.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  'path'.equals(val))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
193	[BUG]  [BUGGY]  if(val  ==  null  &&  'path'.equals(key))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  'path'.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  'path'.equals(key))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
194	[BUG]  [BUGGY]  if(val!=  null  ||  key.equals('path'))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  key.equals('path'))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  key.equals('path'))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
195	[BUG]  [BUGGY]  if(val!=  null  ||  '.'.equals(key))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  '.'.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  '.'.equals(key))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
196	[BUG]  [BUGGY]  if(val.length()  <  0)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  <  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  <  0)  {	  if(val.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
197	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getKey();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getKey();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  ent.getKey();	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
198	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  1;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  1;	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
199	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  key;  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  key;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  key;	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
200	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  key.getValue();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  key.getValue();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  key.getValue();	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
201	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getCurrentEntry();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getCurrentEntry();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  ent.getCurrentEntry();	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
202	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  val;  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  val;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  ent.getValue()  +  val;	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
203	[BUG]  [BUGGY]  if(val.length()  ==  0  &&  headers.containsKey(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  &&  headers.containsKey(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  &&  headers.containsKey(key))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
204	[BUG]  [BUGGY]  if(val.length()!=  0  ||  headers.containsKey(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  0  ||  headers.containsKey(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  0  ||  headers.containsKey(key))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
205	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  headers.containsKey(val))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  headers.containsKey(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  headers.containsKey(val))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
206	[BUG]  [BUGGY]  if(val.length()  ==  1  ||  headers.containsKey(key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  1  ||  headers.containsKey(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  1  ||  headers.containsKey(key))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
207	[BUG]  [BUGGY]  if(val.length()  >  0  ||  headers.containsKey(key))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  >  0  ||  headers.containsKey(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  >  0  ||  headers.containsKey(key))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
208	[BUG]  [BUGGY]  if(val.length()!=  0  &&  headers.containsKey(key))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  0  &&  headers.containsKey(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  0  &&  headers.containsKey(key))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
209	[BUG]  [BUGGY]  if(key!=  null  ||!hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||!hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||!hasHitEOF)  {	  if(val!=    null    ||!hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
210	[BUG]  [BUGGY]  if(val!=  null  &&!hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&!hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&!hasHitEOF)  {	  if(val!=    null    ||!hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
211	[BUG]  [BUGGY]  if(key  ==  null  ||  key.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  key.length()  ==  0)  {	  if(key    ==    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
212	[BUG]  [BUGGY]  if(val!=  null  &&  val.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.length()  <  =  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.length()  <  =  0)  {	  if(val!=    null    &&    val.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
213	[BUG]  [BUGGY]  String  val  =  key.getValue();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  key.getValue();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  key.getValue();	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
214	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  key;  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  ent.getValue()  +  key;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  ent.getValue()  +  key;	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
215	[BUG]  [BUGGY]  String  val  =  key.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  key.toLowerCase();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  key.toLowerCase();	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
216	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  ent.getValue()  +  1;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  ent.getValue()  +  1;	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
217	[BUG]  [BUGGY]  String  val  =  ent.getKey();  [CE]  illegal  start  of  type  [FE]                                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  ent.getKey();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  ent.getKey();	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
218	[BUG]  [BUGGY]  String  val  =  key.trim();  [CE]  illegal  start  of  type  [FE]                                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  key.trim();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  key.trim();	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
219	[BUG]  [BUGGY]  if(key!=  null  &&  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.equals(key))  {	  if(val!=    null    &&    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
220	[BUG]  [BUGGY]  if(key  ==  null  &&  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  &&  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  &&  val.equals(key))  {	  if(val!=    null    &&    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
221	[BUG]  [BUGGY]  if(key!=  null  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  key.equals(val))  {	  if(val!=    null    &&    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
222	[BUG]  [BUGGY]  if(value!=  null  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value!=  null  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value!=  null  &&  key.equals(val))  {	  if(val!=    null    &&    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
223	[BUG]  [BUGGY]  if(key  ==  null  ||  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  key.equals(val))  {	  if(val    ==    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
224	[BUG]  [BUGGY]  if(key  ==  null  ||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.equals(value))  {	  if(val    ==    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
225	[BUG]  [BUGGY]  if(value  ==  null  ||  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  null  ||  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  null  ||  key.equals(val))  {	  if(val    ==    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
226	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals( ".prototype. "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals( ".prototype. "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals( ".prototype. "))  {	  if(val.equals(key)||    val.equals(   "name   "))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
227	[BUG]  [BUGGY]  if(key.equals(val)||  val.equals( "name "))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.equals( "name "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.equals( "name "))  {	  if(val.equals(key)||    val.equals(   "name   "))    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
228	[BUG]  [BUGGY]  if(key.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  >=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  >=  0)  {	  if(val.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
229	[BUG]  [BUGGY]  if(value.length()  ==  0  ||  headers.containsKey(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value.length()  ==  0  ||  headers.containsKey(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value.length()  ==  0  ||  headers.containsKey(key))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
230	[BUG]  [BUGGY]  if(val.length()  >=  0  ||  headers.containsKey(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  >=  0  ||  headers.containsKey(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  >=  0  ||  headers.containsKey(key))  {	  if(val.length()    ==    0    ||    headers.containsKey(key))    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
231	[BUG]  [BUGGY]  if(key!=  null  ||  val.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.length()  >=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.length()  >=  0)  {	  if(key!=    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
232	[BUG]  [BUGGY]  if(val!=  null  ||   ")path= ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||   ")path= ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||   ")path= ".equals(key))  {	  if(val    ==    null    ||       ")path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
233	[BUG]  [BUGGY]  if(val  >=  null  ||  'path'.equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  ||  'path'.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  ||  'path'.equals(key))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
234	[BUG]  [BUGGY]  if(val!=  null  ||  'path'.equals(value))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  'path'.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  'path'.equals(value))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
235	[BUG]  [BUGGY]  if(key.length()!=  0  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()!=  0  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()!=  0  ||  val.equals(key))  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
236	[BUG]  [BUGGY]  if(key.length()!=  0  ||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()!=  0  ||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()!=  0  ||  val.equals(value))  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
237	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equals(value))  {	  if(val    ==    null    ||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
238	[BUG]  [BUGGY]  if(key.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()!=  0)  {	  if(val.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
239	[BUG]  [BUGGY]  if(entry!=  null  &&  key.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(entry!=  null  &&  key.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(entry!=  null  &&  key.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
240	[BUG]  [BUGGY]  if(key!=  null  &&  value.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  value.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  value.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
241	[BUG]  [BUGGY]  if(value!=  null  &&  key.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value!=  null  &&  key.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value!=  null  &&  key.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
242	[BUG]  [BUGGY]  if(key.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  >  0)  {	  if(val.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
243	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  -  val);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(key  -  val);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(key  -  val);	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
244	[BUG]  [BUGGY]  if(val!=  null  &&  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
245	[BUG]  [BUGGY]  if(key!=  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
246	[BUG]  [BUGGY]  if(value  ==  null  ||  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  null  ||  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  null  ||  val.length()!=  0)  {	  if(val    ==    null    ||    val.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
247	[BUG]  [BUGGY]  if(key!=  null  &&  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.equals(value))  {	  if(val!=    null    &&    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
248	[BUG]  [BUGGY]  if('.'.equals(key)&&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if('.'.equals(key)&&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if('.'.equals(key)&&  hasHitEOF)  {	  if(val.equals(key)&&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
249	[BUG]  [BUGGY]  if(key  ==  null  &&  val!=  null)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  &&  val!=  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  &&  val!=  null)  {	  if(val!=    null    &&    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
250	[BUG]  [BUGGY]  if(key  ==  key  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  key  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  key  ||  val.length()  ==  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
251	[BUG]  [BUGGY]  if(key  ==  value  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  value  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  value  ||  val.length()  ==  0)  {	  if(val    ==    key    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
252	[BUG]  [BUGGY]  if(key.equals(val)||  val.startsWith( ".java "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.startsWith( ".java "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.startsWith( ".java "))  {	  if(val.equals(key)||    val.startsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
253	[BUG]  [BUGGY]  if(val.equals(key)&&  val.startsWith( ".prototype. "))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)&&  val.startsWith( ".prototype. "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)&&  val.startsWith( ".prototype. "))  {	  if(val.equals(key)||    val.startsWith(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
254	[BUG]  [BUGGY]  if(key  ==  null  ||  val!=  null  &&  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val!=  null  &&  val.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val!=  null  &&  val.length()  >  0)  {	  if(val!=    null    &&    val.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
255	[BUG]  [BUGGY]  if(val  ==  null  &&  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  val.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  val.length()  >  0)  {	  if(val!=    null    &&    val.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
256	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getQualifiedName();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  ent.getQualifiedName();	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
257	[BUG]  [BUGGY]  if(key  ==  null  ||  val.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.length()  >=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.length()  >=  0)  {	  if(key    ==    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
258	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().get(key);  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().get(key);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().get(key);	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
259	[BUG]  [BUGGY]  if(value!=  null  &&  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value!=  null  &&  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value!=  null  &&  hasHitEOF)  {	  if(val!=    null    &&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
260	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals(key)||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equals(key)||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equals(key)||  val.equals(value))  {	  if(val.equals(key)||    val.equals(value))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
261	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.startsWith(value))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.startsWith(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.startsWith(value))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
262	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.startsWith( ") "))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.startsWith( ") "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.startsWith( ") "))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
263	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.startsWith('-'))  {  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.startsWith('-'))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.startsWith('-'))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
264	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().first();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().first();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().first();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
265	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next()  +  1;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next()  +  1;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next()  +  1;	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
266	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.equals(key))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
267	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  key.equals(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  ||  key.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  ||  key.equals(key))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
268	[BUG]  [BUGGY]  String  val  =  ent.getValue()  +  5;  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  ent.getValue()  +  5;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  ent.getValue()  +  5;	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
269	[BUG]  [BUGGY]  if(val  ==  null  &&  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  val.length()  ==  0)  {	  if(val!=    null    &&    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
270	[BUG]  [BUGGY]  if(key!=  null  ||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.equals(value))  {	  if(val!=    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
271	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(key)||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.equals(key)||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.equals(key)||  val.equals(key))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
272	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals(string))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals(string))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals(string))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
273	[BUG]  [BUGGY]  if(value  ==  null  ||  key.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  null  ||  key.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  null  ||  key.length()  ==  0)  {	  if(value    ==    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
274	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key).trim();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key).trim();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.get(key).trim();	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
275	[BUG]  [BUGGY]  if(val  ==  null  ||? "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||? "path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||? "path ".equals(key))  {	  if(val!=    null    ||?   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
276	[BUG]  [BUGGY]  if(val!=  null  &&  val  ==  VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  ==  VALUE_NUMBER_INT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  ==  VALUE_NUMBER_INT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
277	[BUG]  [BUGGY]  if(val  ==  null  &&  val  <  =  VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  &&  val  <  =  VALUE_NUMBER_INT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  &&  val  <  =  VALUE_NUMBER_INT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
278	[BUG]  [BUGGY]  if(val!=  null  &&  val  >=  VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  >=  VALUE_NUMBER_INT)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  >=  VALUE_NUMBER_INT)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
279	[BUG]  [BUGGY]  if(key!=  null  ||  key.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  key.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  key.length()  ==  0)  {	  if(key.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
280	[BUG]  [BUGGY]  if(key  ==  null  ||  val.equals( "   "))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.equals( "   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.equals( "   "))  {	  if(val    ==    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
281	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals( ". "))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.equals( ". "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.equals( ". "))  {	  if(val    ==    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
282	[BUG]  [BUGGY]  if(key!=  null  ||  val.equals( "   "))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val.equals( "   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val.equals( "   "))  {	  if(val!=    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
283	[BUG]  [BUGGY]  if(val!=  null  &&  val.equals( ". "))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.equals( ". "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.equals( ". "))  {	  if(val!=    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
284	[BUG]  [BUGGY]  if(value  ==  null  ||!hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  null  ||!hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  null  ||!hasHitEOF)  {	  if(val    ==    null    ||!hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
285	[BUG]  [BUGGY]  if(val  >=  null  ||!hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  ||!hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  ||!hasHitEOF)  {	  if(val    ==    null    ||!hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
286	[BUG]  [BUGGY]  if(key!=  null  ||  val  >=  null)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  ||  val  >=  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  ||  val  >=  null)  {	  if(val!=    null    ||    key    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
287	[BUG]  [BUGGY]  if(val  ==  key  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  key  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  key  ||  val.equals(key))  {	  if(val    ==    null    ||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
288	[BUG]  [BUGGY]  if(val!=  null  &&  key.equals(entry.key))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  key.equals(entry.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  key.equals(entry.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
289	[BUG]  [BUGGY]  if(key  ==  null  ||  val.equals(ent.key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.equals(ent.key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.equals(ent.key))  {	  if(val!=    null    &&    key.equals(ent.key))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
290	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals(ent.getKey()))  {	  if(val.equals(key)||    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
291	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator()  :  val;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator()  :  val;  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator()  :  val;	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
292	[BUG]  [BUGGY]  if(val  >=  null  ||  val.length()  <  0)  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  ||  val.length()  <  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  ||  val.length()  <  0)  {	  if(val    ==    null    ||    val.length()    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
293	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue(key);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue(key);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	Entry  <  String,  String>  currEntry  =  headers.getValue(key);	  Entry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
294	[BUG]  [BUGGY]  if(key  ==  null  ||  val!=  null  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val!=  null  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val!=  null  &&  key.equals(val))  {	  if(val!=    null    &&    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
295	[BUG]  [BUGGY]  if(key!=  null  &&  val.equals( " "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.equals( " "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.equals( " "))  {	  if(val!=    null    &&    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
296	[BUG]  [BUGGY]  if(key.equals(val)||  val.startsWith( "/ "))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.startsWith( "/ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.startsWith( "/ "))  {	  if(val.equals(key)||    val.startsWith(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
297	[BUG]  [BUGGY]  if(val.equals(key)||  val.equals(entry.getKey()))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.equals(entry.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.equals(entry.getKey()))  {	  if(val.equals(key)||    val.equals(value))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
298	[BUG]  [BUGGY]  if(key  >=  null  ||  val  ==  null)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  >=  null  ||  val  ==  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  >=  null  ||  val  ==  null)  {	  if(key!=    null    ||    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
299	[BUG]  [BUGGY]  if(val!=  null  &&  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.length()!=  0)  {	  if(val    ==    null    ||    val.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
300	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0  ||  val.charAt(0)!=  '/')  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.length()  ==  0  ||  val.charAt(0)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()  ==  0  ||  val.charAt(0)!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
301	[BUG]  [BUGGY]  if(val  >=  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  ||  val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
302	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  >=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.length()  >=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.length()  >=  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val    ==    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
303	[BUG]  [BUGGY]  if(val  ==  null  ||  key!=  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  key!=  null  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  key!=  null  ||  val.length()  ==  0)  {	  if(key!=    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
304	[BUG]  [BUGGY]  if(key  >=  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  >=  null  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  >=  null  ||  val.length()  ==  0)  {	  if(key!=    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
305	[BUG]  [BUGGY]  if(key.length()  <  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  <  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  <  0)  {	  if(key.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
306	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( ".path "))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  ==  null  ||  val.startsWith( ".path "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  ==  null  ||  val.startsWith( ".path "))  {	  if(val!=    null    ||    val.startsWith(   "path   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
307	[BUG]  [BUGGY]  if(val.length()!=  4)  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  4)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  4)  {	  if(val.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
308	[BUG]  [BUGGY]  if(val.equals(key)||  val.startsWith( "java/lang/Object "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.equals(key)||  val.startsWith( "java/lang/Object "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.equals(key)||  val.startsWith( "java/lang/Object "))  {	  if(val.equals(key)||    val.startsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
309	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getPrimaryKey();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  ent.getPrimaryKey();  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  ent.getPrimaryKey();	  TarArchiveEntry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
310	[BUG]  [BUGGY]  if(key  ==  null  ||  val.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.equals(ent.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
311	[BUG]  [BUGGY]  if(val!=  null  &&  key.equals(ent.getValue()))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  key.equals(ent.getValue()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  key.equals(ent.getValue()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
312	[BUG]  [BUGGY]  if(key!=  null  &&  val.equals(ent.getValue()))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key!=  null  &&  val.equals(ent.getValue()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key!=  null  &&  val.equals(ent.getValue()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
313	[BUG]  [BUGGY]  if(val!=  null  &&  key.equals(entry.getKey()))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  key.equals(entry.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  key.equals(entry.getKey()))  {	  if(val!=    null    &&    key.equals(ent.getKey()))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
314	[BUG]  [BUGGY]  if(val!=  null  &&  val.length()  ==  0  &&  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.length()  ==  0  &&  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.length()  ==  0  &&  val.charAt(val.length()  -  1)!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
315	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0  ||  val.charAt(0)!=  '/')  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  val.length()  ==  0  ||  val.charAt(0)!=  '/')  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  val.length()  ==  0  ||  val.charAt(0)!=  '/')  {	  if(val!=    null    ||    val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
316	[BUG]  [BUGGY]  if(val!=  null  &&  val  <  =  VALUE_NUMBER_INT  ||  val  >  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val  <  =  VALUE_NUMBER_INT  ||  val  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val  <  =  VALUE_NUMBER_INT  ||  val  >  0)  {	  if(val!=    null    &&    val    <    =    VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
317	[BUG]  [BUGGY]  if(key  ==  null  ||  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.length()  >  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.length()  >  0)  {	  if(val!=    null    &&    key.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
318	[BUG]  [BUGGY]  if(val!=  null  &&  hasHitEOF  &&  key.equals(val))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  hasHitEOF  &&  key.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  hasHitEOF  &&  key.equals(val))  {	  if(val!=    null    &&    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
319	[BUG]  [BUGGY]  if(value  ==  null  ||  val.equals(key))  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  null  ||  val.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  null  ||  val.equals(key))  {	  if(val    ==    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
320	[BUG]  [BUGGY]  if(key.equals(val)||  val.length()!=  0  ||  val.equals(value))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.length()!=  0  ||  val.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.length()!=  0  ||  val.equals(value))  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
321	[BUG]  [BUGGY]  if(key.equals(val)||  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.length()!=  0)  {	  if(val.length()!=    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
322	[BUG]  [BUGGY]  if(val  >=  null  ||   ")path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  ||   ")path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  ||   ")path ".equals(key))  {	  if(val    ==    null    ||       ")path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
323	[BUG]  [BUGGY]  if(val!=  null  &&  val.equals( ",   "))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.equals( ",   "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.equals( ",   "))  {	  if(val!=    null    ||    val.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
324	[BUG]  [BUGGY]  if  (val!=  null  ||  'name'.equals(key))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if  (val!=  null  ||  'name'.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if  (val!=  null  ||  'name'.equals(key))  {	  if    (val    ==    null    ||       "name   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
325	[BUG]  [BUGGY]  if(val.length()!=  0  ||  key.equals(ent.getKey()))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()!=  0  ||  key.equals(ent.getKey()))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()!=  0  ||  key.equals(ent.getKey()))  {	  if(val.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
326	[BUG]  [BUGGY]  if(val.length()  >  0  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  >  0  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  >  0  ||  hasHitEOF)  {	  if(val.length()    ==    0    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
327	[BUG]  [BUGGY]  if(val.length()  <  0  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  <  0  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  <  0  ||  hasHitEOF)  {	  if(val.length()    ==    0    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
328	[BUG]  [BUGGY]  if(val  >=  null  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  >=  null  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  >=  null  ||  hasHitEOF)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
329	[BUG]  [BUGGY]  if(value  ==  null  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(value  ==  null  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(value  ==  null  ||  hasHitEOF)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
330	[BUG]  [BUGGY]  if(val!=  null  ||  isEOF)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  ||  isEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  ||  isEOF)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
331	[BUG]  [BUGGY]  if(val  <  null  ||  hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val  <  null  ||  hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val  <  null  ||  hasHitEOF)  {	  if(val    ==    null    ||    hasHitEOF)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
332	[BUG]  [BUGGY]  if(key  ==  null  ||  val.equals(val))  {  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val.equals(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val.equals(val))  {	  if(val!=    null    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
333	[BUG]  [BUGGY]  if(key  ==  null  ||  'path'.equals(key))  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  'path'.equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  'path'.equals(key))  {	  if(val!=    null    ||    'path'.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
334	[BUG]  [BUGGY]  if(val!=  null  &&?   "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&?   "path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&?   "path ".equals(key))  {	  if(val!=    null    ||?   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
335	[BUG]  [BUGGY]  if(val!=  null  &&  key.equals( "path "))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  key.equals( "path "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  key.equals( "path "))  {	  if(val!=    null    ||?   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
336	[BUG]  [BUGGY]  if(val!=  null  &&  key  ==  null  ||? "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  key  ==  null  ||? "path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  key  ==  null  ||? "path ".equals(key))  {	  if(val!=    null    ||?   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
337	[BUG]  [BUGGY]  if(val!=  null  &&  key!=   "path ".equals(key))  {  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  key!=   "path ".equals(key))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  key!=   "path ".equals(key))  {	  if(val!=    null    ||?   "path   ".equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
338	[BUG]  [BUGGY]  if(key  ==  null  ||  val  ==  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val  ==  null  ||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val  ==  null  ||  val.length()  ==  0)  {	  if(key    ==    null    ||    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
339	[BUG]  [BUGGY]  if(key  ==  null  ||  val  ==  null  ||  val.equals( " "))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val  ==  null  ||  val.equals( " "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val  ==  null  ||  val.equals( " "))  {	  if(key    ==    null    ||    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
340	[BUG]  [BUGGY]  if(key  ==  null  ||  val  ==  null  ||  val.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val  ==  null  ||  val.length()!=  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val  ==  null  ||  val.length()!=  0)  {	  if(key    ==    null    ||    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
341	[BUG]  [BUGGY]  if(key  ==  null  ||  val  ==  null  ||!hasHitEOF)  {  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key  ==  null  ||  val  ==  null  ||!hasHitEOF)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key  ==  null  ||  val  ==  null  ||!hasHitEOF)  {	  if(key    ==    null    ||    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
342	[BUG]  [BUGGY]  if(key.equals(val)||  val.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.equals(val)||  val.length()  ==  0)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.equals(val)||  val.length()  ==  0)  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
343	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  key.equals(value))  {  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  ==  0  ||  key.equals(value))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  ==  0  ||  key.equals(value))  {	  if(val.length()    ==    0    ||    key.equals(val))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
344	[BUG]  [BUGGY]  if(key.length()  ==  0  ||  val.startsWith('/'))  {  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(key.length()  ==  0  ||  val.startsWith('/'))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(key.length()  ==  0  ||  val.startsWith('/'))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
345	[BUG]  [BUGGY]  if(val.length()  >  0  ||  key.startsWith(val))  {  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val.length()  >  0  ||  key.startsWith(val))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val.length()  >  0  ||  key.startsWith(val))  {	  if(val.length()    ==    0    ||    key.startsWith(val))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
346	[BUG]  [BUGGY]  if(val!=  null  &&  val!=  null)  {  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val!=  null)  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val!=  null)  {	  if(val!=    null    &&    val    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
347	[BUG]  [BUGGY]  if(val!=  null  &&  val.startsWith( "_ "))  {  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  if(val!=  null  &&  val.startsWith( "_ "))  {  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	if(val!=  null  &&  val.startsWith( "_ "))  {	  if(val!=    null    &&    val.equals(key))    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
348	[BUG]  [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.getValue(key);  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  TarArchiveEntry  <  String,  String>  currEntry  =  headers.getValue(key);  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	TarArchiveEntry  <  String,  String>  currEntry  =  headers.getValue(key);	  TarArchiveEntry    <    String,    String>    currEntry    =    headers.get(key);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
349	[BUG]  [BUGGY]  String  val  =  ent.getValue()  + "/.* ";  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  ent.getValue()  + "/.* ";  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  ent.getValue()  + "/.* ";	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
350	[BUG]  [BUGGY]  String  val  =  ent.getValue()  + ".000 ";  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){  String  key  =  ent.getKey();  String  val  =  ent.getValue();      [BUGGY]  String  val  =  ent.getValue()  + ".000 ";  [BUGGY]      currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  currEntry.setUserId(Integer.parseInt(val));  }  else  if  (     "uname     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	496	496	1	replace	String  val  =  ent.getValue()  + ".000 ";	  String    val    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
