projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrentToken())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch<
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whil((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.next())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!remainders.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.in())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.nextToken())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrentToken())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.remaining())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getValue())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.next())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getKey())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch!=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getRead())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getSize())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getLowerClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.class)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.seek())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getOpen())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCharacterEncoding())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.containsKey(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.hasNext())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.available())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readInt();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).reset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.next()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.get()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.currentToken())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((read=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441While((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getNext())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrent())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.getClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isExported())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()){
