projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrentToken())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch<
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whil((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.next())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!remainders.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.in())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.nextToken())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrentToken())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.remaining())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getValue())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.next())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getKey())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch!=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getRead())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getSize())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getLowerClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.class)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.seek())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getOpen())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCharacterEncoding())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.containsKey(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.hasNext())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.available())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readInt();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).reset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.next()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.get()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.currentToken())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((read=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441While((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getNext())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrent())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.getClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isExported())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||isHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.hasMoreElements()&&isHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&containsHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&read<=isHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch<
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch>>
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch<
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch>>
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()[Delete]-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whil((ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whil((ch=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.nextToken())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!headers.contains(ch)&&i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!headers.isEmpty()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.contains(ch)||headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whilst(i.isEmpty()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.hasNext())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.containsKey(keyword,restLen)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||headers.containsKey(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.containsKey(keyword,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&headers.containsKey(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&headers.containsKey(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()==0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()!=0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()>-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()==restLen&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIl
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIl
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!headers.containsKey(i.getKeyword())){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIl
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.containsKey(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!headers.containsKey(ch)&&i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!headers.isEmpty()&&!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whilst(i.isEmpty()&&!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whilst(i.hasNext()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrentSize())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCharacterEncoding())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.next()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&!remainders.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&restLen>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441While(i.hasMoreElements()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()&&!i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.hasMoreElements()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&i.nextElement()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers.length)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers.size())){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.contains(ch)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!headers.isEmpty()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!headers.isEmpty()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch<i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch==i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch<=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES,headers.size())){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.recordSize())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getKey())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((restLen=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,restLen)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.get())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.seek())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.seek())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whil((ch=i.seek())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.read())>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>1){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.next()!=null&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.next()!=null&&restLen!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.in())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.in())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.in())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.in())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,restLen)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.CLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.available())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.available())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.available())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||!i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.hasMoreElements()||i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readFully(i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readUTF();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=i.readInt();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readFully();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers!=null?headers.readInt():i;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers!=null?headers.readInt():i.inputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers,i.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers,coll.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.size()-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers,0,len.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers,col.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers,parsePaxHeaders(i.read()));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers,parsePaxHeaders(i));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.remaining())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i!=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<ch)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<=ch)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i<ch.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isClosed()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&restLen!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(ch==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i==null&&!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&isEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,header
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.size()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()&&i.hasMoreElements()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.size()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.hasMoreElements()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size()-2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size()+read;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size()-4;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size()-read;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getLength())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()&&hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isExtern())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.isExported())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isExported())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isAssigned())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.cfg())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=len&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=restLen&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()[Delete]&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=ch&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=ch&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=ch&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.get
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.isEmpty()&&i.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.size()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.size()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,parsePaxHeaders(i));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,restLen);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,parsePaxHeaders(i));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,restLen);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||isEnabled(TarArchiveEntry.class)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.class,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.class,headers.length)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&isEnabled(TarArchiveEntry.class)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.class,headers.size())){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.class,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()||i.hasMoreElements()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.size()>0||i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()||i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||headers.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||headers.size()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&i.next()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>>=
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>>=
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>>=
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>>=
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getValue())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM,headers.length)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(remainders.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(remainingLen!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).parsePaxHeaders(i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).headers.reset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getInput())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getExtern())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<restLen)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(remainingLen<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441While((ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.get()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.get()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.get()!=-1&&restLen!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers.length)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whilst(i.hasNext()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()==headers.size()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getChronology())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrent())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.get())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.record())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441whil((ch=i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,restLen)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||!remainders.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()<len&&!remainders.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!headers.contains(ch)||headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!headers.contains(ch)&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size()-2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size()+read;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size()-4;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.getClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.getSize())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()>>-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()[Delete]-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()>=0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=null&&i.hasNext()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=null&&i.next()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getUpperClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getLastClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getBlockSize())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(remainingLen=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i==null&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&i.next()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i>=null&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null||i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&restLen!=0){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getCurrentName())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getTarEncoding())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=hasHitEOF&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(read=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!readEOF&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!isEOF&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readObject();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readInt()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(remainders.hasNext()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441While(i.hasNext()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.containsKey(keyword)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.size()>0){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){keyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read().isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read().endsWith(".java")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read().equals(headers.length)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read().endsWith(headers.size())){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).parsePaxHeaders(headers,i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((read=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((read=i.read(ch))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((read=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.WRITE_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isRead())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isDirectory())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.next()!=null){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.getNext()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.isEmpty()&&!headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.WRITE_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&read!=isHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.isEmpty()&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(TarArchiveEntry.class)&&hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(TarArchiveEntry.class)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getClose())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=headers.size()&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasNext()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441While(i.hasNext()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.isEmpty()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasNext()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&restLen>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&restLen>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&restLen==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&restLen<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.isEmpty()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.isEmpty()&&!i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()[Delete]-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()!=null){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(remainders,len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(remainders);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(remainders,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!isEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(i.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(headers.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(i.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&i.hasMoreElements()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&restLen!=0){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAME)||i.isEnabled(Feature.QUOTE_FIELD_NAME)){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&!remainders.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getRead())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(headers.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!remainders.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>[Delete]
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>[Delete]
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>>>
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers.containsKey(keyword)){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIl
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES),hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAME)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SOURCE,headers.length)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAME)||i.isEnabled(Feature.QUOTE_FIELD_NAME)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch<}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch<}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch>=0;ch
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()}&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(ch<i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.size()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.isEmpty()&&i.containsKey(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.containsKey(keyword),read){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&i.isEmpty()&&i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.get()!=null){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()&&!headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword()
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&!remainders.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.current())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(headers.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!isEOF&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.getRead())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.isClosed())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_SIZE)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(headers.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getNext())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.get(ch));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.size()+read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.toArray(newString[headers.size()]));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.get(len-read));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(remainders.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()&&!headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i!=null){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&restLen!=0){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(remainders);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).addHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasHitEOF){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0){headers.put(keyword,headers.get(keyword)
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getHeaderSize())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&i.hasMoreElements()||i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||headers.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()&&headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(headers.hasMoreElements()||headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i.seek())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.size()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.get(i.getKey()));
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setRead(headers.size()+len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownew
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.isEnabled(Feature.QUOTE_FIELD_NAMES))){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.isEnabled(Feature.AUTO_CLOSE_SOURCE))){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.seek()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i.read()<=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch++){}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(ch));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers.get(
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalStateException("".);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getWrite())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,SMALL_BUFFER_SIZE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry)i).setHeaders(headers,0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch!=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.remainder())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.read())>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((i=i.hasNext())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword()
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(!hasHitEOF){if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders.get(i.getKeyword());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.read()<-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.read()&&!stringEncoding.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.containsKey(header)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).start();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.size()+i.read();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intrestLen=headers.length;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()||i.nextElement()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAME||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers[ch]
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(keyword,headers
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.canBeEnabled(Feature.QUOTE_FIELD_NAMES)){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.hasNext()){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()||headers.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch>=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(ch{i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&i.canRead()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>>=
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){for(intch=i.read();ch<0;ch>>>
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.skip())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&i.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isClosed()&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i!=null&&!hasHitEOF&&(ch=i.read()+1)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()<len&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()<restLen&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_FIELD_NAMES,headers)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAME,headers.size())){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.get(i.getKeyword())!=null){returnheaders;}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&headers.get(i.getKeyword()).length>0){Stringkeyword=headers.get(i.getKeyword());if(keyword!=null){returnheaders
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(headers.size()>0||headers.get(keyword)!=null){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){if(headers.size()>0){headers.put(keyword,headers.get(keyword));}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441i.setEnabled(Feature.QUOTE_FIELD_NAMES||i.isEnabled(Feature.QUOTE_FIELD_NAMES)){thrownewIllegalArgumentException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&isEnabled(Feature.QUOTE_ENCODING_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(remainderLen=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(height=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!hasHitEOF&&(i=i.read()||restLen!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.AUTO_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_ENCODING_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasNext()&&isEnabled(Feature.QUOTE_ENCODING)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while((ch=i.getData())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&headers.size()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEmpty()&&coll.isEmpty()&&isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441if(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.hasNext()){for(intch=i.read();ch<0;ch>0;){headers.put(ch,headers[ch]
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.getCurrent()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isRecorded()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.hasMoreElements()&&headers.contains(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.isEmpty()&&headers.containsKey(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readLine();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441InputStreamis=headers.readIOF();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(!i.hasNext()&&i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEnabled(Feature.QUOTE_FIELD_NAMES)&&i.get()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441while(i.isEnabled(Feature.AUTO_CLOSE_SOURCE)&&i.get()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441intn=headers.size()*2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java441((TarArchiveEntry<K,V>)i).setHeaders(headers,p);
