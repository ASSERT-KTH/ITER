projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.read()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i!=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i>=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.endsWith(".java")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.read()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.read()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.next()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,coll.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=i.readInputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=i.inputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whil((ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch==coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()||coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()||coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.read()+1)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whil((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i!=null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.available()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.readInt();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446intlen=coll.length();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.hasNext())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,coll.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i.readFully()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While((ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i>=null&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreTokens()&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreTokens()&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.hasMoreTokens()||coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.hasMoreTokens()&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.nextToken()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasNext()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreElements()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.hasMoreElements()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.nextElement()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasMoreElements()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&(ch=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i==null&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&hasHitEOF&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(ch=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&hasHitEOF&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.length()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=coll.read()-1)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=coll.length())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=coll.read()+1)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=coll.read())!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.size()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.size()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.isEmpty()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.isEmpty()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(coll!=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i==null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(len!=0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.size()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.size()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len==coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()==coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch==coll.length())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch>=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.read()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.read()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()!=ch&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()!=&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()==ch&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>=ch&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()!=null&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()!=len&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>>ch&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()==0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&coll.read()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()!=0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(coll.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()||coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreElements()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.size()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.size()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.size()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.endsWith("java")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.endsWith("java/")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.endsWith("/.java")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.endsWith(".java")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.endsWith("java.")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.endsWith(".java")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(coll!=null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(len!=0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i==null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i!=null||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=null&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=null||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.next()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.next()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.next()!=null){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreTokens()||coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasMoreTokens()||coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.hasMoreTokens()||coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreTokens()||coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446finalByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446if(ch=='.'){ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(read);coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream();coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.flush();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayInputStream();coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len<coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<coll.length())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<coll.length)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(coll.read()<=0)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(i))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i,coll))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i,len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i,restLen))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=col.readFully(i))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i),read!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446intlen=coll.length()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446intlen=coll.length()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446intlen=coll.length()-read;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446intlen=coll.length()-2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integerlen=coll.length();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readInputStream(i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readFully(i,i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readInputStream(i,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readFully(i,ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readFully(i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=i.readInputStream(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()&&coll.charAt(len-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(len,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll,ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(coll,i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll,len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(i.readFully()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i.readFully()),read!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i.readFully()),read>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i.getBytes()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=col.readFully(i.readFully()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.available()==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.available()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.available()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.available()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.available()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.size()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.size()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.size()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.size()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(len=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(len=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&(len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&(ch=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,coll))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i),len)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len))!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<len.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<coll.length())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<str.length())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length()<0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=hasHitEOF&&(i=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=0&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=len&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.read()>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.read()>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next())!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.charAt(i.next()-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()<len&&coll.charAt(i.next()-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()zilei&&coll.charAt(i.next()-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>0&&coll.charAt(i.next()-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>&&coll.charAt(i.next()-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len==0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>>0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()||coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.size()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.size()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreTokens()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.size()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len==0&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(coll!=null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(len!=0&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i!=null&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i==null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll.read()+1)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i!=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len!=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i==coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreElements()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.hasMoreElements()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasMoreElements()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=len&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreTokens()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.length()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll==null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken()-1)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken()+1)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken())=='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(ch)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()||coll.charAt(i.nextToken())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreTokens()&&coll.charAt(i.nextToken())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len==0&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,i.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i,coll.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,len.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,IOUtils.readFully(len))!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,col.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,len)!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,coll.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,len.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i,coll.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,col.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,coll.length())!=0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.length())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)||coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE,ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE),read>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>0&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll.hasNext())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.hasNext())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&coll.read()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(coll.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreElements()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.length()>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isDirectory()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.hasMoreTokens()||coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.isEmpty()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch>=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>0&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>>0&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream(read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayInputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream(0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayInputStream(read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=coll.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.get())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreTokens()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreTokens()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.isEmpty()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.hasMoreTokens()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.toString(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.isEnabled(Feature.QUOTE_FIELD_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll.read()+ch)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll.read()-1)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newBufferedInputStream(i.inputStream());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readFully(i,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<ch)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i<coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<len)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.UTF_8)||coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>0&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.US_ASCII)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()<len&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.UTF_8)||coll.isEnabled(CharsetNames.US_ASCII)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()==ch)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()>-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.equals(CharsetNames.US_ASCII)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.toString(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i.isEmpty()&&coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.next()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i>=null&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446finalByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(read);coll.write(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446finalByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream();coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(ch,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayInputStream();coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch==IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<=IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=IOUtils.readFully(ch))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=IOUtils.readFully(i,len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=IOUtils.readFully(i))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=IOUtils.readFully(len,coll))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()!=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len!=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len>=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=coll.length())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len<0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=len&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.readInt()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.intValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.getIntValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.readInt(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.getIntValue(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=coll.read()-1)==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i<ch.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<=ch)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.hasMoreElements()||coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext().equals(ch)&&coll.next().equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().equals(ch,read)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.next().equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasNext()&&coll.next().equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().equals(ch+1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.next().length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasNext()&&coll.next().length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext().length&&coll.next().length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().length>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().length<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446finalByteArrayOutputStreamcoll=newByteArrayOutputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken())!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken()+1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()||coll.charAt(i.nextToken()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken()-1)=='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreTokens()&&coll.charAt(i.nextToken()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken()).charAt(0)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasNext()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()<len&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasNext()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()=coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()==coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len<=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=col.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&(ch=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&coll.length()<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll==null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.charAt(ch)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.charAt(i.next()-1)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.charAt(i.next())=='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.charAt(i.next()+1)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()||coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.equals(ch)||coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.isEmpty()&&coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.isEmpty()&&coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.isEmpty()&&coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,col.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()>>-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()>=0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&coll.read()>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.endsWith(".java")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.charAt(ch)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()<len&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>0&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()zilei&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()!='-'&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()!=ch&&coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreElements()||coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasMoreElements()||coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!coll.hasMoreElements()||coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||coll.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next())!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()<len&&coll.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()zilei&&coll.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>0&&coll.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>&&coll.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(read);coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(ch,0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()||coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasMoreElements()&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.next()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.hasNext()||coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len==0&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE||coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)||coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE,true)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446coll=newByteArrayOutputStream();coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write('');
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(0);coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write('n');
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i!=null&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.getMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().equals(keyword)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasNext()&&coll.next().equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().equals(ch)||hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.getMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.isEnabled(CharsetNames.US_ASCII)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,i.readFully())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,i.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully(len,coll.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,coll.read())!=-1)&&hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=null&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i!=null&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES),hasHitEOF){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.getCharsetNames().size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.equals(Feature.QUOTE_FIELD_NAME)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(ch<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasMoreTokens()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i.hasMoreTokens()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read(ch)!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=hasHitEOF&&(ch!=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()[Delete]-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken())=='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((coll=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=coll.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.hasNext())&&(ch=IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446coll=newByteArrayOutputStream();coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(0);coll.close();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.isEmpty()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.size()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasNext()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.length()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.endsWith(".js")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.endsWith("/")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(ch==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()||(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&(ch<coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&(ch<=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()}&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whil((i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<=IOUtils.readFully(i,coll))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<=IOUtils.readFully(i.read()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!isEOF&&(i.read()==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i==null&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.get()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.endsWith("-")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.equals(CharacterEncoding.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=null&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!isEOF&&(i.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446intlen=coll.length()+read;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=null&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!i.hasMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.nextToken())>='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(read>=0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,i.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,coll.length())==-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(len,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,is);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.inputStream(i,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.inputStream(i);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=TarArchiveEntry.inputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!isEOF&&(ch<coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.isEmpty()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(coll=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(c=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(coll=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.read())>>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(len=IOUtils.readFully(i.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(len=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(len=IOUtils.readFully(i,coll))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll-read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(ch,coll);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.getMoreElements()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.UTF_4)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.UTF_9)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.UTF_6)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.ITF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(2);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i!=null&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readInputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=hasHitEOF&&(len=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!isEOF&&(i=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(record.read()!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreTokens()&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i>=null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&(ch=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreTokens()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.length()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().length==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().length>=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().length!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While(i.hasMoreElements()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len==null&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()-1)=='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()+1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&col.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasNext()&&coll.charAt(i.next()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i,coll.readFully()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(i.bytes()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=coll.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.next()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.getNext()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(coll.read()<=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(coll.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=coll.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&(ch!=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.equals(CharsetNames.UTF_4)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully(ch))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasNext()&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len==null&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=hasHitEOF&&(ch==i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next())=='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()-1)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()+1)!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next())>='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&col.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.hasMoreTokens()&&coll.hasMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.getMoreTokens()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&!hasHitEOF&&(i.read()>=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=1&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.charAt(len-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(len=IOUtils.readFully(i.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(len<i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()-1)=='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next()+1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&col.charAt(i.next()-1)!='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=col.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream(Read);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.readInt(0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=col.readInt();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.readInt(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll!=null&&col.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readFully(i,i).inputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readFully(i,i.inputStream());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=i.next())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.hasNext()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446Integeri=coll.readIntValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()||coll.nextElement()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully(i))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully()))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully())8)!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch==i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch!=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>0&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<coll.toString())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<coll.size())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.charAt(len-read)!=''){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.startsWith("-")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.isEmpty()&&coll.endsWith("-")){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch<=col.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IOUtils.readFully(i,coll-len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.length()>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&coll.size()!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&coll.isEOF()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446hilst((ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.hasMore()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.read()<-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null||(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.getCurrent()!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.toString(CharsetNames.UTF_8)!=null){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.equals(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()&&coll.toString(CharsetNames.UTF_8)!=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isDirectory()||coll.isDirectory()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<0)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream(i.read());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=newByteArrayOutputStream(in.read());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch==IOUtils.readFully(i,len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch=IOUtils.readFully(i,len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)||coll.equals(Feature.QUOTE_FIELD_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES||coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>0||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len<0||coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(Len>0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.getCurrentToken())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.getLength())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=2&&coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<coll.size())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len.isEmpty()&&coll.length()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0||coll.length()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()<len&&(ch=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(len);coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446IntegerArrayOutputStreamcoll=newIntegerArrayOutputStream();coll.write(ch);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whilst(i!=null&&(ch<=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446if(coll!=null){ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446if(coll!=null){coll=newByteArrayOutputStream();coll.close();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=SMALL_BUFFER_SIZE&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(coll.hasNext()&&coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(CharsetNames.UTF_8)||coll.toString(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whil((ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i>=null&&(ch=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()*coll.charAt(i.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(ch);coll.write(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream();coll.write(0,len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(0);coll.write(len);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.getCurrentToken()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()&&coll.charAt(i.getLength()-1)!='/'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446ByteArrayOutputStreamcoll=newByteArrayOutputStream(Long.MAX_VALUE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreElements()&&coll.isEmpty()||coll.isEnabled(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,p);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446parsePaxHeaders(i,coll,c);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i.in())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasMoreTokens()||coll.nextToken()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.charAt(i.getKey())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.charAt(ch.next())!='-'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext().equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasNext()&&coll.next().equals(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().equals(CH)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.next().endsWith(ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<SMALL_BUFFER_SIZE)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(i.read()<ch)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446whil((ch=i.read())>=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len<=0&&coll.isEmpty()){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(c=coll.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()>0&&coll.next().length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()*coll.next().length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446InputStreamcoll=IOUtils.readFully(i,i).readInputStream();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.charAt(i.next())=='n'){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()&&coll.charAt(len-read)!=''){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!i.hasMoreElements()||coll.size()>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len>=0&&coll.length>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&coll.size>0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.isEmpty()&&coll.equals(CharacterEncodingNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((i=i.get())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(c=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<=IOUtils.readFully(i,coll))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch>=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&(ch<=IOUtils.readFully(i))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446While((ch=i.read())==-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE)||coll.toString(CharsetNames.UTF_8)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.hasNext()&&coll.isEnabled(Feature.AUTO_CLOSE_SOURCE||coll.toString(CharsetNames.UTF_8))){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(len!=0&&(i=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i==null&&(len=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(height=i.read())!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i.available()>-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(i,coll.read())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=coll.readFully(len,i.readRead())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=IOUtils.readFully(len,coll.toString(CharsetNames.UTF_8))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=IOUtils.readFully(len))!=-1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(i!=null&&(ch=IOUtils.readFully(len,coll.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while(!hasHitEOF&&coll.size()==0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=i.readFully(len,coll.length())!=-1)){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java446while((ch=IOUtils.readFully(len,coll.length()-1)!=-1)){
