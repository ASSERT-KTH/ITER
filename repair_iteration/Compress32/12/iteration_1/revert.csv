projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558returngetNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558returngetNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getNextValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?currEntry:getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558returngetNextArchiveEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)currEntry.clone();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getParent();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getStart();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getRaw();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558returncurrEntry.getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextEntry():currEntry;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?this.currEntry:getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextEntry():getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?nextEntry:getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?currEntry:getNextTarEntry().getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry!=null)?currEntry:getNextTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)this.currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(ArchiveEntry)this.currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558if(currEntry==null){returncurrEntry.getNextEntry();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)this.currEntry.clone();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)this.currEntry.getKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)currEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(ArchiveEntry)currEntry.clone();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)currEntry.getKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)super.getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558returngetNextEntry().getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry!=null)?null:currEntry.getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getFirstChild();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextTarEntry().getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextFileEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextRecordEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextPathEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getParent();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.next;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getRecordSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(ArchiveEntry)currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)currEntry.getValue()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getNextKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getLastChild();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getNextName();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getNextPathEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)entry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)super.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getFirstEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getMethod();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry!=null)?null:currEntry.getNextValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558returncurrEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry!=null)?null:currEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getSource();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextEntry():currEntry.getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:newArchiveEntry(getNextTarEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextTarEntry().getKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():currEntry.getRawParent();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)record.clone();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getTarEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)record.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(TarArchiveEntry)this.currEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextArchiveEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:getNextInternalEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getRawParent();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?currEntry:getNextArchiveEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?getNextTarEntry():getNextPathEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getMethod();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java558return(currEntry==null)?null:currEntry.getPath();
