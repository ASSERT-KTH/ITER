bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextPathEntry().getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextPathEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextPathEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
2	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextPath();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextPath();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextPath();	  return(currEntry    ==    null)?    null    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
3	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextPathEntry().getKey();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextPathEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextPathEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
4	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getValue();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getKey();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getName();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getName();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getParent();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getParent();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.next;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.next;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.next;	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.cloneTar();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.cloneTar();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.cloneTar();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextEntry().getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextEntry());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextEntry());	  return(currEntry    ==    null)?    null    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
12	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextEntry().getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
13	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  getNextEntry();	  return(currEntry    ==    null)?    null    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
14	[BUG]  [BUGGY]  return(ArchiveEntry)this.currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)this.currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)this.currEntry.getNext();	  return(TarArchiveEntry)this.currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
15	[BUG]  [BUGGY]  return(TarArchiveEntry)this.currEntry.getNextBytes();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.currEntry.getNextBytes();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.currEntry.getNextBytes();	  return(TarArchiveEntry)this.currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
16	[BUG]  [BUGGY]  return(currEntry  ==  null)?  currEntry  :  getNextTarEntry().getKey();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  currEntry  :  getNextTarEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  currEntry  :  getNextTarEntry().getKey();	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry().getValue();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry().getValue();	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextTarEntry().getValue();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextTarEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.currEntry  :  getNextTarEntry().getValue();	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getKey()  :  getNextEntry().getValue();  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getKey()  :  getNextEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry().getKey()  :  getNextEntry().getValue();	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getValue()  :  null;  [CE]  illegal  start  of  type  [FE]                                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getValue()  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry().getValue()  :  null;	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  return(TarArchiveEntry)entry.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)entry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)entry.getKey();	  return(TarArchiveEntry)entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
22	[BUG]  [BUGGY]  return(TarArchiveEntry)entry.clone();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)entry.clone();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)entry.clone();	  return(TarArchiveEntry)entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
23	[BUG]  [BUGGY]  return(TarArchiveEntry)entry.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)entry.getValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)entry.getValue()  +  1;	  return(TarArchiveEntry)entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
24	[BUG]  [BUGGY]  return(ArchiveEntry)entry.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)entry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)entry.getValue();	  return(TarArchiveEntry)entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
25	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.next;  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.next;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.next;	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.next;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
26	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLastChild();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLastChild();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLastChild();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.next;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
27	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getString();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getString();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getString();	  return(currEntry    ==    null)?    null    :    currEntry.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
28	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLocalFile();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLocalFile();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getLocalFile();	  return(currEntry    ==    null)?    null    :    currEntry.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
29	[BUG]  [BUGGY]  return  this.currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  this.currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  this.currEntry.getNextEntry();	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  return  currEntry  ==  null?  null  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry  ==  null?  null  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry  ==  null?  null  :  currEntry.getNextEntry();	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  return  currEntry!=  null?  null  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  null  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  null  :  currEntry.getNextEntry();	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  return  currEntry.getNextEntry(null);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry.getNextEntry(null);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry.getNextEntry(null);	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  return  getNextEntry().getKey();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  getNextEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  getNextEntry().getKey();	  return    getNextEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
34	[BUG]  [BUGGY]  return  this.currEntry.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  this.currEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  this.currEntry.getValue();	  return    getNextEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
35	[BUG]  [BUGGY]  return  getNextEntry().getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  getNextEntry().getValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  getNextEntry().getValue()  +  1;	  return    getNextEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
36	[BUG]  [BUGGY]  return  currEntry.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry.getValue();	  return    getNextEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  return  getNextEntry().getRawValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  getNextEntry().getRawValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  getNextEntry().getRawValue();	  return    getNextEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  return  getNextEntry().getValue()  -  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  getNextEntry().getValue()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  getNextEntry().getValue()  -  1;	  return    getNextEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextRecordEntry().getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextRecordEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextRecordEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
40	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextRecordEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextRecordEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextRecordEntry();	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
41	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextRecordEntry());  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextRecordEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextRecordEntry());	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
42	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  getNextRecordEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  getNextRecordEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  getNextRecordEntry();	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
43	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextCurrentEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextCurrentEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextCurrentEntry();	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
44	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextRecordEntry().getKey();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextRecordEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextRecordEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
45	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  currEntry.getValue();	  return(currEntry!=    null)?    null    :    currEntry.getNextValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
46	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  getNextEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  getNextEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.getNextTarEntry()  :  getNextEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextValue()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextValue()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextValue()  :  getNextEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextValue();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  getNextValue();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRecord();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRecord();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getRecord();	  return(currEntry    ==    null)?    null    :    currEntry.getSource();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
52	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getSize();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getSize();	  return(currEntry    ==    null)?    null    :    currEntry.getSource();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
53	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getAstRoot();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getAstRoot();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getAstRoot();	  return(currEntry    ==    null)?    null    :    currEntry.getSource();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
54	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextTarEntry().getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextTarEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  null  :  getNextTarEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
55	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getRawValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getRawValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextTarEntry().getRawValue();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
56	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  getNextTarEntry().getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  getNextTarEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  getNextTarEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
57	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextTarEntry().getValue()  +  1;	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
58	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextArchiveEntry();	  return(currEntry    ==    null)?    null    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
59	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  null  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    null    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
60	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextArchiveEntry().getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextArchiveEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextArchiveEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
61	[BUG]  [BUGGY]  return(TarArchiveEntry)this.record.clone();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.record.clone();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.record.clone();	  return(TarArchiveEntry)record.clone();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
62	[BUG]  [BUGGY]  return(ArchiveEntry)record.clone();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)record.clone();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)record.clone();	  return(TarArchiveEntry)record.clone();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
63	[BUG]  [BUGGY]  return(TarArchiveEntry)record.getNext();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)record.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)record.getNext();	  return(TarArchiveEntry)record.clone();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
64	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLastPath();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLastPath();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getLastPath();	  return(currEntry    ==    null)?    null    :    currEntry.getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
65	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawClass();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawClass();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawClass();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getMethod();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
66	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getMethod();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getMethod();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getMethod();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getMethod();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
67	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLastEntry();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLastEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getLastEntry();	  return(currEntry    ==    null)?    null    :    currEntry.getFirstEntry();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
68	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getStartEntry();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getStartEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getStartEntry();	  return(currEntry    ==    null)?    null    :    currEntry.getFirstEntry();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
69	[BUG]  [BUGGY]  return(TarArchiveEntry)this.super.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.super.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.super.getValue();	  return(TarArchiveEntry)super.getValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
70	[BUG]  [BUGGY]  return(ArchiveEntry)super.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)super.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)super.getValue();	  return(TarArchiveEntry)super.getValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
71	[BUG]  [BUGGY]  return(TarArchiveEntry)super.getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)super.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)super.getKey();	  return(TarArchiveEntry)super.getValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
72	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getValue();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
73	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.getValue();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
74	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawValue();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
75	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getKey();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getKey();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
76	[BUG]  [BUGGY]  return  this.currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  this.currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  this.currEntry.getNext();	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
77	[BUG]  [BUGGY]  return  currEntry  ==  null?  null  :  currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry  ==  null?  null  :  currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry  ==  null?  null  :  currEntry.getNext();	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
78	[BUG]  [BUGGY]  return  currEntry!=  null?  null  :  currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  null  :  currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  null  :  currEntry.getNext();	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
79	[BUG]  [BUGGY]  return  currEntry  ==  null?  null  :  currEntry.getParent();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry  ==  null?  null  :  currEntry.getParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry  ==  null?  null  :  currEntry.getParent();	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
80	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawEntry();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getRawEntry();	  return(currEntry    ==    null)?    null    :    currEntry.getTarEntry();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
81	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawKey();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
82	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getPassword();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getPassword();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getPassword();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
83	[BUG]  [BUGGY]  return(TarArchiveEntry)currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)currEntry.getNextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
84	[BUG]  [BUGGY]  return(TarArchiveEntry)this.currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.currEntry.getNextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
85	[BUG]  [BUGGY]  return(ArchiveEntry)super.getNextEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)super.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)super.getNextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
86	[BUG]  [BUGGY]  return(TarArchiveEntry)getNextEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)getNextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
87	[BUG]  [BUGGY]  return(TarArchiveEntry)this.super.getNextEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.super.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.super.getNextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
88	[BUG]  [BUGGY]  return(ArchiveEntry)currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)currEntry.getNextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
89	[BUG]  [BUGGY]  return(nextEntry  ==  null)?  currEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(nextEntry  ==  null)?  currEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(nextEntry  ==  null)?  currEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    nextEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
90	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.nextEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.nextEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.nextEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    nextEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  return(currEntry  ==  null)?  nextEntry  :  getNextTarEntry().getValue();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  nextEntry  :  getNextTarEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  nextEntry  :  getNextTarEntry().getValue();	  return(currEntry    ==    null)?    nextEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
92	[BUG]  [BUGGY]  return(ArchiveEntry)currEntry.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)currEntry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)currEntry.getKey();	  return(ArchiveEntry)currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
93	[BUG]  [BUGGY]  return(ArchiveEntry)currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)currEntry.getNext();	  return(ArchiveEntry)currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
94	[BUG]  [BUGGY]  return(ArchiveEntry)currEntry.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)currEntry.getValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)currEntry.getValue()  +  1;	  return(ArchiveEntry)currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
95	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLocalName();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLocalName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLocalName();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getName();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
96	[BUG]  [BUGGY]  return(TarArchiveEntry)this.currEntry.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.currEntry.getValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.currEntry.getValue()  +  1;	  return(TarArchiveEntry)this.currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
97	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextEntry()  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextEntry()  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextEntry()  :  getNextTarEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
98	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextTarEntry().getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextTarEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  getNextTarEntry().getValue();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
99	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextRecordEntry();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextRecordEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  getNextRecordEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
100	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextFileEntry();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextFileEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  getNextFileEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
101	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextPathEntry();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextPathEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  getNextPathEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
102	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  getNextTarEntry().getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  getNextTarEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  getNextTarEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getKey();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
103	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getRawKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getRawKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextTarEntry().getRawKey();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getKey();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
104	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextTarEntry().getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextTarEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  null  :  getNextTarEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getKey();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
105	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getEnd();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getEnd();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getEnd();	  return(currEntry    ==    null)?    null    :    currEntry.getStart();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
106	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getStart()  +  1;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getStart()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getStart()  +  1;	  return(currEntry    ==    null)?    null    :    currEntry.getStart();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
107	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  currEntry.getKey();	  return(currEntry    ==    null)?    null    :    currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
108	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawKey();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getRawKey();	  return(currEntry    ==    null)?    null    :    currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
109	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getPassword();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getPassword();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getPassword();	  return(currEntry    ==    null)?    null    :    currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  return(ArchiveEntry)this.currEntry.clone();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)this.currEntry.clone();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)this.currEntry.clone();	  return(ArchiveEntry)currEntry.clone();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
111	[BUG]  [BUGGY]  return(ArchiveEntry)entry.clone();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)entry.clone();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)entry.clone();	  return(ArchiveEntry)currEntry.clone();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
112	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
113	[BUG]  [BUGGY]  return(currEntry  ==  null)?  currEntry  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  currEntry  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  currEntry  :  getNextEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
114	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.currEntry  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
115	[BUG]  [BUGGY]  return(currEntry  ==  null)?  nextEntry  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  nextEntry  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  nextEntry  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
116	[BUG]  [BUGGY]  return(currEntry  ==  null)?  currEntry  :  getNextRecordEntry();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  currEntry  :  getNextRecordEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  currEntry  :  getNextRecordEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
117	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFileEntry().getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFileEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextFileEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextFileEntry();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
118	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextFileEntry();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextFileEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextFileEntry();	  return(currEntry    ==    null)?    null    :    getNextFileEntry();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
119	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFileEntry().getKey();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFileEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextFileEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextFileEntry();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
120	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFiles();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFiles();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextFiles();	  return(currEntry    ==    null)?    null    :    getNextFileEntry();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextInternalEntry().getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextInternalEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextInternalEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
122	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextInternalEntry();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextInternalEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextInternalEntry();	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
123	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  getNextInternalEntry();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  getNextInternalEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  getNextInternalEntry();	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
124	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextInternalEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  null  :  getNextInternalEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  null  :  getNextInternalEntry();	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
125	[BUG]  [BUGGY]  if(currEntry!=  null)  {  return  currEntry.getNextEntry();  }  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  if(currEntry!=  null)  {  return  currEntry.getNextEntry();  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	if(currEntry!=  null)  {  return  currEntry.getNextEntry();  }	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
126	[BUG]  [BUGGY]  this.currEntry  =  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  this.currEntry  =  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	this.currEntry  =  currEntry.getNextEntry();	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
127	[BUG]  [BUGGY]  final  TarArchiveEntry  currEntry  =  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  final  TarArchiveEntry  currEntry  =  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	final  TarArchiveEntry  currEntry  =  currEntry.getNextEntry();	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
128	[BUG]  [BUGGY]  while(currEntry!=  null)  {  currEntry.setNextEntry(null);  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  while(currEntry!=  null)  {  currEntry.setNextEntry(null);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	while(currEntry!=  null)  {  currEntry.setNextEntry(null);	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
129	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getValue());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getValue());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getValue());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
130	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getKey());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getKey());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getKey());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
131	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNewTarEntry());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNewTarEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNewTarEntry());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
132	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextName());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextName());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextName());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
133	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextRecord());  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextRecord());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextRecord());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
134	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextSize());  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextSize());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextSize());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
135	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNextEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getParent();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
136	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawClass();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawClass();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getRawClass();	  return(currEntry    ==    null)?    null    :    currEntry.getMethod();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
137	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getMethod();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getMethod();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  currEntry.getMethod();	  return(currEntry    ==    null)?    null    :    currEntry.getMethod();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
138	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getRawParent();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getRawParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getRawParent();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRawParent();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
139	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLastParent();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLastParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLastParent();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRawParent();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
140	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getRawValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getRawValue();	  return(currEntry    ==    null)?    null    :    currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
141	[BUG]  [BUGGY]  return(TarArchiveEntry)record.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)record.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)record.getKey();	  return(TarArchiveEntry)record.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
142	[BUG]  [BUGGY]  return(TarArchiveEntry)this.record.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.record.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.record.getValue();	  return(TarArchiveEntry)record.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
143	[BUG]  [BUGGY]  return(ArchiveEntry)record.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)record.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)record.getValue();	  return(TarArchiveEntry)record.getValue();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
144	[BUG]  [BUGGY]  return(TarArchiveEntry)currEntry.getKey()  +  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)currEntry.getKey()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)currEntry.getKey()  +  1;	  return(TarArchiveEntry)currEntry.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
145	[BUG]  [BUGGY]  return(TarArchiveEntry)currEntry.getValue()  /  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)currEntry.getValue()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)currEntry.getValue()  /  1;	  return(TarArchiveEntry)currEntry.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
146	[BUG]  [BUGGY]  return(TarArchiveEntry)currEntry.getValue()  *  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)currEntry.getValue()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)currEntry.getValue()  *  1;	  return(TarArchiveEntry)currEntry.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
147	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  currEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  currEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  currEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
148	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  this.currEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  this.currEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  this.currEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
149	[BUG]  [BUGGY]  return(this.currEntry!=  null)?  currEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry!=  null)?  currEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry!=  null)?  currEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
150	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.currEntry  :  getNextEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
151	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextPathEntry();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextPathEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.currEntry  :  getNextPathEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
152	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextPosition();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.currEntry  :  getNextPosition();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.currEntry  :  getNextPosition();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
153	[BUG]  [BUGGY]  return(ArchiveEntry)this.currEntry.getKey();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)this.currEntry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)this.currEntry.getKey();	  return(TarArchiveEntry)this.currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
154	[BUG]  [BUGGY]  return(ArchiveEntry)this.currEntry.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)this.currEntry.getValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)this.currEntry.getValue()  +  1;	  return(ArchiveEntry)this.currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
155	[BUG]  [BUGGY]  return(ArchiveEntry)this.urlEntry.getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)this.urlEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)this.urlEntry.getValue();	  return(ArchiveEntry)this.currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
156	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getStartChild();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getStartChild();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getStartChild();	  return(currEntry    ==    null)?    null    :    currEntry.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
157	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLocalName();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getLocalName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getLocalName();	  return(currEntry    ==    null)?    null    :    currEntry.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
158	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextEntry()  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextEntry()  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextEntry()  :  currEntry.getNextEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
159	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getRawEntry();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getRawEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getRawEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
160	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getLastEntry();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getLastEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getLastEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
161	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawSize();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawSize();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getSize();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
162	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLength();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLength();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getLength();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getSize();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
163	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRowSize();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRowSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRowSize();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
164	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawOffset();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawOffset();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawOffset();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
165	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextPathEntry()  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextPathEntry()  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextPathEntry()  :  getNextTarEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
166	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextPathEntry()  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextPathEntry()  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextPathEntry()  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
167	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextFile()  :  getNextPathEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextFile()  :  getNextPathEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextFile()  :  getNextPathEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
168	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextFileEntry();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextFileEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  getNextFileEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
169	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextRecordEntry();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextRecordEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  getNextRecordEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
170	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextPathEntry()  :  getNextRecordEntry();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextPathEntry()  :  getNextRecordEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextPathEntry()  :  getNextRecordEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
171	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getNextKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getNextKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  currEntry.getNextKey();	  return(currEntry    ==    null)?    null    :    currEntry.getNextKey();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
172	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextSize();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextSize();	  return(currEntry    ==    null)?    null    :    currEntry.getNextKey();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
173	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getSimpleName();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getSimpleName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getSimpleName();	  return(currEntry    ==    null)?    null    :    currEntry.getName();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
174	[BUG]  [BUGGY]  return(currEntry  ==  null)?  firstEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  firstEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  firstEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    nextEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
175	[BUG]  [BUGGY]  return(currEntry  ==  null)?  lastEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  lastEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  lastEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    nextEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
176	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextFileEntry());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextFileEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextFileEntry());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
177	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getParent());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getParent());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getParent());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
178	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  new  ArchiveEntry(getNextTarEntry());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  new  ArchiveEntry(getNextTarEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  new  ArchiveEntry(getNextTarEntry());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
179	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getMethod();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getMethod();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getMethod();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
180	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawMethod();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawMethod();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRawMethod();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getMethod();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
181	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextParent();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextParent();	  return(currEntry    ==    null)?    null    :    currEntry.getRawParent();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
182	[BUG]  [BUGGY]  return  currEntry!=  null?  getNextEntry()  :  currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  getNextEntry()  :  currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  getNextEntry()  :  currEntry.getNext();	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
183	[BUG]  [BUGGY]  return  currEntry  ==  null?  getNextEntry()  :  currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry  ==  null?  getNextEntry()  :  currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry  ==  null?  getNextEntry()  :  currEntry.getNext();	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
184	[BUG]  [BUGGY]  return  currEntry  >=  null?  null  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry  >=  null?  null  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry  >=  null?  null  :  currEntry.getNextEntry();	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
185	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextValueEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextValueEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextValueEntry();	  return(currEntry    ==    null)?    null    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
186	[BUG]  [BUGGY]  return(TarArchiveEntry)this.entry.clone();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.entry.clone();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.entry.clone();	  return(TarArchiveEntry)this.currEntry.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
187	[BUG]  [BUGGY]  return(TarArchiveEntry)this.nextEntry.clone();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.nextEntry.clone();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.nextEntry.clone();	  return(TarArchiveEntry)this.currEntry.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
188	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getParent();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  currEntry.getParent();	  return(currEntry!=    null)?    null    :    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
189	[BUG]  [BUGGY]  return(TarArchiveEntry)entry.getNext();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)entry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)entry.getNext();	  return(TarArchiveEntry)currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
190	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getAbsolutePath();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getAbsolutePath();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getAbsolutePath();	  return(currEntry    ==    null)?    null    :    currEntry.getRaw();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
191	[BUG]  [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getName();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  null  :  currEntry.getName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  null  :  currEntry.getName();	  return(currEntry    ==    null)?    null    :    currEntry.getName();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
192	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextInternalEntry().getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextInternalEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextInternalEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
193	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextInternalEntry());  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextInternalEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextInternalEntry());	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
194	[BUG]  [BUGGY]  return  currEntry.getNextEntry().getValue();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry.getNextEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry.getNextEntry().getValue();	  return    getNextEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
195	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  rawEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  rawEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  rawEntry.getNextEntry();	  return(currEntry    ==    null)?    null    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
196	[BUG]  [BUGGY]  Return(currEntry  ==  null)?  null  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  Return(currEntry  ==  null)?  null  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	Return(currEntry  ==  null)?  null  :  currEntry.getNextEntry();	  return(currEntry!=    null)?    null    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
197	[BUG]  [BUGGY]  returns(currEntry  ==  null)?  null  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  returns(currEntry  ==  null)?  null  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	returns(currEntry  ==  null)?  null  :  currEntry.getNextEntry();	  return(currEntry!=    null)?    null    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
198	[BUG]  [BUGGY]  return  currEntry  ==  null)?  null  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry  ==  null)?  null  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry  ==  null)?  null  :  currEntry.getNextEntry();	  return(currEntry!=    null)?    null    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
199	[BUG]  [BUGGY]  return(currEntry!=  null)?  currEntry  :  getNextTarEntry().getValue();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  currEntry  :  getNextTarEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  currEntry  :  getNextTarEntry().getValue();	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
200	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry().getKey();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry().getKey();	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
201	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNumberOfLinks();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNumberOfLinks();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNumberOfLinks();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRawParent();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
202	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getHeaderSize();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRawParent();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
203	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextName()  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextName()  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextName()  :  getNextTarEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
204	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextFile()  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextFile()  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextFile()  :  getNextTarEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
205	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextTarEntry().getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextTarEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextTarEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getKey();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
206	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNext().getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNext().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNext().getKey();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getKey();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
207	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextTarEntry().getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextTarEntry().getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextTarEntry().getValue();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getKey();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
208	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextFile();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getNextFile();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getNextFile();	  return(currEntry    ==    null)?    null    :    currEntry.getNextName();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
209	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextSizeEntry();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextSizeEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextSizeEntry();	  return(currEntry    ==    null)?    null    :    getNextFileEntry();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
210	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFileEntry().getParent();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextFileEntry().getParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextFileEntry().getParent();	  return(currEntry    ==    null)?    null    :    getNextFileEntry();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
211	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getName();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextTarEntry().getName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextTarEntry().getName();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
212	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getPosition();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getPosition();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getPosition();	  return(currEntry    ==    null)?    null    :    currEntry.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
213	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getAbsolutePath();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getAbsolutePath();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getAbsolutePath();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getName();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
214	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getName();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getName();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getName();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
215	[BUG]  [BUGGY]  return(TarArchiveEntry)this.entry.getKey();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.entry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.entry.getKey();	  return(TarArchiveEntry)this.currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
216	[BUG]  [BUGGY]  return(TarArchiveEntry)this.key.getKey();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.key.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.key.getKey();	  return(TarArchiveEntry)this.currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
217	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  getNextPathEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  getNextPathEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  getNextPathEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
218	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextValueEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextValueEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  getNextValueEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
219	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextUpperPathEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  getNextUpperPathEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  getNextUpperPathEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
220	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextRecordEntry().getParent();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextRecordEntry().getParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextRecordEntry().getParent();	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
221	[BUG]  [BUGGY]  return(TarArchiveEntry)super.getNext();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)super.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)super.getNext();	  return(TarArchiveEntry)super.getValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
222	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRecordLimit();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRecordLimit();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRecordLimit();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
223	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getRecordSize();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getRecordSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getRecordSize();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
224	[BUG]  [BUGGY]  return(TarArchiveEntry)currEntry.getNextValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)currEntry.getNextValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)currEntry.getNextValue();	  return(TarArchiveEntry)currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
225	[BUG]  [BUGGY]  return(TarArchiveEntry)this.entry.getNext();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.entry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.entry.getNext();	  return(TarArchiveEntry)this.currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
226	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextArchiveEntry()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextArchiveEntry()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextArchiveEntry()  :  getNextEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
227	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  getNextTarEntry()  :  getNextEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
228	[BUG]  [BUGGY]  return(this.currEntry!=  null)?  this.currEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry!=  null)?  this.currEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry!=  null)?  this.currEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
229	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  nextEntry  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  nextEntry  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  nextEntry  :  getNextTarEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
230	[BUG]  [BUGGY]  return(ArchiveEntry)this.entry.getValue();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(ArchiveEntry)this.entry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(ArchiveEntry)this.entry.getValue();	  return(ArchiveEntry)this.currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
231	[BUG]  [BUGGY]  return(TarArchiveEntry)this.entry.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.entry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.entry.getValue();	  return(TarArchiveEntry)this.currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
232	[BUG]  [BUGGY]  return(TarArchiveEntry)this.nextEntry.getValue();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.nextEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.nextEntry.getValue();	  return(TarArchiveEntry)this.currEntry.getValue();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
233	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getFirstEntry();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getFirstEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getFirstEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
234	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextArchiveEntry().getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextArchiveEntry().getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextArchiveEntry().getKey();	  return(currEntry    ==    null)?    null    :    getNextTarEntry().getKey();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
235	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getData();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getData();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getData();	  return(currEntry    ==    null)?    null    :    currEntry.getSource();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
236	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getValue()  :  currEntry.getValue();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getValue()  :  currEntry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry().getValue()  :  currEntry.getValue();	  return(currEntry    ==    null)?    currEntry    :    getNextTarEntry().getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
237	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getHeaderSize();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getHeaderSize();	  return(currEntry    ==    null)?    null    :    currEntry.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
238	[BUG]  [BUGGY]  Return(currEntry  ==  null)?  null  :  currEntry.getNextValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  Return(currEntry  ==  null)?  null  :  currEntry.getNextValue();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	Return(currEntry  ==  null)?  null  :  currEntry.getNextValue();	  return(currEntry!=    null)?    null    :    currEntry.getNextValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
239	[BUG]  [BUGGY]  return  currEntry!=  null?  currEntry.getNextEntry()  :  null;  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  currEntry.getNextEntry()  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  currEntry.getNextEntry()  :  null;	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
240	[BUG]  [BUGGY]  return  currEntry!=  null?  currEntry.getNextEntry()  :  new  TarArchiveEntry(currEntry.getValue());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  currEntry.getNextEntry()  :  new  TarArchiveEntry(currEntry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  currEntry.getNextEntry()  :  new  TarArchiveEntry(currEntry.getValue());	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
241	[BUG]  [BUGGY]  return  currEntry!=  null?  currEntry.getNextEntry()  :  new  TarArchiveEntry(currEntry.getKey());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  currEntry.getNextEntry()  :  new  TarArchiveEntry(currEntry.getKey());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  currEntry.getNextEntry()  :  new  TarArchiveEntry(currEntry.getKey());	  return    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
242	[BUG]  [BUGGY]  return(currEntry  ==  null)?  new  TarArchiveEntry(nextEntry):  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  new  TarArchiveEntry(nextEntry):  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  new  TarArchiveEntry(nextEntry):  getNextTarEntry();	  return(currEntry    ==    null)?    nextEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
243	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNext();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNext();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getNext();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getParent();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
244	[BUG]  [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getParent();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getParent();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry!=  null)?  getNextTarEntry()  :  currEntry.getParent();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getParent();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
245	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getSize();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getSize();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextEntry()  :  currEntry.getSize();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
246	[BUG]  [BUGGY]  return(currEntry  ==  null)?  new  ArchiveEntry()  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  new  ArchiveEntry()  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  new  ArchiveEntry()  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
247	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    currEntry    :    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
248	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.getKey();	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getKey();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
249	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.getNextEntry()  :  currEntry.getNextEntry();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.getNextEntry()  :  currEntry.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.getNextEntry()  :  currEntry.getNextEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    currEntry.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
250	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextPadding();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextPadding();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextPadding();	  return(currEntry    ==    null)?    null    :    getNextRecordEntry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
251	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  TarArchiveEntry(getNextEntry());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  TarArchiveEntry(getNextEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  TarArchiveEntry(getNextEntry());	  return(currEntry    ==    null)?    null    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
252	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  TarArchiveEntry(getNextInternalEntry());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  TarArchiveEntry(getNextInternalEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  TarArchiveEntry(getNextInternalEntry());	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
253	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  getNextInternalEntry().getName();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  getNextInternalEntry().getName();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  getNextInternalEntry().getName();	  return(currEntry    ==    null)?    null    :    getNextInternalEntry();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
254	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getValuePath();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getValuePath();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getValuePath();	  return(currEntry    ==    null)?    null    :    currEntry.getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
255	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getNextEntry()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry().getNextEntry()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry().getNextEntry()  :  getNextEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
256	[BUG]  [BUGGY]  return(currEntry  ==  null)?  currEntry.getNextTarEntry()  :  getNextEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  currEntry.getNextTarEntry()  :  getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  currEntry.getNextTarEntry()  :  getNextEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
257	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.getNextEntry()  :  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.getNextEntry()  :  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.getNextEntry()  :  getNextTarEntry();	  return(currEntry    ==    null)?    getNextEntry()    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
258	[BUG]  [BUGGY]  return(TarArchiveEntry)record.get();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)record.get();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)record.get();	  return(TarArchiveEntry)record.clone();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
259	[BUG]  [BUGGY]  return(this.currEntry  ==  null)?  this.currEntry  :  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(this.currEntry  ==  null)?  this.currEntry  :  getNextArchiveEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(this.currEntry  ==  null)?  this.currEntry  :  getNextArchiveEntry();	  return(currEntry    ==    null)?    this.currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
260	[BUG]  [BUGGY]  return(TarArchiveEntry)this.currEntry.getData();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)this.currEntry.getData();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)this.currEntry.getData();	  return(TarArchiveEntry)this.currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
261	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getAstRootEntry();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  currEntry.getAstRootEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  currEntry.getAstRootEntry();	  return(currEntry    ==    null)?    null    :    currEntry.getFirstEntry();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
262	[BUG]  [BUGGY]  return(currEntry  ==  null)?  new  TarArchiveEntry(currEntry):  getNextTarEntry();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  new  TarArchiveEntry(currEntry):  getNextTarEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  new  TarArchiveEntry(currEntry):  getNextTarEntry();	  return(currEntry!=    null)?    currEntry    :    getNextTarEntry();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
263	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.next;  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.next;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.getNextTarEntry()  :  currEntry.next;	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.next;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
264	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getName());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getName());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry().getName());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
265	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(this,  getNextTarEntry());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(this,  getNextTarEntry());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(this,  getNextTarEntry());	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
266	[BUG]  [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry(),  currEntry);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry(),  currEntry);  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  null  :  new  ArchiveEntry(getNextTarEntry(),  currEntry);	  return(currEntry    ==    null)?    null    :    new    ArchiveEntry(getNextTarEntry());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
267	[BUG]  [BUGGY]  if(currEntry  ==  null  ||  currEntry.getNextEntry()!=  null)  {  return  currEntry.getNextEntry();  }  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  if(currEntry  ==  null  ||  currEntry.getNextEntry()!=  null)  {  return  currEntry.getNextEntry();  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	if(currEntry  ==  null  ||  currEntry.getNextEntry()!=  null)  {  return  currEntry.getNextEntry();  }	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
268	[BUG]  [BUGGY]  if(currEntry  ==  null  ||  currEntry.isNextEntry())  {  return  currEntry.getNextEntry();  }  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  if(currEntry  ==  null  ||  currEntry.isNextEntry())  {  return  currEntry.getNextEntry();  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	if(currEntry  ==  null  ||  currEntry.isNextEntry())  {  return  currEntry.getNextEntry();  }	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
269	[BUG]  [BUGGY]  if(currEntry  ==  null  ||  currEntry.getNextEntry()  ==  null)  {  return  currEntry.getNextEntry();  }  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  if(currEntry  ==  null  ||  currEntry.getNextEntry()  ==  null)  {  return  currEntry.getNextEntry();  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	if(currEntry  ==  null  ||  currEntry.getNextEntry()  ==  null)  {  return  currEntry.getNextEntry();  }	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
270	[BUG]  [BUGGY]  if(currEntry  ==  null  ||  currEntry.isArchive())  {  return  currEntry.getNextEntry();  }  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  if(currEntry  ==  null  ||  currEntry.isArchive())  {  return  currEntry.getNextEntry();  }  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	if(currEntry  ==  null  ||  currEntry.isArchive())  {  return  currEntry.getNextEntry();  }	  if(currEntry    ==    null)    {    return    currEntry.getNextEntry();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
271	[BUG]  [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  getNextPathEntry();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  this.getNextTarEntry()  :  getNextPathEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  this.getNextTarEntry()  :  getNextPathEntry();	  return(currEntry    ==    null)?    getNextTarEntry()    :    getNextPathEntry();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
272	[BUG]  [BUGGY]  return  currEntry!=  null?  currEntry.getNext()  :  null;  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  currEntry.getNext()  :  null;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  currEntry.getNext()  :  null;	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
273	[BUG]  [BUGGY]  return  currEntry!=  null?  currEntry.getNext()  :  new  TarArchiveEntry(currEntry.getValue());  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  currEntry.getNext()  :  new  TarArchiveEntry(currEntry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  currEntry.getNext()  :  new  TarArchiveEntry(currEntry.getValue());	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
274	[BUG]  [BUGGY]  return  currEntry!=  null?  currEntry.getNext()  :  new  ArchiveEntry(currEntry.getValue());  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return  currEntry!=  null?  currEntry.getNext()  :  new  ArchiveEntry(currEntry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return  currEntry!=  null?  currEntry.getNext()  :  new  ArchiveEntry(currEntry.getValue());	  return    currEntry.getNext();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
275	[BUG]  [BUGGY]  return(TarArchiveEntry)record.getNextEntry();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)record.getNextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)record.getNextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
276	[BUG]  [BUGGY]  return(TarArchiveEntry)currEntry.nextEntry();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(TarArchiveEntry)currEntry.nextEntry();  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(TarArchiveEntry)currEntry.nextEntry();	  return(TarArchiveEntry)super.getNextEntry();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
277	[BUG]  [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRecordSize()  +  1;  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]      public  ArchiveEntry  getNextEntry()  throws  IOException  {      [BUGGY]  return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRecordSize()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveInputStream  [METHOD]  getNextEntry  [RETURN_TYPE]  ArchiveEntry  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.5	558	558	1	replace	return(currEntry  ==  null)?  getNextTarEntry()  :  currEntry.getRecordSize()  +  1;	  return(currEntry    ==    null)?    getNextTarEntry()    :    currEntry.getRecordSize();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
