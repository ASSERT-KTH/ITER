bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "_ ";  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "_ ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "_ ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF ";  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ": ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ": ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ": ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".null ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ".null ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".null ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/ ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "/ ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/ ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "' ";  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "' ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "' ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getShortValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getShortValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getShortValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getLongValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getLongValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getLongValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()!=  null)?  null  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  null  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()!=  null)?  null  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  null  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  null  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()  ==  null)?  null  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  String  key  =(ent.getKey()  >=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  >=  null)?  null  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  >=  null)?  null  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue());  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue());  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",( "+entry.getValue());	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ";  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ";	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue());  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue());  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".( "+entry.getValue());	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ");  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ");  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ");  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ");  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getValue()  + ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getValue();	  String    key    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  String  key  =  ent.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getValue()  +  1;  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getValue()  +  1;	  String    key    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : "null ";  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : "null ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : "null ";	  String    key    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ".: "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",: "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",   "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  value: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",  value: "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  value: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  val: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",  val: "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  val: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getValue();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  entry.getValue();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator().next();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getValue();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey());  [CE]  illegal  start  of  type  [FE]                              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey());  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",= "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",= "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",= "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".= "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ".= "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".= "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",== "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",== "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",== "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "= ".equals(ent.getValue());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "= ".equals(ent.getValue());  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "= ".equals(ent.getValue());	  String    key    =    ent.getKey()    +   "=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey());  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey());  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getKey());	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  String  key  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getValue();	  String    key    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ".   "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]              NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "=' "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "=' "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "=' "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "== "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "== "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "== "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent);  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent);  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.getValue();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.entrySet().iterator();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "null ";  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "null ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "null ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "$ ";  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "$ ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "$ ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF: "  +  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ": "  +  ent.getKey();  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ": "  +  ent.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ": "  +  ent.getKey();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toString();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toString();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",   "+entry.getValue());  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",   "+entry.getValue());  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",   "+entry.getValue());	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue());  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue());  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  entry.getKey()  + "( "+entry.getValue());	  String    key    =    ent.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF: ";  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF: ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF: ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/. ";  [CE]  illegal  start  of  type  [FE]            NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =  ent.getKey()  + "/. ";  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/. ";	  String    key    =    ent.getKey()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getKey();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  entry.getKey();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)? "[null] "  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)? "[null] "  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)? "[null] "  :  ent.getValue();	  String    key    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
64	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)? "null "  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]              for  (Entry<String,  String>  ent  :  headers.entrySet()){    [BUGGY]  String  key  =(ent.getKey()  ==  null)? "null "  :  ent.getValue();  [BUGGY]    String  val  =  ent.getValue();  if  (   "path   ".equals(key)){  currEntry.setName(val);  }  else  if  (   "linkpath   ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (   "gid   ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (   "gname   ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (   "uid   ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)? "null "  :  ent.getValue();	  String    key    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
