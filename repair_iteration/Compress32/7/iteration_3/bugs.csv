bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".,  value: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".,  value: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".,  value: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",    val:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
2	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
3	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  +  1;  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  +  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey()  +  1;	  Entry    <    String,    String>    currEntry    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",= ".equals(ent.getValue());  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",= ".equals(ent.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",= ".equals(ent.getValue());	  String    key    =    ent.getKey()    +   "=   ".equals(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
6	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",== ".equals(ent.getValue());  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",== ".equals(ent.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",== ".equals(ent.getValue());	  String    key    =    ent.getKey()    +   "=   ".equals(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
7	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "= ",  val.equals(ent.getValue());  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "= ",  val.equals(ent.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "= ",  val.equals(ent.getValue());	  String    key    =    ent.getKey()    +   "=   ".equals(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
8	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "= ".equals(ent.getKey());  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "= ".equals(ent.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "= ".equals(ent.getKey());	  String    key    =    ent.getKey()    +   "=   ".equals(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
9	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue()  +  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getValue()  +  1;	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
10	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  null  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  null  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
11	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
12	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/ ".trim();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/ ".trim();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/ ".trim();	  String    key    =    ent.getKey()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "./ ";  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "./ ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "./ ";	  String    key    =    ent.getKey()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/ ".equals(key);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/ ".equals(key);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/ ".equals(key);	  String    key    =    ent.getKey()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  String  key  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getKey();	  String    key    =(ent.getKey()!=    null)?    ent.getKey()    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
16	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  null ";  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  null ";	  String    key    =    ent.getKey()    +   ".null   ";    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ". ";  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ". ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ". ";	  String    key    =    ent.getKey()    +   ".null   ";    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/.null ";  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/.null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/.null ";	  String    key    =    ent.getKey()    +   ".null   ";    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".null ".trim();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".null ".trim();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".null ".trim();	  String    key    =    ent.getKey()    +   ".null   ";    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".= ".equals(ent.getValue());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".= ".equals(ent.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".= ".equals(ent.getValue());	  String    key    =    ent.getKey()    +   ".=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
21	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ",  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ",  hasHitEOF);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getValue()  + ",  hasHitEOF);	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
22	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ");  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
23	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ") ";  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ") ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ") ";	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
24	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + "));  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + "));  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",( "+entry.getValue()  + "));	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
25	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ", ");  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ", ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getValue()  + ", ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
26	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  entry.getValue()  +  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  entry.getValue()  +  1;	  Entry    <    String,    String>    currEntry    =    entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
27	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".hasHitEOF: ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".hasHitEOF: ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".hasHitEOF: ";	  String    key    =    ent.getKey()    +   ",    hasHitEOF:   ";    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
28	[BUG]  [BUGGY]  String  key  =(ent.getValue()!=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()!=  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()!=  null)?  null  :  ent.getKey();	  String    key    =(ent.getKey()    >=    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.toString();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.toString();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.toString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
30	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.toString();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.toString();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.toString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
31	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.toString();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.toString();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.toString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
32	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.toString();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.toString();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.toString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
33	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ENT.getKey()  :  ent.toString();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ENT.getKey()  :  ent.toString();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ENT.getKey()  :  ent.toString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
34	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ") ");  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ") ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",( "+entry.getValue()  + ") ");	  String    key    =    ent.getKey()    +   ",(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
35	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".,( "+entry.getValue());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".,( "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".,( "+entry.getValue());	  String    key    =    ent.getKey()    +   ",(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
36	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF ",  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF ",  hasHitEOF;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF ",  hasHitEOF;	  String    key    =    ent.getKey()    +   ",    hasHitEOF   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF, ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF, ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF, ";	  String    key    =    ent.getKey()    +   ",    hasHitEOF   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getString()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getString()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getString()  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
39	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "._ ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "._ ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "._ ";	  String    key    =    ent.getKey()    +   "_   ";    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",_ ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",_ ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",_ ";	  String    key    =    ent.getKey()    +   "_   ";    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  String  key  =  ent.getValue()  + "_ ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getValue()  + "_ ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getValue()  + "_ ";	  String    key    =    ent.getKey()    +   "_   ";    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "_ ".trim();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "_ ".trim();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "_ ".trim();	  String    key    =    ent.getKey()    +   "_   ";    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  : "null ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  : "null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getValue()  : "null ";	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
44	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  : "null ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  : "null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  : "null ";	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
45	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  : "null ";  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  : "null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  ent.getKey()  : "null ";	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
46	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : ",null ";  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : ",null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : ",null ";	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
47	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : ".null ";  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : ".null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getValue()  : ".null ";	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
48	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",' ";  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",' ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",' ";	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".' ";  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".' ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".' ";	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
50	[BUG]  [BUGGY]  String  key  =  ent.getValue()  + "' ";  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getValue()  + "' ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getValue()  + "' ";	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "' ",  val;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "' ",  val;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "' ",  val;	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "' ".trim();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "' ".trim();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "' ".trim();	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  entry.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  entry.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  entry.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    entry.getKey();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
54	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  entry.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  entry.getKey()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  entry.getKey()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    entry.getKey();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
55	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getValue()  :  ent.getValue();	  String    key    =(ent.getValue()!=    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
56	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ") ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ") ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ") ";	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ")   ";    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue()  + ") ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue()  + ") ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  entry.getKey()  + "( "+entry.getValue()  + ") ";	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ")   ";    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
58	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey().iterator().next();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey().iterator().next();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
59	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue().iterator().next();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue().iterator().next();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getValue().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
60	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator().next();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
61	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers().iterator().next();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers().iterator().next();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.headers().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
62	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.size()).iterator().next();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.size()).iterator().next();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.size()).iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
63	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.iterator().next();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.iterator().next();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
64	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  null  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
65	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  null  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  null  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
66	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  null  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
67	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  >=  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  >=  null)?  null  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  >=  null)?  null  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
68	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getValue()  +  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getValue()  +  1;	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
69	[BUG]  [BUGGY]  String  key  =  entry.getKey()  + ",( "+entry.getValue());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  entry.getKey()  + ",( "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  entry.getKey()  + ",( "+entry.getValue());	  String    key    =    entry.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
70	[BUG]  [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue()  + ") ");  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue()  + ") ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  entry.getKey()  + "( "+entry.getValue()  + ") ");	  String    key    =    entry.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
71	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?   "[null] "  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?   "[null] "  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?   "[null] "  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "[null]   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
72	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?   "[null] "  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?   "[null] "  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?   "[null] "  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "[null]   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
73	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?   "[null] "  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?   "[null] "  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?   "[null] "  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?   "[null]   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
74	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?   "[null] "  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?   "[null] "  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?   "[null] "  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "[null]   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
75	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".$ ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".$ ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".$ ";	  String    key    =    ent.getKey()    +   "$   ";    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
76	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "_$ ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "_$ ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "_$ ";	  String    key    =    ent.getKey()    +   "$   ";    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
77	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.key);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.key);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(entry.key);	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
78	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry);  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(entry);	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
79	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.length);  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.length);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(entry.length);	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
80	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.toString());  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.toString());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(entry.toString());	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
81	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry)+  1;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry)+  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(entry)+  1;	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
82	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
83	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers.getValue()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers.getValue()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers.getValue()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
84	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers.getValue()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers.getValue()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers.getValue()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
85	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
86	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers.getValue()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers.getValue()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers.getValue()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
87	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",n "+entry.getValue());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",n "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",n "+entry.getValue());	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
88	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  is   "+entry.getValue());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  is   "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  is   "+entry.getValue());	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
89	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ", "+entry.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ", "+entry.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ", "+entry.getValue();	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
90	[BUG]  [BUGGY]  String  key  =(ent.getKey()  >=  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  >=  null)?  null  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  >=  null)?  null  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue()  +  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue()  +  1;	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
92	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getShortValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getShortValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getShortValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getShortValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
93	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getShortValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getShortValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getShortValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getShortValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
94	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getShortValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getShortValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getShortValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getShortValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
95	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getStringValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getStringValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getStringValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getShortValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
96	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".,= "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".,= "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".,= "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
97	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",=? "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",=? "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",=? "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
98	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",=' "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",=' "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",=' "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
99	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.entrySet();	  Entry    <    String,    String>    currEntry    =    headers.entrySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
100	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.headers();	  Entry    <    String,    String>    currEntry    =    headers.entrySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
101	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.record();  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.record();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.record();	  Entry    <    String,    String>    currEntry    =    headers.entrySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
102	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".=' "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".=' "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".=' "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "='   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
103	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",' "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",' "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",' "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "='   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
104	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "=' ",  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "=' ",  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "=' ",  ent.getValue();	  String    key    =    ent.getKey()    +   "='   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
105	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ") ");  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ") ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ") ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
106	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".,: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".,: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".,: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
107	[BUG]  [BUGGY]  String  key  =  ent.getKey()  +  1;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  +  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  +  1;	  String    key    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
108	[BUG]  [BUGGY]  String  key  =  ent.getValue()  +  2;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getValue()  +  2;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getValue()  +  2;	  String    key    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
109	[BUG]  [BUGGY]  String  key  =  ent.getString()  +  1;  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getString()  +  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getString()  +  1;	  String    key    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
110	[BUG]  [BUGGY]  String  key  =  ent.getValue()  *  1;  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getValue()  *  1;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getValue()  *  1;	  String    key    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
111	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hashEOF: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  hashEOF: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hashEOF: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",    hasHitEOF:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
112	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".hasHitEOF: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".hasHitEOF: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".hasHitEOF: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",    hasHitEOF:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
113	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".HitEOF: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".HitEOF: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".HitEOF: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",    hasHitEOF:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
114	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getLongValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getLongValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getKey()  :  ent.getLongValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getLongValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
115	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getLongValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getLongValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getLongValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getLongValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
116	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getLongValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getLongValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getLongValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getLongValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
117	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",n "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",n "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",n "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
118	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "!=   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "!=   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "!=   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
119	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "  >>   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "  >>   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "  >>   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
120	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "  >=   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "  >=   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "  >=   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
121	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  {   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  {   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  {   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
122	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  }   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  }   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  }   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
123	[BUG]  [BUGGY]  Key  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey();	  Key    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
124	[BUG]  [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()  ==  null)?  null  :  ent.getValue();	  Key    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
125	[BUG]  [BUGGY]  Key  key  =(ent.getKey()!=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getKey()!=  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()!=  null)?  null  :  ent.getKey();	  Key    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
126	[BUG]  [BUGGY]  Key  key  =(ent.getKey()!=  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getKey()!=  null)?  null  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()!=  null)?  null  :  ent.getValue();	  Key    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
127	[BUG]  [BUGGY]  Key  key  =(ent.getKey()  >=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getKey()  >=  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()  >=  null)?  null  :  ent.getKey();	  Key    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
128	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".  value: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".  value: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".  value: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",    value:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
129	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  value: "  +  encoding.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  value: "  +  encoding.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  value: "  +  encoding.getValue();	  String    key    =    ent.getKey()    +   ",    value:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
130	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  value: "  +  val;  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  value: "  +  val;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  value: "  +  val;	  String    key    =    ent.getKey()    +   ",    value:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
131	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".: ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".: ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".: ";	  String    key    =    ent.getKey()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
132	[BUG]  [BUGGY]  String  key  =  ent.getValue()  + ": ";  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getValue()  + ": ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getValue()  + ": ";	  String    key    =    ent.getKey()    +   ":   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
133	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  ent.getValue());  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  ent.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  ent.getValue());	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
134	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getValue());  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getValue());	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
135	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  0);  [CE]  illegal  start  of  type  [FE]                                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  0);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  0);	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
136	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  +  1);  [CE]  illegal  start  of  type  [FE]                                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  +  1);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  +  1);	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
137	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  -  1);  [CE]  illegal  start  of  type  [FE]                                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  -  1);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  -  1);	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
138	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  -1);  [CE]  illegal  start  of  type  [FE]                                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  -1);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  -1);	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
139	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",!=   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",!=   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",!=   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
140	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  >>   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  >>   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  >>   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
141	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  >=   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  >=   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  >=   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
142	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  [Delete]   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  [Delete]   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  [Delete]   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
143	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/.html ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/.html ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/.html ";	  String    key    =    ent.getKey()    +   "/.   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
144	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/.n ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/.n ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/.n ";	  String    key    =    ent.getKey()    +   "/.   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
145	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",/.   ";  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",/.   ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",/.   ";	  String    key    =    ent.getKey()    +   "/.   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
146	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/.* ";  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/.* ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/.* ";	  String    key    =    ent.getKey()    +   "/.   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
147	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ");  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".( "+entry.getValue()  + ");	  String    key    =    ent.getKey()    +   ".(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
148	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/null ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/null ";	  String    key    =    ent.getKey()    +   "null   ";    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
149	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "  null. ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "  null. ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "  null. ";	  String    key    =    ent.getKey()    +   "null   ";    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
150	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?   "null "  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?   "null "  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?   "null "  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "null   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
151	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?   "null "  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?   "null "  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?   "null "  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "null   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
152	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?   "null "  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?   "null "  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?   "null "  :  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?   "null   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
153	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey().iterator();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey().iterator();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
154	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue().iterator();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getValue().iterator();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getValue().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
155	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers.entrySet().iterator();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.headers.entrySet().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
156	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.entrySet().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
157	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers().iterator();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers().iterator();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.headers().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
158	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  is: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  is: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  is: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
159	[BUG]  [BUGGY]  String  key  =(ent.getString()  ==  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getString()  ==  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getString()  ==  null)?  null  :  ent.getKey();	  String    key    =(ent.getValue()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
160	[BUG]  [BUGGY]  String  key  =(ent.getValue()  >=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  >=  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  >=  null)?  null  :  ent.getKey();	  String    key    =(ent.getValue()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
161	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getKey());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".( "+entry.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".( "+entry.getKey());	  String    key    =    ent.getKey()    +   ".(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
162	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey()  + ", ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey()  + ", ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  null  :  ent.getKey()  + ", ";	  String    key    =(ent.getValue()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
163	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?  0  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?  0  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?  0  :  ent.getKey();	  String    key    =(ent.getValue()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
164	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  null  :  ent.getName();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  null  :  ent.getName();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  null  :  ent.getName();	  String    key    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
165	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "$ ",  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "$ ",  hasHitEOF;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "$ ",  hasHitEOF;	  String    key    =    ent.getKey()    +   "$   ";    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
166	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  encoding);  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  encoding);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  encoding);	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
167	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",:n "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",:n "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",:n "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
168	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/.: "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/.: "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/.: "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
169	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()!=  null;  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()!=  null;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()!=  null;	  Entry    <    String,    String>    currEntry    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
170	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "' ",  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "' ",  hasHitEOF;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "' ",  hasHitEOF;	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
171	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "',' ";  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "',' ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "',' ";	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
172	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "': ";  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "': ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "': ";	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
173	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getName();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getName();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  null  :  ent.getName();	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
174	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  >=  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  >=  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  >=  null)?  null  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
175	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "  [Delete]   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "  [Delete]   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "  [Delete]   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
176	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "== ".equals(ent.getKey());  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "== ".equals(ent.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "== ".equals(ent.getKey());	  String    key    =    ent.getKey()    +   "=   ".equals(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
177	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  headers  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
178	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  headers  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
179	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers.entrySet();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers.entrySet();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.headers.entrySet();	  Entry    <    String,    String>    currEntry    =    headers.entrySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
180	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/ ",  hasHitEOF;  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/ ",  hasHitEOF;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/ ",  hasHitEOF;	  String    key    =    ent.getKey()    +   "/   ";    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
181	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/.zip ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/.zip ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/.zip ";	  String    key    =    ent.getKey()    +   "/.   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
182	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "./. ";  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "./. ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "./. ";	  String    key    =    ent.getKey()    +   "/.   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
183	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF:   "  +  ent.getKey();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF:   "  +  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF:   "  +  ent.getKey();	  String    key    =    ent.getKey()    +   ":   "    +    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
184	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".HitEOF: ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".HitEOF: ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".HitEOF: ";	  String    key    =    ent.getKey()    +   ",    hasHitEOF:   ";    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
185	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  ent.getKey()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
186	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()!=  null)?  ent.getKey()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
187	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  entry.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  entry.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getValue()  ==  null)?  entry.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    entry.getKey();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
188	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",( "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",( "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",( "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
189	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF,   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF,   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF,   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
190	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  is   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  is   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  is   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
191	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ",  hasHitEOF;  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ",  hasHitEOF;  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getValue()  + ") ",  hasHitEOF;	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ")   ";    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
192	[BUG]  [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  : "null ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()!=  null)?  ent.getKey()  : "null ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()!=  null)?  ent.getKey()  : "null ";	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
193	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toLowerCase();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toLowerCase();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toLowerCase();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
194	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".=? "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".=? "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".=? "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
195	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".= ",  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".= ",  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".= ",  ent.getValue();	  String    key    =    ent.getKey()    +   ".=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
196	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",('+entry.getValue());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",('+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",('+entry.getValue());	  String    key    =    ent.getKey()    +   ",(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
197	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",'+entry.getValue());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",'+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",'+entry.getValue());	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
198	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue(ent);  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue(ent);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.getValue(ent);	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
199	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.size());  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.size());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(entry.size());	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
200	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.headers.entrySet().iterator().next();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.headers.entrySet().iterator().next();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
201	[BUG]  [BUGGY]  String  key  =(ent.getValue()  ==  null)?   "null "  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getValue()  ==  null)?   "null "  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getValue()  ==  null)?   "null "  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "null   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
202	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ");  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getKey()  + ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
203	[BUG]  [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue()  + ");  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getValue()  + ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  entry.getKey()  + "( "+entry.getValue()  + ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
204	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getHeaders().iterator();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getHeaders().iterator();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getHeaders().iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
205	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.iterator();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.iterator();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.iterator();	  Entry    <    String,    String>    currEntry    =    headers.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
206	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "./.   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "./.   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "./.   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
207	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".$ "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".$ "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".$ "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
208	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF. ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF. ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF. ";	  String    key    =    ent.getKey()    +   ",    hasHitEOF   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
209	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  entry.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  entry.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()!=  null)?  entry.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    entry.getKey();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
210	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ") ");  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ") ");  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getKey()  + ") ");	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ")   ");    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
211	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getKey());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",( "+entry.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",( "+entry.getKey());	  String    key    =    ent.getKey()    +   ",(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
212	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getHeaders();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getHeaders();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getHeaders();	  Entry    <    String,    String>    currEntry    =    headers.entrySet();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
213	[BUG]  [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getKey());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  entry.getKey()  + "( "+entry.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  entry.getKey()  + "( "+entry.getKey());	  String    key    =    entry.getKey()    +   "(   "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
214	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null  ||  ent.getValue()  ==  null)?  null  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null  ||  ent.getValue()  ==  null)?  null  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null  ||  ent.getValue()  ==  null)?  null  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =(ent.getKey()    ==    null)?    null    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
215	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "=' "  +  ent.getKey();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "=' "  +  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "=' "  +  ent.getKey();	  String    key    =    ent.getKey()    +   "='   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
216	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "., "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "., "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "., "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
217	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "./, "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "./, "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "./, "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
218	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  val=' "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  val=' "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  val=' "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".=   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
219	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()  ==  null?  ent.getValue()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()  ==  null?  ent.getValue()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()  ==  null?  ent.getValue()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
220	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
221	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()  ==  null?  ent.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()  ==  null?  ent.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  ent.getKey()  ||  ent.getValue()  ==  null?  ent.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
222	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "/.. ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "/.. ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "/.. ";	  String    key    =    ent.getKey()    +   "/.   ";    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
223	[BUG]  [BUGGY]  String  key  =(ent.getKey()  >=  null)?  ent.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  >=  null)?  ent.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  >=  null)?  ent.getValue()  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
224	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF,   "+entry.getValue());  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  hasHitEOF,   "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  hasHitEOF,   "+entry.getValue());	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
225	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "., "+entry.getValue());  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "., "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "., "+entry.getValue());	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
226	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",' "+entry.getValue());  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",' "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",' "+entry.getValue());	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
227	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "./, "+entry.getValue());  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "./, "+entry.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "./, "+entry.getValue());	  String    key    =    ent.getKey()    +   ",       "+entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
228	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".  hasHitEOF ";  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".  hasHitEOF ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".  hasHitEOF ";	  String    key    =    ent.getKey()    +   ",    hasHitEOF   ";    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
229	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
230	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  null)?  headers  :  ent.getValue();	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
231	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue(ent.getKey());  [CE]  illegal  start  of  type  [FE]                            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.getValue(ent.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.getValue(ent.getKey());	  Entry    <    String,    String>    currEntry    =    headers.getValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
232	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.getKey());  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(entry.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(entry.getKey());	  Entry    <    String,    String>    currEntry    =    headers.get(ent);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
233	[BUG]  [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getValue();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getValue();	  String    key    =(ent.getKey()!=    null)?    ent.getKey()    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
234	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ",  hasHitEOF);  [CE]  illegal  start  of  type  [FE]                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ",  hasHitEOF);  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getKey()  + ",  hasHitEOF);	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ");    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
235	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getString();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getString();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.getString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.getShortValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
236	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
237	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "  {   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "  {   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "  {   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   "==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
238	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  0)?  ent.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                      NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  0)?  ent.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =(ent.getKey()  ==  0)?  ent.getValue()  :  ent.getKey();	  Entry    <    String,    String>    currEntry    =    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
239	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  '[null]'  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  '[null]'  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  '[null]'  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "[null]   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
240	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".*' ";  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".*' ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".*' ";	  String    key    =    ent.getKey()    +   "'   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
241	[BUG]  [BUGGY]  Entry  <  String,  String>  key  =  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  key  =  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  key  =  ent.getValue();	  String    key    =    ent.getValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
242	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toPath();  [CE]  illegal  start  of  type  [FE]            NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toPath();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toPath();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
243	[BUG]  [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toString();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toString();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()  ==  null)?  ent.getKey()  :  ent.toString();	  String    key    =(ent.getKey()    ==    null)?    ent.getKey()    :    ent.toString();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
244	[BUG]  [BUGGY]  Entry  <  String,  String>  key  =(ent.getKey()  ==  null)?  null  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  key  =(ent.getKey()  ==  null)?  null  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  key  =(ent.getKey()  ==  null)?  null  :  ent.getKey();	  Key    key    =(ent.getKey()    ==    null)?    null    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
245	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  ':'  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  ':'  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  ':'  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".:   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
246	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".= ".equals(ent.getKey());  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".= ".equals(ent.getKey());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".= ".equals(ent.getKey());	  String    key    =    ent.getKey()    +   "=   ".equals(ent.getValue());    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
247	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ") ";  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + "( "+entry.getKey()  + ") ";  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + "( "+entry.getKey()  + ") ";	  String    key    =    ent.getKey()    +   "(   "+entry.getValue()    +   ")   ";    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
248	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".  {   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                        NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".  {   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".  {   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
249	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ",  <   "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                          NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ",  <   "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ",  <   "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ",==   "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
250	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".. "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".. "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".. "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
251	[BUG]  [BUGGY]  String  key  =  ent.getKey()  + ".html "  +  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =  ent.getKey()  + ".html "  +  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =  ent.getKey()  + ".html "  +  ent.getValue();	  String    key    =    ent.getKey()    +   ".       "    +    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
252	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  +  1,  ent.getValue());  [CE]  illegal  start  of  type  [FE]                                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  +  1,  ent.getValue());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey()  +  1,  ent.getValue());	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
253	[BUG]  [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  ent.getCharset());  [CE]  illegal  start  of  type  [FE]                                    NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  ent.getCharset());  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Entry  <  String,  String>  currEntry  =  headers.get(ent.getKey(),  ent.getCharset());	  Entry    <    String,    String>    currEntry    =    headers.get(ent.getKey());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
254	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  : "null ",  ent.getValue();  [CE]  illegal  start  of  type  [FE]                NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  ent.getKey()  : "null ",  ent.getValue();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  ent.getKey()  : "null ",  ent.getValue();	  String    key    =(ent.getKey()    ==    null)?    ent.getValue()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
255	[BUG]  [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]                  NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  Key  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	Key  key  =(ent.getKey()  ==  null)?  ent.getValue()  :  ent.getKey();	  String    key    =(ent.getKey()!=    null)?    ent.getValue()    :    ent.getKey();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
256	[BUG]  [BUGGY]  String  key  =(ent.getKey()  ==  null)?  en   "null "  :  ent.getKey();  [CE]  illegal  start  of  type  [FE]              NumberFormatException      [CONTEXT]                for  (Entry<String,  String>  ent  :  headers.entrySet()){      [BUGGY]  String  key  =(ent.getKey()  ==  null)?  en   "null "  :  ent.getKey();  [BUGGY]      String  val  =  ent.getValue();  if  (     "path     ".equals(key)){  currEntry.setName(val);  }  else  if  (     "linkpath     ".equals(key)){  currEntry.setLinkName(val);  }  else  if  (     "gid     ".equals(key)){  currEntry.setGroupId(Integer.parseInt(val));  }  else  if  (     "gname     ".equals(key)){  currEntry.setGroupName(val);  }  else  if  (     "uid     ".equals(key)){  [CLASS]  TarArchiveInputStream  [METHOD]  applyPaxHeadersToCurrentEntry  [RETURN_TYPE]  void  String>  headers  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  rest  Entry  ent  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  i  is  String  encoding  key  keyword  val  value  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  ch  got  len  length  markLimit  read  readNow  recordSize  restLen  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	494	494	1	replace	String  key  =(ent.getKey()  ==  null)?  en   "null "  :  ent.getKey();	  String    key    =(ent.getKey()    ==    null)?   "null   "    :    ent.getValue();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
