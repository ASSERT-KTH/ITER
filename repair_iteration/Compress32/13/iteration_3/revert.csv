projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset().intValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize==Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset*entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset-Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=LAST_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>=Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>entrySize||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntryOffset.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset().intValue()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset().intValue()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset().intValue()*2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset().length();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset().longValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset().intValue()+2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MAX_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MAX_VALUE||entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MAX_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset&&entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=EntrySize.MIN_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MAX_VALUE||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MAX_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MIN_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset&&entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=recordSize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=entrySize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset||entryOffset<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE||entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getKey();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.available();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getValue()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getValue()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=currEntry.getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<EntrySize.MIN_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset/entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset>=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==entryOffset&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==entryOffset||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==entrySize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==entryOffset||entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MAX_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=entrySize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=blockSize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset||entryOffset<entrySize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset==Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>=Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset!=Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<Integer.MIN_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<=Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>Integer.MAX_VALUE||entrySize*entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<SMALL_BUFFER_SIZE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize<1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>=1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<SMALL_BUFFER_SIZE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset!=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset-Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize-Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize-Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset-Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=blockSize-Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=recordSize-Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length>Integer.MAX_VALUE||entryOffset*length>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset*length>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<EntrySize.MAX_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset==Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset!=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*EntryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset+length){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset+length){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset+Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset+Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset+entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset*entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=EntrySize.MIN_VALUE||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==entrySize||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=entrySize||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<SMALL_BUFFER_SIZE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=entrySize||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>entryOffset||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>entryOffset||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset*entrySize!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset!=Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset==Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*recordSize!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=EntrySize.MIN_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=EntrySize.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset==Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset*entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset==Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize!=Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize>>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<LAST_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=LAST_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<LAST_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=LAST_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=LAST_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==LAST_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<LAST_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntryOffset.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntryOffset.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntryOffset.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntryOffset.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset-entrySize==Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getEntrySize()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getEntrySize()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getRecordSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getEntrySize().length;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=EntrySize.MAX_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MAX_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<entryOffset||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<0||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<this.blockSize||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MIN_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MAX_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntrySize()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntrySize()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntrySize()-blockSize;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getRecordSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MAX_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MIN_VALUE||entrySize>Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Long.MAX_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MAX_VALUE||entryOffset<Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<this.blockSize||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<this.blockSize||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<this.blockSize||entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<this.blockSize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MIN_VALUE||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset&&entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=recordSize||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=this.currEntry.getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181LongentryOffset=getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryOffset(0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset*entrySize<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset*entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getEntrySize()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getEntrySize()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getRecordSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getEntrySize()-blockSize;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=EntrySize.MAX_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MIN_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryOffset()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryOffset()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=this.currEntry.getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryOffset()-2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MAX_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MIN_VALUE||entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize==Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset+entrySize==Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Long.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntrySize()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntrySize()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=this.currEntry.getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getRecordSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181LongentryOffset=getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntryStart();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryLength()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryLength()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryCount();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntryStart();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=getEntrySize()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=this.currEntry.getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=getEntrySize()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=getEntryOffset();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=getEntrySize()+1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=this.currEntry.getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=getEntrySize()-1;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=entrySize||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize{Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<MAX_VALUE||entryOffset<=MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<MAX_VALUE||entryOffset>MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MIN_VALUE||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MIN_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=entryOffset&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=entryOffset||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=entrySize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=entrySize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset&&entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<entrySize||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=entrySize||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==Integer.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<0||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==entrySize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<this.blockSize&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=getEntrySize()+SMALL_BUFFER_SIZE;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=this.currEntry.getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(length*entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<SMALL_BUFFER_SIZE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<0||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<0||entrySize<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=this.currEntry.getEntrySize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=this.currEntry.getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=getEntrySize()+SMALL_BUFFER_SIZE;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=EntrySize.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntrySize()-2;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=getEntrySize()-blockSize;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntryOffset.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntryOffset.MIN_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<SMALL_BUFFER_SIZE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE||entryOffset<=entryOffset){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=LAST_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*this.blockSize!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*length!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getRecordSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getRowSize();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=EntrySize.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entrySize<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entrySize<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset==Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>=Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MAX_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize>MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*entryOffset>Integer.MAX_VALUE||entrySize*entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<EntrySize.MAX_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE+entryOffset){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=entryOffset+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset+Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=EntrySize.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>MAX_BUFFER_SIZE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=MAX_VALUE-entryOffset){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize==entryOffset-Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=entryOffset||entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=EntryOffset.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=EntrySize.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*this.blockSize==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset==Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize!=MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=0){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=currEntry.getEntryOffset().intValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181LongentryOffset=getEntryOffset().intValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*this.blockSize<=entryOffset){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=LAST_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181LongentryOffset=getEntryOffset().longValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE||entryOffset>this.blockSize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset*Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<2){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentrySize=getEntrySize()-blockSize;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset>Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/length>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<SMALL_BUFFER_SIZE||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>entrySize||entrySize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*SMALL_BUFFER_SIZE!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset*SMALL_BUFFER_SIZE!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*blockSize!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<Integer.MAX_VALUE||entryOffset>EntrySize.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentrySize=getEntrySize()-blockSize;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>entrySize||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>entrySize&&entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset>entrySize&&entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<blockSize||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize-entryOffset!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize-entryOffset==Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentryOffset=this.currEntry.getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=blockSize||entryOffset<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Long.MAX_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Long.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MAX_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MAX_VALUE||entrySize>EntrySize.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181intentryOffset=getEntrySize()+SMALL_BUFFER_SIZE;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset*SMALL_BUFFER_SIZE>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>=Integer.MIN_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset||entryOffset>Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<MAX_VALUE||entryOffset<=entrySize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<SMALL_BUFFER_SIZE||entrySize>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<SMALL_BUFFER_SIZE||entrySize!=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<SMALL_BUFFER_SIZE||entrySize>>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<=Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=this.currEntry.getEntryLength();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize/entryOffset>Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*EntryOffset<Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize>EntrySize.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181IntegerentrySize=getEntrySize()-blockSize;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=recordSize||entryOffset>=Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<EntrySize.MIN_VALUE||entryOffset>EntrySize.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=blockSize+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=entryOffset+1){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=recordSize+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=this.blockSize+entryOffset+Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181longentryOffset=getEntrySize()+SMALL_BUFFER_SIZE;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entryOffset<SMALL_BUFFER_SIZE||entrySize<Integer.MIN_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize>MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize>Long.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=recordSize){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize<=Long.MAX_VALUE||entryOffset>Short.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*blockSize<Integer.MAX_VALUE){
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java181if(entrySize*this.blockSize<Integer.MAX_VALUE){
