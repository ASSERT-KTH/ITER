projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.class);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseStringHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(recordSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getCurrentEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getParent();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=encoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,"");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(tr,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(tr,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(tr,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(tr,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=zipEncoding.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.zipEncoding.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=fileEncoding.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=ZipEncoding.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(true,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(true,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseStringHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseStringHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseBooleanHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseStringHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseStringHeaders(false,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,is);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,isHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,hasHitEOF,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,hasHitEOF,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,hasHitEOF,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,hasHitEOF,headerBuf);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(record,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=ZipEncoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.zipEncoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=cacheEncoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=fileEncoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.getPaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=getPaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(recordSize,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(recordSize+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(recordSize,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(recordSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(recordLimit);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parseHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.readPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseFileHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseRecords(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,0,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers.length-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(record,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,SMALL_BUFFER_SIZE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers.length+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentPaxEntry();if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=this.getCurrentEntry();if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){thrownewIllegalStateException("".getMessage());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=this.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=newHashMap<String,String>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=super.paxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.zipEncoding.parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=ZipEncoding.parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=zipEncoding.parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),receiver);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),cache);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,"");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,encoding,"");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,"",true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parseHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parseHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parseStringHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,repaints);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,cache);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseZipHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseCurrentHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(zipEncoding,is);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseRawHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parseHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getNext();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();headers=currEntry.getParent();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();headers=currEntry.getNext();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();if(currEntry!=null){headers=currEntry.getParent();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers=currEntry.getNext();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getKey());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getRecordSize());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey(),file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getSimpleName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding,record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,encoding,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding,recordSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,encoding,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,fileEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseTarHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr.getKey());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(true,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(true,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry().getPaxHeaders();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentPaxEntry();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=null;this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=this.paxHeaders.getCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=isCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=this.getCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Entry<K,V>currEntry=getCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=is.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.parseHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.paxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(true,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,encoding,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,tr,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding,tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,encoding,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,fileEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey(),false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(r,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(TarArchiveEntry.class,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(r,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getParent();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextPaxEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextHeader();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();if(currEntry!=null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=this.getCurrentEntry();if(currEntry!=null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry(0);if(currEntry!=null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.paxHeaders;
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(record,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(record,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parseHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseCurrentHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(encoding,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(recordSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newLinkedHashMap<String,String>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(paxHeaders);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(256);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(record.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(64);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();headers=currEntry.getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Entry<K,V>currEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newLinkedList<TarArchiveEntry>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newjava.util.ArrayList<TarArchiveEntry>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newLinkedHashMap<TarArchiveEntry>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newLinkedHashSet<TarArchiveEntry>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>(1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newTreeMap<TarArchiveEntry>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(paxHeaders);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=is.getCurrentEntry();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=isCurrentEntry();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=zipEncoding.getCurrentEntry();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=isCurrentEntry()?getCurrentEntry():null;paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders.put(encoding,currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntryInput();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry(0);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry(null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry().getValue();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry(n);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(TarArchiveEntry.class);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(TarArchiveEntry.this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();headers.put(currEntry.getName(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Entry<K,V>currEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry>=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();if(currEntry==null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=this.getCurrentEntry();if(currEntry==null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Entry<K,V>currEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();headers.put(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry().getValue();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,cache);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(paxHeaders);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(recordSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();headers.put(currEntry.getName(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Entry<K,V>currEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getKey());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(true,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(getCurrentEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getNextEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getLastEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getCurrentEntry(),true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(getCurrentEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getCurrentEntry(),currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.class,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.class,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.class,currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.SOURCE);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.class,currEntry.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();headers=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Entry<K,V>currEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders(this.zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(encoding!=null){Map<String,String>headers=parsePaxHeaders(true,encoding);}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,ZipEncoding.UTF8);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(false,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(headers.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getParent();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(headers!=null){headers=currEntry.getParent();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(headers!=null){headers=currEntry.getNext();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(headers==null){headers=currEntry.getParent();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){paxHeaders(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=is.getCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders()+1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),headerSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,ZipEncoding.UTF8);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(false,"");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,encoding.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry(null);if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,headers,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(headers!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=is.getCurrentEntry();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=findCurrentEntry();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();this.paxHeaders=currEntry.computePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(currEntry,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(tr,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();if(currEntry!=null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();if(currEntry==null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry(0);if(currEntry==null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseRecords(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,getPaxHeaders());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(currEntry,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(tr,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getZipEncoding().parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr,headerSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getCurrentEntry(),headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getCurrentPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders(is);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.zipEncoding.parsePaxHeaders(is);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=encoding.parsePaxHeaders(is);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getPaxEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getParentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextFile();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders(encode);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=encoding.parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(headers!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getText());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getSourceName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getRecord());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getSource());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=is.readNow();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders.put(encoding,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=this.zipEncoding.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry(0);if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(trEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.paxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseTarHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>(headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>(headers.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(recordSize-1);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,handleEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntryCount();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=encoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,insertHeaders);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,ZipEncoding.UTF8);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,enr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeadersFromCurrentEntry(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parseStringHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=createCurrentEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,getHitEOF());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=super.paxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey(),this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey(),cache);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey(),zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers,compression);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers,fileEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.class,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(TarArchiveEntry.class,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers.length-2);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers.length,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers.length-1,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=is.getCurrentEntry();if(currEntry!=null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),record.getCharset());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders(),fileEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers,fileEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(headers,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalTarArchiveEntrycurrEntry=getCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,headers,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,headers,null);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getKey());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.getHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.zipHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getName());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parseHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=headers.getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(false,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,buffer);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,str);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>(4);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,file);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding,reccord);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getFirstEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getPaxHeaders());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextHeaderEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(tr.getKey());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(record.getHeaders());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>(this.headers.size());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>(this.headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>(4);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(padding,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(recordSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record.getHeaders());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(false,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(padding,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=zipEncoding;paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=zipEncoding?getCurrentEntry():null;paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parseHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=is.getCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getParent();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429if(headers!=null){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getNext();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=headers.getCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders(encoding,zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.getPaxHeaders();
