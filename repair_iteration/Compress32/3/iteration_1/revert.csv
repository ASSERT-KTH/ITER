projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();this.paxHeaders=currEntry.getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getNextEntry();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders(currEntry.getKey(),currEntry.getValue());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry==null){skipPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();paxHeaders.put(encoding,currEntry);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parseHeaders(this);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(TarArchiveEntry.class);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseStringHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=this.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=newHashMap<String,String>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(true,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(record);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,headers.length);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(tr);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr,false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(recordSize);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(getCurrentEntry());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=is.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getPaxHeaders();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers=currEntry.getParent();}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=encoding.parsePaxHeaders();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=getPaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(zipEncoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(true);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429finalMap<String,String>headers=parsePaxHeaders(this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record,hasHitEOF);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(record.getHeaders());
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parseHeaders(this,headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429map<String,String>headers=parsePaxHeaders(false);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(false,"");
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getKey(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getName());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){headers.put(currEntry.getName(),currEntry.getValue());}
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429this.headers.paxHeaders=newArrayList<TarArchiveEntry>();
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders(encoding);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=zipEncoding.parsePaxHeaders(headers);
projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java429Map<String,String>headers=parsePaxHeaders(tr.getKey());
