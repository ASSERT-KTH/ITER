bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(currEntry);  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(currEntry);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(currEntry);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  headers);  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  headers);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(headers,  headers);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  true);  [CE]  illegal  start  of  type  [FE]        NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  true);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(headers,  true);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  this);  [CE]  illegal  start  of  type  [FE]          NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  this);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(headers,  this);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  false);  [CE]  illegal  start  of  type  [FE]            NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  false);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(headers,  false);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  encoding);  [CE]  illegal  start  of  type  [FE]              NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(headers,  encoding);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(headers,  encoding);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]    [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	  	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
8	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(this,  headers);  [CE]  illegal  start  of  type  [FE]    NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(this,  headers);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(this,  headers);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  applyPaxHeadersToCurrentEntry(this);  [CE]  illegal  start  of  type  [FE]      NumberFormatException  [CONTEXT]  private  void  paxHeaders()  throws  IOException{  Map<String,  String>  headers  =  parsePaxHeaders(this);  getNextEntry();  //  Get  the  actual  file  entry  [BUGGY]  applyPaxHeadersToCurrentEntry(this);  [BUGGY]  }  [CLASS]  TarArchiveInputStream  [METHOD]  paxHeaders  [RETURN_TYPE]  void  [VARIABLES]  byte[]  SMALL_BUF  headerBuf  l  longLinkData  longNameData  record  boolean  hasHitEOF  ZipEncoding  zipEncoding  InputStream  is  String  encoding  Map  headers  int  SMALL_BUFFER_SIZE  blockSize  length  markLimit  readNow  recordSize  long  available  entryOffset  entrySize  n  numRecords  padding  skipped  TarArchiveEntry  currEntry  	projects/Compress32/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java	0.7071067811865475	431	431	1	replace	applyPaxHeadersToCurrentEntry(this);	applyPaxHeadersToCurrentEntry(headers);  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
