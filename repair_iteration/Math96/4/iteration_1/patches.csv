bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  false;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  false;  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  false;	      if(rhs.getDenominator()    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(rhs.getDenominator()!=  null)  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.getDenominator()!=  null)  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.getDenominator()!=  null)  {  ret  =  false;  }	      if(rhs.getDenominator()    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if(rhs.getDenominator()  ==  null  ||  rhs.getDenominator()!=  null)  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.getDenominator()  ==  null  ||  rhs.getDenominator()!=  null)  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.getDenominator()  ==  null  ||  rhs.getDenominator()!=  null)  {  ret  =  false;  }	      if(rhs.getDenominator()    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  if(!rhs.isNaN()  &&  this.isNaN())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(!rhs.isNaN()  &&  this.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(!rhs.isNaN()  &&  this.isNaN())  {	  if(!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  if(rhs.isNaN()  ||!rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||!rhs.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||!rhs.isNaN())  {	  if(!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  this.isNaN())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  this.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isNaN()  ||  this.isNaN())  {	  if(rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {	  if(rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  if(this.isNaN()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(this.isNaN()  ||  rhs.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(this.isNaN()  ||  rhs.isNaN())  {	  if(rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  if(rhs.getReal()!=  null)  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.getReal()!=  null)  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.getReal()!=  null)  {  ret  =  false;  }	      if(rhs.getReal()    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
10	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN())  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isNaN())  {  ret  =  false;  }	      if(rhs.isNaN())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(other.isNaN())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(other.isNaN())  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(other.isNaN())  {  ret  =  false;  }	      if(rhs.isNaN())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  boolean  ret  =  rhs.isNaN()  ||  this.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  boolean  ret  =  rhs.isNaN()  ||  this.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	boolean  ret  =  rhs.isNaN()  ||  this.isNaN();	      boolean    ret    =    rhs.isNaN()    ||    rhs.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  boolean  ret  =  this.isNaN()  ||  rhs.isNaN();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  boolean  ret  =  this.isNaN()  ||  rhs.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	boolean  ret  =  this.isNaN()  ||  rhs.isNaN();	      boolean    ret    =    rhs.isNaN()    ||    rhs.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  boolean  ret  =  this.isNaN();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  boolean  ret  =  this.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	boolean  ret  =  this.isNaN();	      boolean    ret    =    rhs.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  rhs.setDenominator(d);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rhs.setDenominator(d);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rhs.setDenominator(d);	      rhs.setDenominator(real);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  rhs.setDenominator(imaginary);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rhs.setDenominator(imaginary);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rhs.setDenominator(imaginary);	      rhs.setDenominator(real);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  rhs.setDenominator(c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rhs.setDenominator(c);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rhs.setDenominator(c);	      rhs.setDenominator(real);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN())  {  ret  =  this.isNaN();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN())  {  ret  =  this.isNaN();  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isNaN())  {  ret  =  this.isNaN();  }	      if(rhs.isNaN())    {    ret    =    this.isNaN();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN())  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs  ==  null  ||  rhs.isNaN())  {  ret  =  false;  }	      if(rhs!=    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  ret  =  rhs.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  rhs.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  rhs.isNaN();	      ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  ret  =  this.equals(other);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  this.equals(other);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  this.equals(other);	      ret    =    this.equals(rhs);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  ret  =  this.equals(rhs.getReal());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  this.equals(rhs.getReal());  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  this.equals(rhs.getReal());	      ret    =    this.equals(rhs);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  ret  =  this.equals(rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  this.equals(rhs.getDenominator());  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  this.equals(rhs.getDenominator());	      ret    =    this.equals(rhs);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {	  if(rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isImaginary())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isImaginary())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isImaginary())  {	  if(rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  ReflectionResult  ret  =  this.isReflectionResult();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ReflectionResult  ret  =  this.isReflectionResult();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ReflectionResult  ret  =  this.isReflectionResult();	      if(rhs.isNaN())    {    ret    =    this.isNaN();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  Ret  =  this.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  Ret  =  this.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	Ret  =  this.isNaN();	      if(rhs.isNaN())    {    ret    =    this.isNaN();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  rhs.setDenominator(null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rhs.setDenominator(null);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rhs.setDenominator(null);	      rhs.setDenominator(real);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  rea.equals(rhs.getRoot()))  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rea.equals(rhs.getRoot()))  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rea.equals(rhs.getRoot()))  {  ret  =  false;  }	      if(rhs.isNaN())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  ret  =  this.equalsINF(rhs);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  this.equalsINF(rhs);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  this.equalsINF(rhs);	      ret    =    this.equals(rhs);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  ret  =  super.equals(rhs);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  super.equals(rhs);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  super.equals(rhs);	      ret    =    this.equals(rhs);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  rea  ==  null)  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rea  ==  null)  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rea  ==  null)  {  ret  =  false;  }	      if(rhs    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  ReflectionResult  rhs  =  rhs.getReal();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ReflectionResult  rhs  =  rhs.getReal();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ReflectionResult  rhs  =  rhs.getReal();	      if(rhs.getReal()    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  ret  =(rhs  ==  null)?  false  :  rhs.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =(rhs  ==  null)?  false  :  rhs.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =(rhs  ==  null)?  false  :  rhs.isNaN();	      ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  rhs.setDenominator(this.denominator);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rhs.setDenominator(this.denominator);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rhs.setDenominator(this.denominator);	      rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isEmpty())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isEmpty())  {	  if(rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs  ==  null  ||  rhs.isNaN())  {	  if(rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  rea!=  null)  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  rea!=  null)  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	rea!=  null)  {  ret  =  false;  }	      if(rhs!=    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  if(rhs.isInfinity()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isInfinity()  ||  rhs.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isInfinity()  ||  rhs.isNaN())  {	  if(rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  boolean  ret  =  rhs.isNaN()  ||  imaginary.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  boolean  ret  =  rhs.isNaN()  ||  imaginary.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	boolean  ret  =  rhs.isNaN()  ||  imaginary.isNaN();	      boolean    ret    =    rhs.isNaN()    ||    rhs.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  boolean  ret  =  rhs.isNaN()  &&  rhs.isNaN();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  boolean  ret  =  rhs.isNaN()  &&  rhs.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	boolean  ret  =  rhs.isNaN()  &&  rhs.isNaN();	      boolean    ret    =    rhs.isNaN()    ||    rhs.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  ret  =  rhs.equals(real);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  rhs.equals(real);  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  rhs.equals(real);	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  if(rhs.getDenominator()  ==  null  ||  rhs.getDenominator()!=  null)ret  =  false;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.getDenominator()  ==  null  ||  rhs.getDenominator()!=  null)ret  =  false;  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.getDenominator()  ==  null  ||  rhs.getDenominator()!=  null)ret  =  false;	      if(rhs.getDenominator()    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  ReflectionResult  ret  =  rhs.getReal();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ReflectionResult  ret  =  rhs.getReal();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ReflectionResult  ret  =  rhs.getReal();	      if(rhs.getReal()    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  ReflectionResult  ret  =  this.isNaN();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ReflectionResult  ret  =  this.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ReflectionResult  ret  =  this.isNaN();	      if(rhs.isNaN())    {    ret    =    this.isNaN();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  if(!rhs.isNaN()  ||!rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(!rhs.isNaN()  ||!rhs.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(!rhs.isNaN()  ||!rhs.isNaN())  {	  if(!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  if(!rhs.isNaN()  &&!rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(!rhs.isNaN()  &&!rhs.isNaN())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(!rhs.isNaN()  &&!rhs.isNaN())  {	  if(!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  ret  =  this.isNaN()  ||  rhs.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  this.isNaN()  ||  rhs.isNaN();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  this.isNaN()  ||  rhs.isNaN();	      ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN())ret  =  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN())ret  =  false;  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs.isNaN()  ||  rhs.isNaN())ret  =  false;	      if(rhs.isNaN())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  if(this.isNaN()  ||  rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(this.isNaN()  ||  rhs.isInfinity())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(this.isNaN()  ||  rhs.isInfinity())  {	  if(rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  if(!rhs.isNaN()  ||  rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(!rhs.isNaN()  ||  rhs.isInfinity())  {  [BUGGY]    ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(!rhs.isNaN()  ||  rhs.isInfinity())  {	  if(rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isInverted())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs  ==  null  ||  rhs.isInverted())  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs  ==  null  ||  rhs.isInverted())  {  ret  =  false;  }	      if(rhs    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isInitializing())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  if(rhs  ==  null  ||  rhs.isInitializing())  {  ret  =  false;  }  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	if(rhs  ==  null  ||  rhs.isInitializing())  {  ret  =  false;  }	      if(rhs    ==    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
54	[BUG]  [BUGGY]  ret  =  rhs.equals(this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ret  =  rhs.equals(this);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ret  =  rhs.equals(this);	      ret    =    this.equals(rhs);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  ReflectionResult  rhs  =  rhs.getReflectionResult();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;    [BUGGY]  ReflectionResult  rhs  =  rhs.getReflectionResult();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	255	255	1	replace	ReflectionResult  rhs  =  rhs.getReflectionResult();	      if(rhs!=    null)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
