bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real  real  =  rhs.getNaN()  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getNaN()  *  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getNaN()  *  1;	  Real    real    =    rhs.getNaN()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
2	[BUG]  [BUGGY]  Realreal  real  =  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Realreal  real  =  rhs.getNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Realreal  real  =  rhs.getNaN();	  Real    real    =    rhs.getNaN()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
3	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
6	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
7	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nextToken())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
8	[BUG]  [BUGGY]  Real  rhs  =  rhs.getINFDenominator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getINFDenominator();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getINFDenominator();	  Real    rhs    =    rhs.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
9	[BUG]  [BUGGY]  Real  rhs  =  rhs.getRawDenominator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getRawDenominator();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getRawDenominator();	  Real    rhs    =    rhs.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
10	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(Double.isInfinite(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isInfinite(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isInfinite(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {	  if(Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
13	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getINF())||!Double.isInfinite(rhs.getINF())||!Double.isInfinite(rhs.getINF()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getINF())||!Double.isInfinite(rhs.getINF())||!Double.isInfinite(rhs.getINF()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getINF())||!Double.isInfinite(rhs.getINF())||!Double.isInfinite(rhs.getINF()))  {	  if(Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
14	[BUG]  [BUGGY]  Real  rhs  =  d.get(rhs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  d.get(rhs);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  d.get(rhs);	  Real    rhs    =    rhs.get(d);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.c);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.c);	  Real    rhs    =    rhs.get(d);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
17	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
18	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
19	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits()  +  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMaximumFractionDigits()  +  1);	  Real    real    =    rhs.get(rhs.getMaximumFractionDigits());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
20	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits(),  rhs.getMaximumFractionDigits());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits(),  rhs.getMaximumFractionDigits());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMaximumFractionDigits(),  rhs.getMaximumFractionDigits());	  Real    real    =    rhs.get(rhs.getMaximumFractionDigits());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
21	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits(),  rhs.getMinimumFractionDigits());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits(),  rhs.getMinimumFractionDigits());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMaximumFractionDigits(),  rhs.getMinimumFractionDigits());	  Real    real    =    rhs.get(rhs.getMaximumFractionDigits());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
22	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits()  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits()  -  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMaximumFractionDigits()  -  1);	  Real    real    =    rhs.get(rhs.getMaximumFractionDigits());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
23	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.real);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.real);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.real);	  Real    rhs    =    getDenominator(rhs);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
24	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.c);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.c);	  Real    rhs    =    getDenominator(rhs);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
25	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.d);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.d);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.d);	  Real    rhs    =    getDenominator(rhs);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
26	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMask()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMask()  -  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMask()  -  1);	  Real    real    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMask(),  c);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMask(),  c);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMask(),  c);	  Real    real    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMask()  -  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMask()  -  2);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMask()  -  2);	  Real    real    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  c);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  c);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType(),  c);	  Real    real    =    rhs.get(rhs.getType(),    denominator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
30	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  d);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  d);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType(),  d);	  Real    real    =    rhs.get(rhs.getType(),    denominator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
31	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  q);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  q);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType(),  q);	  Real    real    =    rhs.get(rhs.getType(),    denominator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
32	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  INF);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  INF);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType(),  INF);	  Real    real    =    rhs.get(rhs.getType(),    denominator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
33	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
34	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
35	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
36	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
37	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDenominator());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getDenominator());	  Real    rhs    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
38	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getType()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.getType()  -  1);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getType()  -  1);	  Real    rhs    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
39	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getNumber());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.getNumber());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getNumber());	  Real    rhs    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
40	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
41	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
42	[BUG]  [BUGGY]  if(rhs.getINF()  ==  rhs.getINF()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(rhs.getINF()  ==  rhs.getINF()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(rhs.getINF()  ==  rhs.getINF()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
43	[BUG]  [BUGGY]  Real  rhs  =  rhs.getCurrentNode();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getCurrentNode();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getCurrentNode();	  Real    rhs    =    rhs.getRoot();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
44	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
45	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
46	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
47	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
48	[BUG]  [BUGGY]  Real  real  =  rhs.getDestinator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getDestinator();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getDestinator();	  Real    real    =    rhs.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  Real  real  =  rhs.getINFDenominator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getINFDenominator();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getINFDenominator();	  Real    real    =    rhs.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  Real  real  =  rhs.getDeno();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getDeno();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getDeno();	  Real    real    =    rhs.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  Real  rhs  =  rhs.getN()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getN()  +  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getN()  +  1;	  Real    rhs    =    rhs.getN();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
55	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
56	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
57	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.native)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
58	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real))  {	  if(Double.isNaN(rhs.native)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
59	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
60	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
61	[BUG]  [BUGGY]  if(isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
62	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getNumber()  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getNumber()  -  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getNumber()  -  1);	  Real    real    =    rhs.get(rhs.getNumber());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
63	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMaxNumber());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMaxNumber());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMaxNumber());	  Real    real    =    rhs.get(rhs.getNumber());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
64	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getNumber()  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getNumber()  +  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getNumber()  +  1);	  Real    real    =    rhs.get(rhs.getNumber());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
65	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary;	  Real    real    =    rhs.real    ||    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  Real  real  =  rhs.real  &&  rhs.real;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  &&  rhs.real;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  &&  rhs.real;	  Real    real    =    rhs.real    ||    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
68	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
69	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNFParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getNFParent();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getNFParent();	  Real    rhs    =    rhs.getINFParent();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
70	[BUG]  [BUGGY]  Real  rhs  =  rhs.getINFactor();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getINFactor();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getINFactor();	  Real    rhs    =    rhs.getINFParent();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
71	[BUG]  [BUGGY]  Real  rhs  =  rhs.getInFParent();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getInFParent();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getInFParent();	  Real    rhs    =    rhs.getINFParent();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
72	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
73	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(c)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(c)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(c)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
74	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
75	[BUG]  [BUGGY]  if(rhs.getMask()  ==  rhs.getMask()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(rhs.getMask()  ==  rhs.getMask()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(rhs.getMask()  ==  rhs.getMask()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
76	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getMask())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
77	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  if(Double.isNaN(rhs.n)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.n)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.n)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination(),  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination(),  c);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDestination(),  c);	  Real    rhs    =    getDenominator(rhs.getDestination());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
81	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getINF());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getINF());	  Real    rhs    =    getDenominator(rhs.getDestination());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
82	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getCurrentDestination());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getCurrentDestination());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getCurrentDestination());	  Real    rhs    =    getDenominator(rhs.getDestination());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
83	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getRawClass())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getRawClass())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getRawClass())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getCurrentToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
84	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getDestination())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getDestination())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getDestination())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)	  if(Double.isNaN(rhs.getCurrentToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
85	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getX())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getX())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
87	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getY())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getY())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getY())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getX())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
88	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real)/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(real)/  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(real)/  1;	  Real    rhs    =    rhs.get(real)+    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
89	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.real)+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.real)+  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.real)+  1;	  Real    rhs    =    rhs.get(real)+    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
90	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real)+  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(real)+  2;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(real)+  2;	  Real    rhs    =    rhs.get(real)+    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
91	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getDimension()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getDimension()  -  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getDimension()  -  1);	  Real    real    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
92	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getDimension(),  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getDimension(),  c);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getDimension(),  c);	  Real    real    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
93	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getDimension()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getDimension()  +  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getDimension()  +  1);	  Real    real    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
94	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(d)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
95	[BUG]  [BUGGY]  Real  rhs  =  NaN.getRootClass();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  NaN.getRootClass();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  NaN.getRootClass();	  Real    rhs    =    rhs.getRootClass();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
96	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  ==  rhs.real;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary  ==  rhs.real;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  ==  rhs.real;	  Real    real    =    rhs.real    ||    imaginary    <    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
97	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  >=  rhs.real;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary  >=  rhs.real;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  >=  rhs.real;	  Real    real    =    rhs.real    ||    imaginary    <    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
98	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary!=  rhs.real;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary!=  rhs.real;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary!=  rhs.real;	  Real    real    =    rhs.real    ||    imaginary    <    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
99	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
100	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isDenominator(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isDenominator(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isDenominator(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
101	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(c)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(c)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(c)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
102	[BUG]  [BUGGY]  Real  real  =  rhs.getDenomination();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getDenomination();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getDenomination();	  Real    real    =    rhs.getDestination();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
103	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
104	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary!=  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary!=  null;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary!=  null;	  Real    real    =    rhs.real    ||    rhs.real!=    null;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  Real  real  =  rhs.real  &&  rhs.real!=  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  &&  rhs.real!=  null;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  &&  rhs.real!=  null;	  Real    real    =    rhs.real    ||    rhs.real!=    null;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  ==  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary  ==  null;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  ==  null;	  Real    real    =    rhs.real    ||    rhs.real!=    null;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
108	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
109	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
110	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
111	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
112	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.nextToken())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
113	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.nextToken())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.getToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.getToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.getToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.nextToken())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
116	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.real)||!Double.isInfinite(rhs.imaginary)||!Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.real)||!Double.isInfinite(rhs.imaginary)||!Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.real)||!Double.isInfinite(rhs.imaginary)||!Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
117	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
118	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
119	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(!Double.isNaN(rhs.getNumber())&&    Double.isInfinite(real)&&    Double.isInfinite(rhs.real)&&    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
120	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)||  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)||  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)||  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(!Double.isNaN(rhs.getNumber())&&    Double.isInfinite(real)&&    Double.isInfinite(rhs.real)&&    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
121	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(!Double.isNaN(rhs.getNumber())&&    Double.isInfinite(real)&&    Double.isInfinite(rhs.real)&&    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
122	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  -  1);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getMask()  -  1);	  Real    rhs    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
123	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask(),  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask(),  c);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getMask(),  c);	  Real    rhs    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
124	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  +  1);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getMask()  +  1);	  Real    rhs    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
125	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
126	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
127	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
128	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
129	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isNaN(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
130	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isNaN(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
131	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNode())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
132	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNode())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
133	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(rhs.getNode())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(rhs.getNode())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNode())||  Double.isNaN(rhs.getNode())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNode())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
134	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  ==  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary  ==  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  ==  rhs.imaginary;	  Real    real    =    rhs.real    ||    imaginary    >    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
135	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary!=  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary!=  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary!=  rhs.imaginary;	  Real    real    =    rhs.real    ||    imaginary    >    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
136	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  >=  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary  >=  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  >=  rhs.imaginary;	  Real    real    =    rhs.real    ||    imaginary    >    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
137	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isNaN(imaginary)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
138	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isNaN(imaginary)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
139	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
140	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
141	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.real);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.real);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(rhs.real);	  Real    rhs    =    Complex.getInstance(rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
142	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  Complex.getInstance(real);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(real);	  Real    rhs    =    Complex.getInstance(rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
143	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.denominator);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.denominator);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(rhs.denominator);	  Real    rhs    =    Complex.getInstance(rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
144	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(d,  rhs);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  Complex.getInstance(d,  rhs);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(d,  rhs);	  Real    rhs    =    Complex.getInstance(rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
145	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
146	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.real)||!Double.isInfinite(rhs.real)||!Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.real)||!Double.isInfinite(rhs.real)||!Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.real)||!Double.isInfinite(rhs.real)||!Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
147	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
148	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
149	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
150	[BUG]  [BUGGY]  Real  rhs  =  c.get(rhs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  c.get(rhs);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  c.get(rhs);	  Real    rhs    =    rhs.get(c);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
151	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
152	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
153	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.real!=  null?  null  :  rhs.real.isNaN();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  rhs.real!=  null?  null  :  rhs.real.isNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.real!=  null?  null  :  rhs.real.isNaN();	  Real    real    =    rhs.real    ||    rhs.real.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
154	[BUG]  [BUGGY]  Real  real  =  isNaN()  ||  rhs.real.isNaN();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  isNaN()  ||  rhs.real.isNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  isNaN()  ||  rhs.real.isNaN();	  Real    real    =    rhs.real    ||    rhs.real.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
155	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.real!=  null?  NaN  :  rhs.real.isNaN();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  rhs.real!=  null?  NaN  :  rhs.real.isNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.real!=  null?  NaN  :  rhs.real.isNaN();	  Real    real    =    rhs.real    ||    rhs.real.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
156	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  c);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDimension(),  c);	  Real    rhs    =    getDenominator(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
157	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension()  +  1);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDimension()  +  1);	  Real    rhs    =    getDenominator(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
158	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  d);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  d);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDimension(),  d);	  Real    rhs    =    getDenominator(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
159	[BUG]  [BUGGY]  Real  rhs  =  rhs.getRootPosition();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getRootPosition();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getRootPosition();	  Real    rhs    =    rhs.getRootParent();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
160	[BUG]  [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
161	[BUG]  [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.real))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.real))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.real))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
162	[BUG]  [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
163	[BUG]  [BUGGY]  if(isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
164	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getNext();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getNext();	  Real    rhs    =    rhs.getParent();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
165	[BUG]  [BUGGY]  Real  rhs  =  rhs.getLastChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getLastChild();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getLastChild();	  Real    rhs    =    rhs.getParent();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
166	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
167	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNative())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNative())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNative())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
168	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(imaginary)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
169	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(c)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(c)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(c)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(imaginary)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
170	[BUG]  [BUGGY]  Real  real  =  rhs.getN()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getN()  +  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getN()  +  1;	  Real    real    =    rhs.getN();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
171	[BUG]  [BUGGY]  Real  real  =  rhs.getN()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getN()  -  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getN()  -  1;	  Real    real    =    rhs.getN();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
172	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
173	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getN());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getN());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getN());	  Real    real    =    rhs.get(rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
174	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getX());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getX());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getX());	  Real    real    =    rhs.get(rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
175	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getID());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getID());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getID());	  Real    real    =    rhs.get(rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
176	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getDestination());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getDestination());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getDestination());	  Real    real    =    rhs.get(rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
177	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
178	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
179	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(null,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(null,  null);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(null,  null);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
180	[BUG]  [BUGGY]  Real  real  =  rhs.real  &&  imaginary  *  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  &&  imaginary  *  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  &&  imaginary  *  rhs.imaginary;	  Real    real    =    rhs.real    ||    imaginary    *    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
181	[BUG]  [BUGGY]  Real  real  =  rhs.real  -  imaginary  *  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  -  imaginary  *  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  -  imaginary  *  rhs.imaginary;	  Real    real    =    rhs.real    ||    imaginary    *    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
182	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  *  rhs.imaginar;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary  *  rhs.imaginar;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  *  rhs.imaginar;	  Real    real    =    rhs.real    ||    imaginary    *    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
183	[BUG]  [BUGGY]  Real  rhs  =  real.get(rhs.real);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  real.get(rhs.real);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  real.get(rhs.real);	  Real    rhs    =    real.get(rhs);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
184	[BUG]  [BUGGY]  Real  rhs  =  this.real.get(rhs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  this.real.get(rhs);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  this.real.get(rhs);	  Real    rhs    =    real.get(rhs);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
185	[BUG]  [BUGGY]  Real  rhs  =  real.multiply(rhs);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  real.multiply(rhs);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  real.multiply(rhs);	  Real    rhs    =    real.get(rhs);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
186	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
187	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
188	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real,  rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real,  rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real,  rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
189	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType())+  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType())+  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType())+  1;	  Real    real    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
190	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType()  +  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType()  +  1);	  Real    real    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
191	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType())-  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType())-  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType())-  1;	  Real    real    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
192	[BUG]  [BUGGY]  rhs.setDenominator(d);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  rhs.setDenominator(d);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	rhs.setDenominator(d);	  rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
193	[BUG]  [BUGGY]  Real  real  =  rhs.real  &&  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  &&  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  &&  rhs.imaginary;	  Real    real    =    rhs.real    ||    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
194	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary  ||  denominator;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary  ||  denominator;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.imaginary  ||  denominator;	  Real    real    =    rhs.real    ||    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
195	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getMask())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getMask())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getMask())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
196	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.getMask()  ==  rhs.getMask())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  rhs.getMask()  ==  rhs.getMask())  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  rhs.getMask()  ==  rhs.getMask())  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
197	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isNaN(real)&&  Double.isNaN(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isNaN(real)&&  Double.isNaN(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())&&  Double.isNaN(real)&&  Double.isNaN(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
198	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getCurrentToken())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getCurrentToken())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getCurrentToken())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getCurrentToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
199	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getDestination())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getDestination())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.getDestination())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getCurrentToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
200	[BUG]  [BUGGY]  Real  real  =  imaginary  *  rhs.real  ||  rhs.imaginary  *  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  imaginary  *  rhs.real  ||  rhs.imaginary  *  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  imaginary  *  rhs.real  ||  rhs.imaginary  *  rhs.imaginary;	  Real    real    =    rhs.real    ||    imaginary    *    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
201	[BUG]  [BUGGY]  Real  rhs  =  rhs.getImaginary();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getImaginary();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getImaginary();	  Real    rhs    =    rhs.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
202	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNaN()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getNaN()  +  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getNaN()  +  1;	  Real    rhs    =    rhs.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
203	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.getINF()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  rhs.getINF()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  rhs.getINF()  ||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
204	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(null,  ZERO);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(null,  ZERO);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(null,  ZERO);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
205	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getX())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getX())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getX())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getX())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
206	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
207	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumNumber());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumNumber());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMaximumNumber());	  Real    real    =    rhs.get(rhs.getNumber());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
208	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNode())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNode())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNode())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNode())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
209	[BUG]  [BUGGY]  Real  rhs  =  rhs.getDestinator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getDestinator();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getDestinator();	  Real    rhs    =    rhs.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
210	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNode())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
211	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination(),  ZERO);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDestination(),  ZERO);	  Real    rhs    =    getDenominator(rhs.getDestination());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
212	[BUG]  [BUGGY]  real  real  =  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  real  real  =  rhs.getNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	real  real  =  rhs.getNaN();	  Real    real    =    rhs.getNaN()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
213	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real)+  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(real)+  1L;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(real)+  1L;	  Real    rhs    =    rhs.get(real)+    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
214	[BUG]  [BUGGY]  Real  real  =  rhs.real  -  rhs.real;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  -  rhs.real;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  -  rhs.real;	  Real    real    =    rhs.real    ||    rhs.real!=    null;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
215	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
216	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isNaN(imaginary)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
217	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
218	[BUG]  [BUGGY]  if(Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getImaginary()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getImaginary()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getImaginary()))  {	  if(Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF()))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
219	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
220	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
221	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(rhs.d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
222	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMinimumFractionDigits());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMinimumFractionDigits());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMinimumFractionDigits());	  Real    real    =    rhs.get(rhs.getMaximumFractionDigits());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
223	[BUG]  [BUGGY]  Real  real  =  rhs.real  -  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  -  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  -  rhs.imaginary;	  Real    real    =    rhs.real    ||    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
224	[BUG]  [BUGGY]  Real  real  =  rhs.real?  rhs.real  :  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real?  rhs.real  :  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real?  rhs.real  :  rhs.imaginary;	  Real    real    =    rhs.real    ||    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
225	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isFunction(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isFunction(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isFunction(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
226	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  ZERO);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType(),  ZERO);	  Real    real    =    rhs.get(rhs.getType(),    denominator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
227	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  imaginary);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType(),  imaginary);	  Real    real    =    rhs.get(rhs.getType(),    denominator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
228	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
229	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs,  ZERO);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs,  ZERO);	  Real    rhs    =    getDenominator(rhs);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
230	[BUG]  [BUGGY]  Real  real  =  rhs.real  &&  imaginary  >  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  &&  imaginary  >  rhs.imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  &&  imaginary  >  rhs.imaginary;	  Real    real    =    rhs.real    ||    imaginary    >    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
231	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getType());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(real.getType());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(real.getType());	  Real    rhs    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
232	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getDimension());	  Real    rhs    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
233	[BUG]  [BUGGY]  rhs.setDenominator(real);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  rhs.setDenominator(real);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	rhs.setDenominator(real);	  rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
234	[BUG]  [BUGGY]  rhs.setDenominator(imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  rhs.setDenominator(imaginary);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	rhs.setDenominator(imaginary);	  rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
235	[BUG]  [BUGGY]  rhs.setDenominator(null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  rhs.setDenominator(null);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	rhs.setDenominator(null);	  rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
236	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
237	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.getINF)||  Double.isInfinite(rhs.getINF))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.getINF)||  Double.isInfinite(rhs.getINF))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.getINF)||  Double.isInfinite(rhs.getINF))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
238	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
239	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
240	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
241	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.getY()))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.getY()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.getY()))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
242	[BUG]  [BUGGY]  Real  real  =  rhs.real  /  rhs.real;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  /  rhs.real;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  /  rhs.real;	  Real    real    =    rhs.real    ||    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
243	[BUG]  [BUGGY]  Real  real  =  rhs.real  &&  rhs.real.isNaN();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  &&  rhs.real.isNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  &&  rhs.real.isNaN();	  Real    real    =    rhs.real    ||    rhs.real.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
244	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary.isNaN();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imaginary.isNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary.isNaN();	  Real    real    =    rhs.real    ||    rhs.real.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
245	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary.isNaN();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary.isNaN();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.imaginary.isNaN();	  Real    real    =    rhs.real    ||    rhs.real.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
246	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(q)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(q)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(q)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
247	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
248	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
249	[BUG]  [BUGGY]  Real  rhs  =  d  <  rhs.get(rhs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  d  <  rhs.get(rhs);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  d  <  rhs.get(rhs);	  Real    rhs    =    rhs.get(d);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
250	[BUG]  [BUGGY]  Real  rhs  =  d  <  rhs.get(rhs.node);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  d  <  rhs.get(rhs.node);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  d  <  rhs.get(rhs.node);	  Real    rhs    =    rhs.get(d);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
251	[BUG]  [BUGGY]  Real  rhs  =  d  <  rhs.get(rhs.number);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  d  <  rhs.get(rhs.number);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  d  <  rhs.get(rhs.number);	  Real    rhs    =    rhs.get(d);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
252	[BUG]  [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(isNaN()  ||  Double.isNaN(rhs)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(isNaN()  ||  Double.isNaN(rhs)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
253	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getToken())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getToken())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getToken())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
254	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite	  if(Double.isNaN(rhs.getToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
255	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  ZERO);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDimension(),  ZERO);	  Real    rhs    =    getDenominator(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
256	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  0.5);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension(),  0.5);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDimension(),  0.5);	  Real    rhs    =    getDenominator(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
257	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
258	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.getINF))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.getINF))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isNaN(rhs.getINF)||  Double.isInfinite(rhs.getINF))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
259	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getReal())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getReal())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getReal())||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isNaN(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
260	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
261	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
262	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
263	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getImaginary()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getImaginary()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getImaginary()))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
264	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
265	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nextToken())||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
266	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getINF())&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
267	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
268	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMask(),  rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMask(),  rhs.getDenominator());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMask(),  rhs.getDenominator());	  Real    real    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
269	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMask()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMask()  +  1);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMask()  +  1);	  Real    real    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
270	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
271	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
272	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  rhs);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  rhs);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(real,  rhs);	  Real    rhs    =    Complex.getInstance(rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
273	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  Complex.getInstance(null);  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(null);	  Real    rhs    =    Complex.getInstance(rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
274	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
275	[BUG]  [BUGGY]  Real  real  =  rhs.getDimension();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getDimension();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getDimension();	  Real    real    =    rhs.getInf();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
276	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
277	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
278	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
279	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
280	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(imaginary)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
281	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
282	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getModule())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getModule())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getModule())||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.native)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
283	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getImaginary());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getImaginary());	  Real    rhs    =    getDenominator(rhs.getDestination());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
284	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getMask());	  Real    rhs    =    getDenominator(rhs.getDestination());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
285	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
286	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.getToken())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
287	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
288	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
289	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imagined!=  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imagined!=  null;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imagined!=  null;	  Real    real    =    rhs.real    ||    rhs.real!=    null;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
290	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
291	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
292	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.getNumber()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.getNumber()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.getNumber()))  {	  if(Double.isNaN(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
293	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.get(real)-  1;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(real)-  1;	  Real    rhs    =    rhs.get(real)+    1;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
294	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
295	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.getDenominator());  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(rhs.getDenominator());	  Real    rhs    =    Complex.getInstance(rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
296	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
297	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
298	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary  ||  imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary  ||  imaginary;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.imaginary  ||  imaginary;	  Real    real    =    rhs.real    ||    rhs.imaginary;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
299	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
300	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
301	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.getINF())||    Double.isInfinite(rhs.getINF()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
302	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
303	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
304	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nano())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nano())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.nano())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(rhs.c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
305	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs	  if(Double.isNaN(rhs.real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
306	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
307	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
308	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
309	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNode())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNode())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
310	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
311	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nativeObject)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.nativeObject)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nativeObject)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
312	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nativeReal)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.nativeReal)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nativeReal)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
313	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
314	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getValue());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getValue());	  Real    real    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
315	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
316	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
317	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
318	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
319	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getRawClass())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getRawClass())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getRawClass())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
320	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
321	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
322	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
323	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getDimension(),  0.5);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getDimension(),  0.5);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getDimension(),  0.5);	  Real    real    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
324	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getDimension(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getDimension(),  ZERO);  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getDimension(),  ZERO);	  Real    real    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
325	[BUG]  [BUGGY]  Real  real  =  rhs.getDenu();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.getDenu();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getDenu();	  Real    real    =    rhs.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
326	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
327	[BUG]  [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isNaN(rhs.next)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isNaN(rhs.next)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.next)||  Double.isNaN(rhs.next)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.next)||    Double.isInfinite(rhs.next)||    Double.isInfinite(rhs.next))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
328	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imagined;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.real  ||  imagined;  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imagined;	  Real    real    =    rhs.real    ||    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
329	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isNaN(real)||    Double.isNaN(rhs.real)||    Double.isNaN(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
330	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getCurrentToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
331	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getY())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getY())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getY())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getX())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
332	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getX())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
333	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getN())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getN())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isNaN(rhs.getN())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getX())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
334	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMask(),  rhs.getMaximumFractionDigits());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  real  =  rhs.get(rhs.getMask(),  rhs.getMaximumFractionDigits());  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMask(),  rhs.getMaximumFractionDigits());	  Real    real    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
335	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nativeReal)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.nativeReal)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nativeReal)||  Double.isNaN(rhs.nativeReal)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
336	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.getDenominator())||  Double.isInfinite(rhs.getImaginary()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.getDenominator())||  Double.isInfinite(rhs.getImaginary()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.getDenominator())||  Double.isInfinite(rhs.getImaginary()))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
337	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
338	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
339	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(rhs.getDenominator())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(c)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
340	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.nextToken())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
341	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isNaN(rhs.nextToken())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
342	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
343	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)	  if(Double.isNaN(rhs.getINF())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
344	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
345	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real))  {	  if(!Double.isNaN(rhs.getNumber())&&    Double.isInfinite(real)&&    Double.isInfinite(rhs.real)&&    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
346	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isNaN(real)&&  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isNaN(real)&&  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())&&  Double.isNaN(real)&&  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(!Double.isNaN(rhs.getNumber())&&    Double.isInfinite(real)&&    Double.isInfinite(rhs.real)&&    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
347	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.native)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.native)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isNaN(rhs.native)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.native)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
348	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.native)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
349	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
350	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.real)||    Double.isInfinite(rhs.node)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
351	[BUG]  [BUGGY]  Real  rhs  =  rhs.getRandom();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  Real  rhs  =  rhs.getRandom();  [BUGGY]      if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getRandom();	  Real    rhs    =    rhs.getRoot();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
352	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.getImaginary())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
353	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.getReal())||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.getReal())||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.getReal())||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
354	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getMask())||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getMask())||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
355	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getReal())||  Double.isNaN(rhs.getReal())||  Double.isInfinite(rhs.getReal()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }      [BUGGY]  if(Double.isNaN(rhs.getReal())||  Double.isNaN(rhs.getReal())||  Double.isInfinite(rhs.getReal()))  {  [BUGGY]      Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getReal())||  Double.isNaN(rhs.getReal())||  Double.isInfinite(rhs.getReal()))  {	  if(Double.isNaN(real)||    Double.isNaN(imaginary)||    Double.isNaN(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
