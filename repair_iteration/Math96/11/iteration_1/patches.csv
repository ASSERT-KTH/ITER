bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(c);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.get(c);  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(c);	      Real    rhs    =    rhs.get(real);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(d);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.get(d);  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(d);	      Real    rhs    =    rhs.get(real);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.get(null);  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(null);	      Real    rhs    =    rhs.get(real);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.real;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  rhs.real;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.real;	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.real!=  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  rhs.real!=  null;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.real!=  null;	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  <  rhs.real;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  imaginary  <  rhs.real;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  <  rhs.real;	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
9	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(rhs.c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
10	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.nextToken())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  Real  real  =  rhs.getDenominator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.getDenominator();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getDenominator();	      Real    real    =    rhs.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  Real  real  =  rhs.getReal();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.getReal();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getReal();	      Real    real    =    rhs.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  Real  rhs  =  rhs.getN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getN();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getN();	      Real    rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  Real  rhs  =  rhs.getDestination();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getDestination();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getDestination();	      Real    rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isInfinite(rhs.real)||  Double.isNaN(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getX())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.get(rhs.getType()  -  1);  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType()  -  1);	      Real    real    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMask());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.get(rhs.getMask());  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMask());	      Real    real    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getNumber());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.get(rhs.getNumber());  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getNumber());	      Real    real    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  denominator);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.get(rhs.getType(),  denominator);  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getType(),  denominator);	      Real    real    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  Real  rhs  =  rhs.getRootClass();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getRootClass();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getRootClass();	      Real    rhs    =    rhs.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getNaN();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getNaN();	      Real    rhs    =    rhs.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isInfinite(rhs.real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.next)||  Double.isInfinite(rhs.next)||  Double.isInfinite(rhs.next))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  Real  rhs  =  rhs.getINFParent();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getINFParent();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getINFParent();	      Real    rhs    =    rhs.getRawParent();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  Real  rhs  =  rhs.getRootParent();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getRootParent();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getRootParent();	      Real    rhs    =    rhs.getRawParent();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  Real  rhs  =  rhs.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getParent();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getParent();	      Real    rhs    =    rhs.getRawParent();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getCurrentToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getCurrentToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  Real  real  =  rhs.getN();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.getN();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getN();	      Real    real    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  Real  real  =  rhs.getDestination();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.getDestination();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getDestination();	      Real    real    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  Real  rhs  =  rhs.getRoot();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getRoot();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getRoot();	      Real    rhs    =    rhs.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
47	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(c)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
48	[BUG]  [BUGGY]  Real  real  =  rhs.getNaN()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.getNaN()  +  1;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getNaN()  +  1;	      Real    real    =    rhs.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask());  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getMask());	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getType());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.get(rhs.getType());  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(rhs.getType());	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  Complex.getInstance(rhs);  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  Complex.getInstance(rhs);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  Real  rhs  =  real.get(rhs);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  real.get(rhs);  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  real.get(rhs);	      Real    rhs    =    rhs.get(real);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.get(real)+  1;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.get(real)+  1;	      Real    rhs    =    rhs.get(real);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(rhs.native)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getDimension());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.get(rhs.getDimension());  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getDimension());	      Real    real    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  *  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  imaginary  *  rhs.imaginary;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  *  rhs.imaginary;	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  <  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  imaginary  <  rhs.imaginary;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  <  rhs.imaginary;	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  imaginary  >  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  imaginary  >  rhs.imaginary;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  imaginary  >  rhs.imaginary;	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(!Double.isNaN(rhs.getNumber())&&  Double.isInfinite(real)&&  Double.isInfinite(rhs.real)&&  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  getDenominator(rhs);  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  getDenominator(rhs.getDimension());  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDimension());	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination());  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  getDenominator(rhs.getDestination());	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.real)||  Double.isInfinite(rhs.node)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getNode())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNode())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  Real  rhs  =  rhs.getDenominator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getDenominator();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getDenominator();	      Real    rhs    =    rhs.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
73	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(d)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
74	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nextToken())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.nextToken())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
75	[BUG]  [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.native)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  if(Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.getINF()))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  Real  rhs  =  rhs.getReal();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  rhs  =  rhs.getReal();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  rhs  =  rhs.getReal();	      Real    rhs    =    rhs.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  Real  real  =  rhs.getInf();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.getInf();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.getInf();	      Real    real    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getMask())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getMask())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
81	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  rhs.imaginary;  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.imaginary;	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  Real  real  =  rhs.real  ||  rhs.real.isNaN();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.real  ||  rhs.real.isNaN();  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.real  ||  rhs.real.isNaN();	      Real    real    =    rhs.real;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.get(rhs.getINF());  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getINF());	      Real    real    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  Real  real  =  rhs.get(rhs.getMaximumFractionDigits());  [BUGGY]    if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	Real  real  =  rhs.get(rhs.getMaximumFractionDigits());	      Real    real    =    rhs.get(rhs.getType());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
85	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
87	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.getNumber())||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
88	[BUG]  [BUGGY]  rhs.setDenominator(denominator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  rhs.setDenominator(denominator);  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	rhs.setDenominator(denominator);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
89	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isNaN(imaginary)||  Double.isNaN(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
90	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(rhs.getINF())||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(real)||    Double.isInfinite(imaginary)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.getINF())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getINF())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
92	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }    [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {  [BUGGY]    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isNaN(real)||  Double.isNaN(rhs.real)||  Double.isNaN(rhs.imaginary))  {	  if(Double.isNaN(rhs.node)||    Double.isInfinite(real)||    Double.isInfinite(rhs.real)||    Double.isInfinite(rhs.imaginary))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
