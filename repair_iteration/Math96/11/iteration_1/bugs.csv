bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isNaN(rhs.node)||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.node)||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isNaN(rhs.nextToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.nextToken())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	  	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]    Real  real  =  rhs.getINF();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  real  =  rhs.getINF();  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  real  =  rhs.getINF();		non-compiled	[CE]  illegal  start  of  expression	22	None	add
6	[BUG]  [BUGGY]    Real  rhs  =  rhs.getINF();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  rhs  =  rhs.getINF();  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  rhs  =  rhs.getINF();		non-compiled	[CE]  illegal  start  of  expression	22	None	add
7	[BUG]  [BUGGY]    Real  rhs  =  rhs.getRaw();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  rhs  =  rhs.getRaw();  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  rhs  =  rhs.getRaw();		non-compiled	[CE]  illegal  start  of  expression	22	None	add
8	[BUG]  [BUGGY]    Real  real  =  rhs.real;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  real  =  rhs.real;  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  real  =  rhs.real;		non-compiled	[CE]  illegal  start  of  expression	22	None	add
9	[BUG]  [BUGGY]    Real  real  =  rhs.get(rhs.getType());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  real  =  rhs.get(rhs.getType());  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  real  =  rhs.get(rhs.getType());		non-compiled	[CE]  illegal  start  of  expression	22	None	add
10	[BUG]  [BUGGY]    Real  real  =  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  real  =  rhs.getNaN();  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  real  =  rhs.getNaN();		non-compiled	[CE]  illegal  start  of  expression	22	None	add
11	[BUG]  [BUGGY]    Real  real  =  rhs.getImaginary();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  real  =  rhs.getImaginary();  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  real  =  rhs.getImaginary();		non-compiled	[CE]  illegal  start  of  expression	22	None	add
12	[BUG]  [BUGGY]    Real  rhs  =  rhs.get(real);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  rhs  =  rhs.get(real);  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  rhs  =  rhs.get(real);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
13	[BUG]  [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isNaN(real)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(real)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
14	[BUG]  [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]    Real  rhs  =  rhs.getRawClass();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  rhs  =  rhs.getRawClass();  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  rhs  =  rhs.getRawClass();		non-compiled	[CE]  illegal  start  of  expression	22	None	add
16	[BUG]  [BUGGY]    Real  rhs  =  rhs.getRawParent();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]    Real  rhs  =  rhs.getRawParent();  [BUGGY]  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||    Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	    Real  rhs  =  rhs.getRawParent();		non-compiled	[CE]  illegal  start  of  expression	22	None	add
17	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isNaN(rhs)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs)||  Double.isInfinite(imaginary)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  Complex  multiply(Complex  rhs)  {  if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  [BUGGY]  if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  [BUGGY]  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.2773500981126146	358	359	1	replace	if(Double.isNaN(rhs.getNumber())||  Double.isInfinite(real)||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {	if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
