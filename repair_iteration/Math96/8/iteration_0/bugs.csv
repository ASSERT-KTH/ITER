bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
15	[BUG] [BUGGY] return createComplex(real * rhs.real - imaginary * rhs.imaginary, real * rhs.imaginary + imaginary * rhs.real); [FE] AssertionFailedError [CONTEXT] public Complex multiply(Complex rhs) { if (isNaN() || rhs.isNaN()) { return NaN; } if (Double.isInfinite(real) || Double.isInfinite(imaginary) || Double.isInfinite(rhs.real)|| Double.isInfinite(rhs.imaginary)) {  return INF; } [BUGGY] return createComplex(real * rhs.real - imaginary * rhs.imaginary,    real * rhs.imaginary + imaginary * rhs.real); [BUGGY] real * rhs.imaginary + imaginary * rhs.real); } [CLASS] Complex [METHOD] multiply [RETURN_TYPE] Complex  Complex rhs [VARIABLES] boolean double c d denominator imaginary q real long serialVersionUID Complex I INF NaN ONE ZERO rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.3333333333333333	363	364	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public Complex multiply(Complex rhs) { if (isNaN() || rhs.isNaN()) { return NaN; } if (Double.isInfinite(real) || Double.isInfinite(imaginary) || Double.isInfinite(rhs.real)|| Double.isInfinite(rhs.imaginary)) {  return INF; } [BUGGY] [BUGGY] return createComplex(real * rhs.real - imaginary * rhs.imaginary,    real * rhs.imaginary + imaginary * rhs.real); real * rhs.imaginary + imaginary * rhs.real); } [CLASS] Complex [METHOD] multiply [RETURN_TYPE] Complex  Complex rhs [VARIABLES] boolean double c d denominator imaginary q real long serialVersionUID Complex I INF NaN ONE ZERO rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.3333333333333333	363	364	1	add	
