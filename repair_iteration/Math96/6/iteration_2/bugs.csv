bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  ret  =  other.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  other.isNaN();  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  other.isNaN();	      ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  ret  =  this.isNaN()  ||  this.isNaN();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  this.isNaN()  ||  this.isNaN();  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  this.isNaN()  ||  this.isNaN();	      ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  rhs  =  other.getRhs();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  rhs  =  other.getRhs();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	rhs  =  other.getRhs();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  Object  rhs  =  other.getRhs();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Object  rhs  =  other.getRhs();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Object  rhs  =  other.getRhs();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  boolean  rhs  =  other.getRhs().equals(real);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  boolean  rhs  =  other.getRhs().equals(real);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  other.getRhs().equals(real);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  Double  rhs  =(Double)other.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Double  rhs  =(Double)other.getValue();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Double  rhs  =(Double)other.getValue();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
19	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary));  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary));	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator));  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator));	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d));  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d));	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawComplex();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.getRawComplex();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawComplex();	  Complex    rhs    =    other.getComplex();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  Complex  rhs  =  other.getRhs();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.getRhs();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRhs();	  Complex    rhs    =    other.getComplex();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  Complex  rhs  =  this.real;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  this.real;  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.real;	  Complex    rhs    =    other;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  Complex  rhs  =  other.real;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.real;  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.real;	  Complex    rhs    =    other;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
39	[BUG]  [BUGGY]  Complex  rhs  =  this.getRaw();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  this.getRaw();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getRaw();	  Complex    rhs    =    other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  Complex  rhs  =  other.getRoot();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.getRoot();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRoot();	  Complex    rhs    =    other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  Complex  rhs  =  other.getDestination();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.getDestination();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getDestination();	  Complex    rhs    =    other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getDenominator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =(Complex)other.getDenominator();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getDenominator();	  Complex    rhs    =(Complex)other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getReal();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =(Complex)other.getReal();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getReal();	  Complex    rhs    =(Complex)other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getDestination();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =(Complex)other.getDestination();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getDestination();	  Complex    rhs    =(Complex)other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  ret  =  this.isNaN()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  this.isNaN()  +  1;  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  this.isNaN()  +  1;	      ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  other.getRawComposite();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ReflectionComposite  rhs  =  other.getRawComposite();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  other.getRawComposite();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  other.reflectionComposite();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ReflectionComposite  rhs  =  other.reflectionComposite();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  other.reflectionComposite();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRawClass();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =(Complex)other.getRawClass();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRawClass();	  Complex    rhs    =(Complex)other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  Complex  rhs  =  other.getReal();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.getReal();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getReal();	  Complex    rhs    =    other.getComplex();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()));  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()));	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawClass();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.getRawClass();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawClass();	  Complex    rhs    =    other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
61	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits	      ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawParent();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  other.getRawParent();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawParent();	  Complex    rhs    =    other.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
66	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  Complex  rhs  =  this.getComplex();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  Complex  rhs  =  this.getComplex();  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getComplex();	  Complex    rhs    =    other.getComplex();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  boolean  rhs  =  other.getRhs().equals(this);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  boolean  rhs  =  other.getRhs().equals(this);  [BUGGY]    if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  other.getRhs().equals(this);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  [BUGGY]    Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary())	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
