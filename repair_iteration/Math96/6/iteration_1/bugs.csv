bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Complex  rhs  =  other.getComplex();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]  Complex  rhs  =  other.getComplex();  [BUGGY]  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getComplex();	Complex  rhs  =  (Complex)other;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRaw();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]  Complex  rhs  =(Complex)other.getRaw();  [BUGGY]  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRaw();	Complex  rhs  =  (Complex)other;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    [BUGGY]  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	  	Complex  rhs  =  (Complex)other;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]    ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL		non-compiled	[CE]  illegal  start  of  expression	12	None	add
5	[BUG]  [BUGGY]    ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits		non-compiled	[CE]  illegal  start  of  expression	12	None	add
6	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real));  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real));		non-compiled	[CE]  illegal  start  of  expression	12	None	add
7	[BUG]  [BUGGY]  Complex  rhs  =  other;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]  Complex  rhs  =  other;  [BUGGY]  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other;	Complex  rhs  =  (Complex)other;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(		non-compiled	[CE]  illegal  start  of  expression	12	None	add
9	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(		non-compiled	[CE]  illegal  start  of  expression	12	None	add
10	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits		non-compiled	[CE]  illegal  start  of  expression	12	None	add
11	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(		non-compiled	[CE]  illegal  start  of  expression	12	None	add
12	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(		non-compiled	[CE]  illegal  start  of  expression	12	None	add
13	[BUG]  [BUGGY]    ret  =  this.isNaN();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  this.isNaN();  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  this.isNaN();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
14	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(		non-compiled	[CE]  illegal  start  of  expression	12	None	add
15	[BUG]  [BUGGY]    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	    ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(		non-compiled	[CE]  illegal  start  of  expression	12	None	add
16	[BUG]  [BUGGY]  Complex  rhs  =  other.getRaw();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  [BUGGY]  Complex  rhs  =  other.getRaw();  [BUGGY]  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRaw();	Complex  rhs  =  (Complex)other;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
