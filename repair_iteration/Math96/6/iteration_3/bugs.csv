bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
4	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)    {    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
6	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)    {    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
7	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)  {  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)    {    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
8	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)  {  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)  {  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)  {  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)    {    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
9	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  Complex  rhs  =  other.getRal();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRal();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRal();	  Complex    rhs    =    other.getReal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
12	[BUG]  [BUGGY]  Complex  rhs  =  other.getRandom();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRandom();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRandom();	  Complex    rhs    =    other.getReal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
13	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
14	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
15	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
16	[BUG]  [BUGGY]  Complex  rhs  =  this.getRawClass();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getRawClass();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getRawClass();	  Complex    rhs    =    other.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
17	[BUG]  [BUGGY]  Complex  rhs  =  other.getRootClass();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRootClass();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRootClass();	  Complex    rhs    =    other.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
18	[BUG]  [BUGGY]  Complex  rhs  =  this.getRoot();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getRoot();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getRoot();	  Complex    rhs    =    other.getRoot();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
19	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  ret  =  this.isNaN()  &&  this.isNaN();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  this.isNaN()  &&  this.isNaN();  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  this.isNaN()  &&  this.isNaN();	  ret    =    this.isNaN()    ||    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary));	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
23	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator));	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
24	[BUG]  [BUGGY]  boolean  rhs  =  other.getRhs()!=  null?  false  :  other.getRhs().equals(this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  other.getRhs()!=  null?  false  :  other.getRhs().equals(this);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  other.getRhs()!=  null?  false  :  other.getRhs().equals(this);	  boolean    rhs    =    other.getRhs().equals(this);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
25	[BUG]  [BUGGY]  boolean  rhs  =  other.getRhs()  ==  null?  false  :  other.getRhs().equals(this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  other.getRhs()  ==  null?  false  :  other.getRhs().equals(this);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  other.getRhs()  ==  null?  false  :  other.getRhs().equals(this);	  boolean    rhs    =    other.getRhs().equals(this);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
26	[BUG]  [BUGGY]  boolean  rhs  =  this.getRhs().equals(other.getRhs());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  this.getRhs().equals(other.getRhs());  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  this.getRhs().equals(other.getRhs());	  boolean    rhs    =    other.getRhs().equals(this);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
27	[BUG]  [BUGGY]  Object  rhs  =  this.getRhs();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Object  rhs  =  this.getRhs();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Object  rhs  =  this.getRhs();	  Object    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  Object  rhs  =  other.getRoot();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Object  rhs  =  other.getRoot();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Object  rhs  =  other.getRoot();	  Object    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  Object  rhs  =  other.getReal();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Object  rhs  =  other.getReal();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Object  rhs  =  other.getReal();	  Object    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  Complex  rhs  =  this.getRhs();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getRhs();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getRhs();	  Complex    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
31	[BUG]  [BUGGY]  Complex  rhs  =  other.getRhs(false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRhs(false);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRhs(false);	  Complex    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
32	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  this.getRawComposite();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  this.getRawComposite();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  this.getRawComposite();	  ReflectionComposite    rhs    =    other.getRawComposite();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
33	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  other.getReal();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  other.getReal();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  other.getReal();	  ReflectionComposite    rhs    =    other.getRawComposite();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
34	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  other.getINF();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  other.getINF();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  other.getINF();	  ReflectionComposite    rhs    =    other.getRawComposite();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
35	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawDestination();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRawDestination();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawDestination();	  Complex    rhs    =    other.getDestination();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
36	[BUG]  [BUGGY]  Complex  rhs  =  other.getDestinator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getDestinator();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getDestinator();	  Complex    rhs    =    other.getDestination();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
37	[BUG]  [BUGGY]  Complex  rhs  =(real  ==  null)?  this.real  :  real;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(real  ==  null)?  this.real  :  real;  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(real  ==  null)?  this.real  :  real;	  Complex    rhs    =    this.real;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
38	[BUG]  [BUGGY]  Complex  rhs  =(real  ==  null)?  this.real  :  other.real;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(real  ==  null)?  this.real  :  other.real;  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(real  ==  null)?  this.real  :  other.real;	  Complex    rhs    =    this.real;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
39	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
41	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
42	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
43	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
48	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
49	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
54	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
55	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRawDenominator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getRawDenominator();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRawDenominator();	  Complex    rhs    =(Complex)other.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
58	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRawDiminator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getRawDiminator();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRawDiminator();	  Complex    rhs    =(Complex)other.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
59	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
60	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
63	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
64	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
65	[BUG]  [BUGGY]  ret  =  other.isNaN()  ||  this.isNaN();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  other.isNaN()  ||  this.isNaN();  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  other.isNaN()  ||  this.isNaN();	  ret    =    other.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  ret  =  real.isNaN();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  real.isNaN();  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  real.isNaN();	  ret    =    other.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
68	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
69	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
70	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
71	[BUG]  [BUGGY]  Complex  rhs  =  this.getRawComplex();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getRawComplex();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getRawComplex();	  Complex    rhs    =    other.getRawComplex();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
72	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
73	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
74	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
75	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
76	[BUG]  [BUGGY]  Double  rhs  =(Double)other.getKey();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Double  rhs  =(Double)other.getKey();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Double  rhs  =(Double)other.getKey();	  Double    rhs    =(Double)other.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  Double  rhs  =(Double)other.getRawValue();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Double  rhs  =(Double)other.getRawValue();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Double  rhs  =(Double)other.getRawValue();	  Double    rhs    =(Double)other.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  Double  rhs  =(Double)other.getDenominator();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Double  rhs  =(Double)other.getDenominator();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Double  rhs  =(Double)other.getDenominator();	  Double    rhs    =(Double)other.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRootClass();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getRootClass();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRootClass();	  Complex    rhs    =(Complex)other.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
80	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
81	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
84	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
85	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()));	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
86	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
87	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
88	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d));	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
89	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d));	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
90	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real));	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
91	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
92	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
93	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
94	[BUG]  [BUGGY]  rhs  =  this.getRhs();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  rhs  =  this.getRhs();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	rhs  =  this.getRhs();	  rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
95	[BUG]  [BUGGY]  rhs  =  other.getRoot();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  rhs  =  other.getRoot();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	rhs  =  other.getRoot();	  rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
96	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
97	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
98	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
99	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
100	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
101	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRal();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getRal();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRal();	  Complex    rhs    =(Complex)other.getReal();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
103	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
104	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
105	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
106	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
107	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(rhs)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
108	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
109	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
110	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
111	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
112	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary())	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(rhs.getImaginary())    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
113	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(rhs.getImaginary())    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
114	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
115	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
116	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
117	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
118	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
119	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  this.reflectionComposite();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  this.reflectionComposite();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  this.reflectionComposite();	  ReflectionComposite    rhs    =    other.reflectionComposite();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
120	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  other.getReflectionComposite();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  other.getReflectionComposite();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  other.getReflectionComposite();	  ReflectionComposite    rhs    =    other.reflectionComposite();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
121	[BUG]  [BUGGY]  boolean  rhs  =  real.getRhs().equals(other.getRhs());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  real.getRhs().equals(other.getRhs());  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  real.getRhs().equals(other.getRhs());	  boolean    rhs    =    other.getRhs().equals(real);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
122	[BUG]  [BUGGY]  boolean  rhs  =  real.getRhs().equals(other);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  real.getRhs().equals(other);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  real.getRhs().equals(other);	  boolean    rhs    =    other.getRhs().equals(real);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
123	[BUG]  [BUGGY]  boolean  rhs  =  other.getRhs().equals(imaginary);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  other.getRhs().equals(imaginary);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  other.getRhs().equals(imaginary);	  boolean    rhs    =    other.getRhs().equals(real);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
124	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
125	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(denominator)||  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
126	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawRoot();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRawRoot();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawRoot();	  Complex    rhs    =    other.getRawParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
127	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawComposite();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRawComposite();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawComposite();	  Complex    rhs    =    other.getRawParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
128	[BUG]  [BUGGY]  Complex  rhs  =  this.getRawParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getRawParent();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getRawParent();	  Complex    rhs    =    other.getRawParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
129	[BUG]  [BUGGY]  Complex  rhs  =  this.getINF();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getINF();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getINF();	  Complex    rhs    =    this.getComplex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
130	[BUG]  [BUGGY]  Complex  rhs  =  other.getRhs(real);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRhs(real);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRhs(real);	  Complex    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
131	[BUG]  [BUGGY]  Complex  rhs  =  other.getRhs(this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRhs(this);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRhs(this);	  Complex    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
132	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(rhs.getImaginary())    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
133	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getReal())  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getReal())  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getReal())	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(rhs.getImaginary())    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
134	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(rhs.getImaginary())    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
135	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
136	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  other.getComposite();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  other.getComposite();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  other.getComposite();	  ReflectionComposite    rhs    =    other.reflectionComposite();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
137	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  >=  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  >=  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)  >=  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
138	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
139	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)!=  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)!=  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(real)!=  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
140	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRawDimension();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getRawDimension();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRawDimension();	  Complex    rhs    =(Complex)other.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
141	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
142	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
143	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(rhs)  ==  Double.doubleToRawLongBits(real)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
144	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
145	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
146	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
147	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
148	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
149	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawCommon();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRawCommon();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawCommon();	  Complex    rhs    =    other.getRawComplex();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
150	[BUG]  [BUGGY]  Complex  rhs  =  other.getRadius();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRadius();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRadius();	  Complex    rhs    =    other.getReal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
151	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
152	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
153	[BUG]  [BUGGY]  rhs  =  other.getRhs(real);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  rhs  =  other.getRhs(real);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	rhs  =  other.getRhs(real);	  rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
154	[BUG]  [BUGGY]  rhs  =  other.getRhs(false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  rhs  =  other.getRhs(false);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	rhs  =  other.getRhs(false);	  rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
155	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(real));	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(denominator));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
156	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
157	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
158	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
159	[BUG]  [BUGGY]  ret  =  this.isNaN()  ||  other.isNaN();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  this.isNaN()  ||  other.isNaN();  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  this.isNaN()  ||  other.isNaN();	  ret    =    this.isNaN()    ||    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
160	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
161	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getINF();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getINF();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getINF();	  Complex    rhs    =(Complex)other.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
162	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
163	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
164	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(imaginary)||  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
165	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
166	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
167	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
168	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
169	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(null)&&  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
170	[BUG]  [BUGGY]  boolean  rhs  =  other.getRhs()!=  null  &&  other.getRhs().equals(this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  other.getRhs()!=  null  &&  other.getRhs().equals(this);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  other.getRhs()!=  null  &&  other.getRhs().equals(this);	  boolean    rhs    =    other.getRhs().equals(this);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
171	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
172	[BUG]  [BUGGY]  double  rhs  =(Double)other.getValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  double  rhs  =(Double)other.getValue();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	double  rhs  =(Double)other.getValue();	  Double    rhs    =(Double)other.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
173	[BUG]  [BUGGY]  Complex  rhs  =  other  ==  null?  null  :  other.real;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other  ==  null?  null  :  other.real;  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other  ==  null?  null  :  other.real;	  Complex    rhs    =    other.real;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
174	[BUG]  [BUGGY]  Complex  rhs  =  other!=  null?  null  :  other.real;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other!=  null?  null  :  other.real;  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other!=  null?  null  :  other.real;	  Complex    rhs    =    other.real;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
175	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
176	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
177	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
178	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d));	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
179	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)&&	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
180	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
181	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
182	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
183	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  <  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
184	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)||    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
185	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  other.getINFComposite();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  other.getINFComposite();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  other.getINFComposite();	  ReflectionComposite    rhs    =    other.getRawComposite();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
186	[BUG]  [BUGGY]  Complex  rhs  =  this.getRadius();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getRadius();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getRadius();	  Complex    rhs    =    this.getComplex();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
187	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
188	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d))  &&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary))&&(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
189	[BUG]  [BUGGY]  Complex  rhs  =  other.getRawQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRawQualifiedName();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRawQualifiedName();	  Complex    rhs    =    other.getRawParent();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
190	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
191	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(d)||  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
192	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
193	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
194	[BUG]  [BUGGY]  Object  rhs  =  other  ==  null?  null  :  other.getRhs();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Object  rhs  =  other  ==  null?  null  :  other.getRhs();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Object  rhs  =  other  ==  null?  null  :  other.getRhs();	  Object    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
195	[BUG]  [BUGGY]  Object  rhs  =  other.getRhs(real);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Object  rhs  =  other.getRhs(real);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Object  rhs  =  other.getRhs(real);	  Object    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
196	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
197	[BUG]  [BUGGY]  Complex  rhs  =  other.getClass();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getClass();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getClass();	  Complex    rhs    =    other.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
198	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  &&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  &&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  &&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(denominator)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
199	[BUG]  [BUGGY]  Complex  rhs  =  this.getDestination();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getDestination();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getDestination();	  Complex    rhs    =    other.getDestination();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
200	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs)&&  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
201	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRawParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getRawParent();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRawParent();	  Complex    rhs    =(Complex)other.getDenominator();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
202	[BUG]  [BUGGY]  Complex  rhs  =(Complex)other.getRawDestination();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(Complex)other.getRawDestination();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(Complex)other.getRawDestination();	  Complex    rhs    =(Complex)other.getDestination();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
203	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
204	[BUG]  [BUGGY]  ReflectionComposite  rhs  =  comparator.getRawComposite();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ReflectionComposite  rhs  =  comparator.getRawComposite();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ReflectionComposite  rhs  =  comparator.getRawComposite();	  ReflectionComposite    rhs    =    other.getRawComposite();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
205	[BUG]  [BUGGY]  Complex  rhs  =  getRawClass();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  getRawClass();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  getRawClass();	  Complex    rhs    =    other.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
206	[BUG]  [BUGGY]  Complex  rhs  =  other.getRhs(null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  other.getRhs(null);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  other.getRhs(null);	  Complex    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
207	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  &&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  &&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary())  &&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
208	[BUG]  [BUGGY]  Complex  rhs  =  this.getReal();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =  this.getReal();  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =  this.getReal();	  Complex    rhs    =    other.getReal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
209	[BUG]  [BUGGY]  rhs  =  other.getRhs(this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  rhs  =  other.getRhs(this);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	rhs  =  other.getRhs(this);	  rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
210	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(d)&&  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d)&&    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
211	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(imaginary));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(imaginary));  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(imaginary));	  ret    =    Double.doubleToRawLongBits(d)    ==    Double.doubleToRawLongBits(d));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
212	[BUG]  [BUGGY]  double  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  double  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	double  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(denominator)    ==    Double.doubleToRawLongBits(real)    {    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
213	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())||  Double.doubleToRawLongBits(real)  <  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)||    Double.doubleToRawLongBits(real)    <    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
214	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(denominator)&&  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(imaginary)&&    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
215	[BUG]  [BUGGY]  Object  rhs  =  other.getRhs(null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Object  rhs  =  other.getRhs(null);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Object  rhs  =  other.getRhs(null);	  Object    rhs    =    other.getRhs();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
216	[BUG]  [BUGGY]  Complex  rhs  =(real  ==  null)?  this  :  other.real;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(real  ==  null)?  this  :  other.real;  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(real  ==  null)?  this  :  other.real;	  Complex    rhs    =    this.real;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
217	[BUG]  [BUGGY]  Complex  rhs  =(real  ==  null)?  null  :  other.real;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(real  ==  null)?  null  :  other.real;  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(real  ==  null)?  null  :  other.real;	  Complex    rhs    =    other.real;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
218	[BUG]  [BUGGY]  Complex  rhs  =(real  ==  null)?  other.real  :  rhs;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  Complex  rhs  =(real  ==  null)?  other.real  :  rhs;  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	Complex  rhs  =(real  ==  null)?  other.real  :  rhs;	  Complex    rhs    =    other.real;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
219	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits  [BUGGY]      Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(real)||  Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(real)&&    Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
220	[BUG]  [BUGGY]  boolean  rhs  =  this.getRhs().equals(other);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  this.getRhs().equals(other);  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  this.getRhs().equals(other);	  boolean    rhs    =    other.getRhs().equals(this);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
221	[BUG]  [BUGGY]  boolean  rhs  =  other.getRhs().equals(other.getRhs());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;  if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {      [BUGGY]  boolean  rhs  =  other.getRhs().equals(other.getRhs());  [BUGGY]      if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4082482904638631	254	254	1	replace	boolean  rhs  =  other.getRhs().equals(other.getRhs());	  boolean    rhs    =    other.getRhs().equals(this);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
