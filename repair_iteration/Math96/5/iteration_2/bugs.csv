bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getImaginary()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getImaginary()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getImaginary()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(rhs.getImaginary())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(rhs.getImaginary())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(rhs.getImaginary())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()));  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()));	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs.getDenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs.getDenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs.getDenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));	  ret    =    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(rhs.getImaginary()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getReal()));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getReal()));  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(rhs.getDenominator())&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getReal()));	  ret    =    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawLongBits(rhs.getImaginary()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(denominator)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  ret  =  rhs.isNaN();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  rhs.isNaN();  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  rhs.isNaN();	  ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  ret  =  other.isNaN();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  other.isNaN();  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  other.isNaN();	  ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  ret  =  this.isNaN()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  this.isNaN()  +  1;  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  this.isNaN()  +  1;	  ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getRenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getRenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getRenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getRenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getRenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getRenominator())  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator())&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  ret  =  this.isNaN()  ||  this.isNaN();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;    [BUGGY]  ret  =  this.isNaN()  ||  this.isNaN();  [BUGGY]    }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.4472135954999579	263	263	1	replace	ret  =  this.isNaN()  ||  this.isNaN();	  ret    =    this.isNaN();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
