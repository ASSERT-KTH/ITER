bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension()  -  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getDimension()  -  1);	  Real    rhs    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
2	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension(),  c);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getDimension(),  c);	  Real    rhs    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
3	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension()  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension()  +  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getDimension()  +  1);	  Real    rhs    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
4	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask(),  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getMask(),  c);	  Real    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask(),  NaN);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask(),  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getMask(),  NaN);	  Real    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDestination());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getDestination());	  Real    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  rhs.setDenominator(d);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  rhs.setDenominator(d);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	rhs.setDenominator(d);	  rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
8	[BUG]  [BUGGY]  rhs.setDenominator(null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  rhs.setDenominator(null);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	rhs.setDenominator(null);	  rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
9	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  denominator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(real,  denominator);	  Real    rhs    =    Complex.getInstance(real);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(c);	  Real    rhs    =    Complex.getInstance(real);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getMask(),  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getMask(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getMask(),  c);	  Complex    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getMask(),  NaN);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getMask(),  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getMask(),  NaN);	  Complex    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDestination());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDestination());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getDestination());	  Complex    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  denominator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  denominator);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  denominator);	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
15	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  c);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  c);	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
16	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDestinator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDestinator());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDestinator());	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
17	[BUG]  [BUGGY]  if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {	  if(!isNaN()    ||    rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
18	[BUG]  [BUGGY]  if(rhs!=  null  ||!isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs!=  null  ||!isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs!=  null  ||!isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {	  if(!isNaN()    ||    rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
19	[BUG]  [BUGGY]  if(isUnknown()  ||  rhs.isNaN()  ||  rhs.isUnknown())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isUnknown()  ||  rhs.isNaN()  ||  rhs.isUnknown())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isUnknown()  ||  rhs.isNaN()  ||  rhs.isUnknown())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isUnknown())    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
20	[BUG]  [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isUnknown())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isUnknown())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isUnknown())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isUnknown())    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
21	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.c);	  Complex    rhs    =    getDenominator(rhs.real);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
22	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.real,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.real,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.real,  c);	  Complex    rhs    =    getDenominator(rhs.real);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
23	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  denominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs.isNaN()  ||  rhs.isNaN()  ||  denominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs.isNaN()  ||  rhs.isNaN()  ||  denominator())  {	  if(rhs.isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
24	[BUG]  [BUGGY]  if(!rhs.isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(!rhs.isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(!rhs.isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {	  if(rhs.isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
25	[BUG]  [BUGGY]  Real  rhs  =  rhs.getFactory();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getFactory();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getFactory();	  Real    rhs    =    rhs.getInFactory();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
26	[BUG]  [BUGGY]  Real  rhs  =  rhs.getCurrentNode();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getCurrentNode();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getCurrentNode();	  Real    rhs    =    rhs.getRoot();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
27	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  NaN);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  NaN);	  Real    rhs    =    Complex.create(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
28	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  ONE);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  ONE);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  ONE);	  Real    rhs    =    Complex.create(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
29	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  1);	  Real    rhs    =    Complex.create(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
30	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  Double.POSITIVE_INFINITY);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  Double.POSITIVE_INFINITY);	  Real    rhs    =    Complex.create(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
31	[BUG]  [BUGGY]  Real  rhs  =  rhs.getReal();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getReal();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getReal();	  Real    rhs    =    rhs.getDestination();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  INF;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  INF;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  INF;	  Real    rhs    =    rhs    ==    null?    rhs.getRawClass()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
33	[BUG]  [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  Complex.ZERO;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  Complex.ZERO;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  Complex.ZERO;	  Real    rhs    =    rhs    ==    null?    rhs.getRawClass()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
34	[BUG]  [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  NaN;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  NaN;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  NaN;	  Real    rhs    =    rhs    ==    null?    rhs.getRawClass()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
35	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType()  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType()  -  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMaxType()  -  1);	  Real    rhs    =    rhs.get(rhs.getMaxType());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType(),  c);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMaxType(),  c);	  Real    rhs    =    rhs.get(rhs.getMaxType());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
37	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMinType());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMinType());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMinType());	  Real    rhs    =    rhs.get(rhs.getMaxType());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
38	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType(),  denominator);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType(),  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMaxType(),  denominator);	  Real    rhs    =    rhs.get(rhs.getMaxType());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator().multiply(rhs,  c);	  Complex    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  null);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator().multiply(rhs,  null);	  Complex    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  false);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator().multiply(rhs,  false);	  Complex    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNFParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getNFParent();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getNFParent();	  Real    rhs    =    rhs.getINFParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  Real  rhs  =  rhs.getInFParent();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getInFParent();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getInFParent();	  Real    rhs    =    rhs.getINFParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getX());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getX());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getX());	  Real    rhs    =    getDenominator(rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
45	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getINF(),  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getINF(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getINF(),  c);	  Real    rhs    =    getDenominator(rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
46	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  c);	  Real    rhs    =    Complex.create(rhs,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
47	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  d,  denominator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  d,  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  d,  denominator);	  Real    rhs    =    Complex.create(rhs,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
48	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  denominator,  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  denominator,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  denominator,  c);	  Real    rhs    =    Complex.create(rhs,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
49	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  imaginary);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  imaginary);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  imaginary);	  Real    rhs    =    Complex.create(rhs,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
50	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  c);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getMask(),  c);	  Real    rhs    =    Complex.create(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  denominator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  denominator);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getMask(),  denominator);	  Real    rhs    =    Complex.create(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  1);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getMask(),  1);	  Real    rhs    =    Complex.create(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  ZERO);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getMask(),  ZERO);	  Real    rhs    =    Complex.create(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  NaN);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  NaN);	  Complex    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
55	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  ONE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  ONE);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  ONE);	  Complex    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
56	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  INF);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  INF);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  INF);	  Complex    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
57	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  MAX_DECEMBER);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  MAX_DECEMBER);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  MAX_DECEMBER);	  Complex    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
58	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  c);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  c);	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDestinator());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
59	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDestinator(),  rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDestinator(),  rhs.getDenominator());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDestinator(),  rhs.getDenominator());	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDestinator());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
60	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  denominator);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  denominator);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  denominator);	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDestinator());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
61	[BUG]  [BUGGY]  Real  rhs  =  real.get(rhs.getType());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  real.get(rhs.getType());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  real.get(rhs.getType());	  Real    rhs    =    rhs.get(real.getType());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getType(),  denominator);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getType(),  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getType(),  denominator);	  Real    rhs    =    rhs.get(real.getType());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
63	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getType()  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getType()  -  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getType()  -  1);	  Real    rhs    =    rhs.get(real.getType());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getINFType());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getINFType());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getINFType());	  Real    rhs    =    rhs.get(real.getType());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
65	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.denominator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(rhs.denominator);	  Real    rhs    =    Complex.getInstance(denominator);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
66	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs,  denominator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(rhs,  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(rhs,  denominator);	  Real    rhs    =    Complex.getInstance(denominator);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
67	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(d,  denominator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(d,  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(d,  denominator);	  Real    rhs    =    Complex.getInstance(denominator);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
68	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  denominator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  denominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  rhs.isNaN()  ||  denominator())  {	  if(rhs    ==    null    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
69	[BUG]  [BUGGY]  if(rhs!=  null  ||  rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs!=  null  ||  rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs!=  null  ||  rhs.isNaN()  ||  isDenominator())  {	  if(rhs    ==    null    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
70	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isUnknown()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  rhs.isUnknown()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  rhs.isUnknown()  ||  isDenominator())  {	  if(rhs    ==    null    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
71	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  c);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getModule(),  c);	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
72	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  denominator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getModule(),  denominator);	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
73	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  NaN);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getModule(),  NaN);	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
74	[BUG]  [BUGGY]  if(isInfinite()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isInfinite()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isInfinite()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinite())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
75	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinite())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
76	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNumber()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getNumber()  +  1;  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getNumber()  +  1;	  Real    rhs    =    rhs.getNumber();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
77	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(null,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(null,  null);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(null,  null);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
78	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(c);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
79	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(null,  denominator);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(null,  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(null,  denominator);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
80	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(real,  c);	  Real    rhs    =    Complex.getInstance(real,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
81	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  NaN);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(real,  NaN);	  Real    rhs    =    Complex.getInstance(real,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
82	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs,  real);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(rhs,  real);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(rhs,  real);	  Real    rhs    =    Complex.getInstance(real,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
83	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  NaN);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  NaN);	  Real    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
84	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  INF);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  INF);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  INF);	  Real    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
85	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  MAX_DECEMBER);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  MAX_DECEMBER);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  MAX_DECEMBER);	  Real    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
86	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  ONE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  ONE);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  ONE);	  Real    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
87	[BUG]  [BUGGY]  Real  rhs  =  rhs.getRealClass();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getRealClass();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getRealClass();	  Real    rhs    =    rhs.getRootClass();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
88	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.denominator,  c);	  Complex    rhs    =    getDenominator(rhs.denominator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  d);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  d);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.denominator,  d);	  Complex    rhs    =    getDenominator(rhs.denominator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
90	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  real);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  real);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.denominator,  real);	  Complex    rhs    =    getDenominator(rhs.denominator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
91	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||!rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||!rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||!rhs.isNaN()  ||  isDenominator())  {	  if(isNaN()    ||    rhs.isNaN()    ||!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
92	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(real,  denominator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(real,  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(real,  denominator);	  Real    rhs    =    Complex.create(real);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
93	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(null);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(null);	  Real    rhs    =    Complex.create(real);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
94	[BUG]  [BUGGY]  if(isVoid()  ||  rhs.isNaN()  ||  isVoid())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isVoid()  ||  rhs.isNaN()  ||  isVoid())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isVoid()  ||  rhs.isNaN()  ||  isVoid())  {	  if(isNaN()    ||    rhs.isNaN()    ||    isVoid())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
95	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isUnknown())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isUnknown())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  isUnknown())  {	  if(isNaN()    ||    rhs.isNaN()    ||    isVoid())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
96	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(c,  rhs);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(c,  rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(c,  rhs);	  Complex    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
97	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  d);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  d);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  d);	  Complex    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
98	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  c,  d);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  c,  d);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  c,  d);	  Complex    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  c);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator().multiply(rhs,  c);	  Real    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
100	[BUG]  [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  null);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator().multiply(rhs,  null);	  Real    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
101	[BUG]  [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  false);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator().multiply(rhs,  false);	  Real    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
102	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(null,  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(null,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(null,  ZERO);	  Real    rhs    =    Complex.getInstance(null,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
103	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(null,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(null,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(null,  c);	  Real    rhs    =    Complex.getInstance(null,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
104	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(null,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(null,  null);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(null,  null);	  Real    rhs    =    Complex.getInstance(null);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
105	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance();	  Real    rhs    =    Complex.getInstance(null);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  true);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  true);	  Real    rhs    =    Complex.create(rhs,    false);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
107	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  false,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  false,  null);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  false,  null);	  Real    rhs    =    Complex.create(rhs,    false);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  false,  true);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  false,  true);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  false,  true);	  Real    rhs    =    Complex.create(rhs,    false);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
109	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getName(),  rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getName(),  rhs.getDenominator());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getName(),  rhs.getDenominator());	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
110	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  c.getDenominator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  c.getDenominator());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  c.getDenominator());	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
111	[BUG]  [BUGGY]  Real  rhs  =  rhs.getN()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getN()  +  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getN()  +  1;	  Real    rhs    =    rhs.getN();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
112	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNaN()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getNaN()  +  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getNaN()  +  1;	  Real    rhs    =    rhs.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
113	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.c);	  Real    rhs    =    getDenominator(rhs.real);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
114	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.real,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.real,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.real,  c);	  Real    rhs    =    getDenominator(rhs.real);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
115	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.real)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.real)+  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.real)+  1;	  Real    rhs    =    getDenominator(rhs.real);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
116	[BUG]  [BUGGY]  if(rhs  ==  null  ||  isDenominator()  ||  rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  isDenominator()  ||  rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  isDenominator()  ||  rhs.isNaN()  ||  isDenominator())  {	  if(rhs    ==    null    ||    isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
117	[BUG]  [BUGGY]  if(rhs  ==  null  ||  isNaN()  ||  rhs.isNaN()  ||  denominator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  isNaN()  ||  rhs.isNaN()  ||  denominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  isNaN()  ||  rhs.isNaN()  ||  denominator())  {	  if(rhs    ==    null    ||    isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
118	[BUG]  [BUGGY]  if(rhs  ==  null  ||  isNaN()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  isNaN()  ||  rhs.isNaN())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  isNaN()  ||  rhs.isNaN())  {	  if(rhs    ==    null    ||    isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
119	[BUG]  [BUGGY]  if  (isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  real)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if  (isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  real)  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if  (isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  real)  {	  if    (isNaN()    ||    rhs.isNaN()    ||    isDenominator()    ||    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
120	[BUG]  [BUGGY]  if  (isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  d  <  =  DEDENIOR)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if  (isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  d  <  =  DEDENIOR)  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if  (isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  d  <  =  DEDENIOR)  {	  if    (isNaN()    ||    rhs.isNaN()    ||    isDenominator()    ||    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
121	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getINFDenominator());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getINFDenominator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getINFDenominator());	  Complex    rhs    =    getDenominator(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
122	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDestinator());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDestinator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getDestinator());	  Complex    rhs    =    getDenominator(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
123	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getINF());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getINF());	  Complex    rhs    =    getDenominator(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
124	[BUG]  [BUGGY]  Real  rhs  =  rhs!=  null?  null  :  rhs.getRawClass();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs!=  null?  null  :  rhs.getRawClass();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs!=  null?  null  :  rhs.getRawClass();	  Real    rhs    =    rhs    ==    null?    null    :    rhs.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
125	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(c,  rhs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(c,  rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(c,  rhs);	  Real    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
126	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  d);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  d);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  d);	  Real    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
127	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  c,  d);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  c,  d);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  c,  d);	  Real    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
128	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getNext();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getNext();	  Real    rhs    =    rhs.getParent();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
129	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(c.getDenominator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(c.getDenominator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(c.getDenominator());	  Real    rhs    =    rhs.get(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
130	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDenominator(),  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDenominator(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getDenominator(),  c);	  Real    rhs    =    rhs.get(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
131	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  c);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getModule(),  c);	  Real    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
132	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  NaN);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  NaN);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getModule(),  NaN);	  Real    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
133	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  denominator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getModule(),  denominator);	  Real    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
134	[BUG]  [BUGGY]  Real  rhs  =  rhs.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getFirstChild();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getFirstChild();	  Real    rhs    =    rhs.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  Real  rhs  =  rhs.next();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.next();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.next();	  Real    rhs    =    rhs.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
137	[BUG]  [BUGGY]  if(isInfinity()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isInfinity()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isInfinity()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
138	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  c);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getDenominator(),  c);	  Real    rhs    =    Complex.create(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
139	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  denominator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  denominator);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getDenominator(),  denominator);	  Real    rhs    =    Complex.create(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
140	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDestination());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDestination());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDestination());	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
141	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getSize());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getSize());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getSize());	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
142	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getNumber());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getNumber());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getNumber());	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
143	[BUG]  [BUGGY]  Complex  rhs  =  getMask().multiply(rhs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getMask().multiply(rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getMask().multiply(rhs);	  Complex    rhs    =    getMask();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  Complex  rhs  =  getMask()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getMask()  +  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getMask()  +  1;	  Complex    rhs    =    getMask();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
145	[BUG]  [BUGGY]  Complex  rhs  =  getMask()  *  NaN;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getMask()  *  NaN;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getMask()  *  NaN;	  Complex    rhs    =    getMask();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
146	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getType()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getType()  +  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getType()  +  1);	  Real    rhs    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
147	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getType())+  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getType())+  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getType())+  1;	  Real    rhs    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
148	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getType())-  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getType())-  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getType())-  1;	  Real    rhs    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
149	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(c,  rhs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(c,  rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(c,  rhs);	  Real    rhs    =    Complex.getInstance(d,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
150	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(d,  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(d,  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(d,  c);	  Real    rhs    =    Complex.getInstance(d,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
151	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  -  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMask()  -  1);	  Real    rhs    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
152	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask(),  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask(),  c);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMask(),  c);	  Real    rhs    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
153	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMask()  +  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMask()  +  1);	  Real    rhs    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
154	[BUG]  [BUGGY]  if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {	  if(!isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
155	[BUG]  [BUGGY]  if(rhs!=  null  ||!isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs!=  null  ||!isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs!=  null  ||!isNaN()  ||  rhs.isNaN()  ||  isDenominator())  {	  if(!isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
156	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getDimension());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getDimension());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getDimension());	  Real    rhs    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
157	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension(),  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getDimension(),  ZERO);	  Real    rhs    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
158	[BUG]  [BUGGY]  if(rhs.isNaN()  ||  rhs.isInfinite()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs.isNaN()  ||  rhs.isInfinite()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs.isNaN()  ||  rhs.isInfinite()  ||  isDenominator())  {	  if(rhs.isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
159	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(real,  ZERO);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(real,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(real,  ZERO);	  Real    rhs    =    Complex.create(real);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
160	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(real,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(real,  false);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(real,  false);	  Real    rhs    =    Complex.create(real);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
161	[BUG]  [BUGGY]  Real  rhs  =  rhs.getDenominator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getDenominator();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getDenominator();	  Real    rhs    =    rhs.getRoot();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
162	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  rhs.denominator)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  rhs.denominator)  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  rhs.denominator)  {	  if    (isNaN()    ||    rhs.isNaN()    ||    isDenominator()    ||    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
163	[BUG]  [BUGGY]  Real  rhs  =  rhs.getINFactor();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getINFactor();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getINFactor();	  Real    rhs    =    rhs.getINFParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
164	[BUG]  [BUGGY]  Real  rhs  =  rhs.getNA();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getNA();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getNA();	  Real    rhs    =    rhs.getINFParent();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
165	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getNumerator(),  rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getNumerator(),  rhs.getDenominator());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getNumerator(),  rhs.getDenominator());	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
166	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDenominator()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDenominator()  +  1);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDenominator()  +  1);	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
167	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  ZERO);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator().multiply(rhs,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator().multiply(rhs,  ZERO);	  Complex    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
168	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  ZERO);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(real,  ZERO);	  Real    rhs    =    Complex.getInstance(real,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
169	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  ONE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  ONE);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(real,  ONE);	  Real    rhs    =    Complex.getInstance(real,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
170	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  rhs.real);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  rhs.real);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(real,  rhs.real);	  Real    rhs    =    Complex.getInstance(real,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
171	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(real,  rhs.imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(real,  rhs.imaginary);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(real,  rhs.imaginary);	  Real    rhs    =    Complex.getInstance(real,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
172	[BUG]  [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  ZERO);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator().multiply(rhs,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator().multiply(rhs,  ZERO);	  Real    rhs    =    getDenominator().multiply(rhs);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
173	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getComplexType());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getComplexType());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getComplexType());	  Real    rhs    =    rhs.get(real.getType());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
174	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(d,  ZERO);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(d,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(d,  ZERO);	  Real    rhs    =    Complex.getInstance(d,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
175	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(len,  rhs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(len,  rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(len,  rhs);	  Real    rhs    =    Complex.getInstance(d,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
176	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDeno());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDeno());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getDeno());	  Real    rhs    =    getDenominator(rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
177	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getMaxType());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getMaxType());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getMaxType());	  Real    rhs    =    rhs.get(rhs.getMaxType());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
178	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDimension());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDimension());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getDimension());	  Complex    rhs    =    getDenominator(rhs.real);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
179	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN()  ||  rhs.isNaN())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinite())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
180	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
181	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(this);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(this);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
182	[BUG]  [BUGGY]  rhs.setDenominator(real);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  rhs.setDenominator(real);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	rhs.setDenominator(real);	  rhs.setDenominator(denominator);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
183	[BUG]  [BUGGY]  Real  rhs  =  rhs.getDestinator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getDestinator();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getDestinator();	  Real    rhs    =    rhs.getDestination();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
184	[BUG]  [BUGGY]  Real  rhs  =  rhs!=  null?  rhs.getRawClass()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs!=  null?  rhs.getRawClass()  :  null;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs!=  null?  rhs.getRawClass()  :  null;	  Real    rhs    =    rhs    ==    null?    rhs.getRawClass()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
185	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  ZERO);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDenominator(),  ZERO);	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
186	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(false,  rhs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(false,  rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(false,  rhs);	  Real    rhs    =    Complex.getInstance(null,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
187	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(this,  rhs);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(this,  rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(this,  rhs);	  Real    rhs    =    Complex.getInstance(null,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
188	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  ZERO);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getDenominator(),  ZERO);	  Real    rhs    =    Complex.create(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
189	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  0.5);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  0.5);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getDenominator(),  0.5);	  Real    rhs    =    Complex.create(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
190	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  false);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getDenominator(),  false);	  Real    rhs    =    Complex.create(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
191	[BUG]  [BUGGY]  if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||!isNaN()  ||  rhs.isNaN())  {	  if(!isNaN()    ||    rhs.isNaN()    ||    rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
192	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  null);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  null);	  Real    rhs    =    Complex.create(rhs,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
193	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  real);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  real);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  real);	  Real    rhs    =    Complex.create(rhs,    denominator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
194	[BUG]  [BUGGY]  if(rhs  ==  null  ||  isNaN()  ||  rhs.getDenominator()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  isNaN()  ||  rhs.getDenominator()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  isNaN()  ||  rhs.getDenominator()  ||  isDenominator())  {	  if(rhs    ==    null    ||    isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
195	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  rhs.isNaN()  ||  rhs.isInfinity())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
196	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getName());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getName());	  Complex    rhs    =    getDenominator(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
197	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule()).multiply(rhs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule()).multiply(rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getModule()).multiply(rhs);	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
198	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getSimpleName());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getSimpleName());	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
199	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule(),  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getModule(),  ZERO);	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
200	[BUG]  [BUGGY]  Real  rhs  =  rhs.getINFCount();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getINFCount();  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getINFCount();	  Real    rhs    =    rhs.getNumber();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
201	[BUG]  [BUGGY]  Real  rhs  =  rhs.getINFNumber();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getINFNumber();  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getINFNumber();	  Real    rhs    =    rhs.getNumber();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
202	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getImaginary());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getImaginary());	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDestinator());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
203	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  ZERO);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator(),  ZERO);	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDestinator());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
204	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator()  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator()  +  1);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getDestinator()  +  1);	  Complex    rhs    =    createComplex(rhs.getDenominator(),    rhs.getDestinator());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
205	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getDenominator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getDenominator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getDenominator());	  Real    rhs    =    rhs.get(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
206	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDestinator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDestinator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getDestinator());	  Real    rhs    =    rhs.get(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
207	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getDenominator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getDenominator());	  Real    rhs    =    rhs.get(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
208	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  0.5);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask(),  0.5);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getMask(),  0.5);	  Real    rhs    =    Complex.create(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
209	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getMask()  -  1);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getMask()  -  1);	  Real    rhs    =    Complex.create(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
210	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getMask(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getMask(),  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getMask(),  ZERO);	  Complex    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
211	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getCurrentMask());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getCurrentMask());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getCurrentMask());	  Complex    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
212	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  1);	  Complex    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
213	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getMask());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getMask());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getMask());	  Real    rhs    =    rhs.get(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
214	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getINF());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getINF());	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
215	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  ZERO);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getModule(),  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getModule(),  ZERO);	  Real    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
216	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getSimpleName());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getSimpleName());	  Real    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
217	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isDenominator()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  rhs.isDenominator()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  rhs.isDenominator()  ||  isDenominator())  {	  if(rhs    ==    null    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
218	[BUG]  [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||!rhs.isNaN())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||!rhs.isNaN())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(!isNaN()  ||  rhs.isNaN()  ||!rhs.isNaN())  {	  if(isNaN()    ||    rhs.isNaN()    ||!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
219	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||!rhs.isInfinite())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||!rhs.isInfinite())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||!rhs.isInfinite())  {	  if(isNaN()    ||    rhs.isNaN()    ||!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
220	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||!rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||!rhs.isInfinity())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||!rhs.isInfinity())  {	  if(isNaN()    ||    rhs.isNaN()    ||!rhs.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
221	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  q);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  q);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  q);	  Complex    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
222	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask(),  ZERO);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getMask(),  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getMask(),  ZERO);	  Real    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
223	[BUG]  [BUGGY]  if(!isNaN()  &&  rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(!isNaN()  &&  rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(!isNaN()  &&  rhs.isNaN()  ||  isDenominator())  {	  if(!isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
224	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(null,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(null,  false);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(null,  false);	  Real    rhs    =    Complex.create(rhs,    false);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
225	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  ZERO);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.denominator,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.denominator,  ZERO);	  Complex    rhs    =    getDenominator(rhs.denominator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
226	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.number);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.number);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.number);	  Complex    rhs    =    getDenominator(rhs.denominator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
227	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isVoid())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isVoid())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isVoid())  {	  if(isNaN()    ||    rhs.isNaN()    ||    isVoid())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
228	[BUG]  [BUGGY]  Real  rhs  =  rhs  ==  null?  null  :  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs  ==  null?  null  :  rhs.getNaN();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs  ==  null?  null  :  rhs.getNaN();	  Real    rhs    =    rhs.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
229	[BUG]  [BUGGY]  Real  rhs  =  rhs  ==  null?  NaN  :  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs  ==  null?  NaN  :  rhs.getNaN();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs  ==  null?  NaN  :  rhs.getNaN();	  Real    rhs    =    rhs.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
230	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  q);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  q);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  q);	  Real    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
231	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  c,  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  c,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  c,  ZERO);	  Real    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
232	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  ZERO,  CR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  ZERO,  CR);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  ZERO,  CR);	  Real    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
233	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(denominator,  rhs.denominator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(denominator,  rhs.denominator);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(denominator,  rhs.denominator);	  Real    rhs    =    Complex.getInstance(denominator);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
234	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(real.getINF());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(real.getINF());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(real.getINF());	  Real    rhs    =    rhs.get(real.getType());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
235	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  -1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs.getDenominator(),  -1);  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs.getDenominator(),  -1);	  Real    rhs    =    Complex.create(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
236	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getQualifiedName());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getQualifiedName());	  Complex    rhs    =    getDenominator(rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
237	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  ZERO,  CR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  ZERO,  CR);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  ZERO,  CR);	  Complex    rhs    =    getDenominator(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
238	[BUG]  [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  denominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  denominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(!isNaN()  ||  rhs.isNaN()  ||  denominator())  {	  if(!isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
239	[BUG]  [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinity())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
240	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isVoid())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isVoid())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  rhs.isVoid())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinity())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
241	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getComplex());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getComplex());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getComplex());	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
242	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule())+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getModule())+  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getModule())+  1;	  Complex    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
243	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getMask());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getMask());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getDenominator(),  rhs.getMask());	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
244	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getComplex());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getComplex());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getComplex());	  Real    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
245	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs.getScalar());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs.getScalar());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs.getScalar());	  Real    rhs    =    getDenominator(rhs.getModule());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
246	[BUG]  [BUGGY]  Real  rhs  =  rhs.getIn();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.getIn();  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.getIn();	  Real    rhs    =    rhs.getInFactory();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
247	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isInfinite())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isInfinite())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  isInfinite())  {	  if(isNaN()    ||    rhs.isNaN()    ||    isVoid())    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
248	[BUG]  [BUGGY]  Real  rhs  =  getDenominator(rhs,  c  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  getDenominator(rhs,  c  +  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  getDenominator(rhs,  c  +  1);	  Real    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
249	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(denominator,  rhs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(denominator,  rhs);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(denominator,  rhs);	  Real    rhs    =    Complex.getInstance(d,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
250	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType(),  rhs.getMaxType());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getMaxType(),  rhs.getMaxType());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getMaxType(),  rhs.getMaxType());	  Real    rhs    =    rhs.get(rhs.getMaxType());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
251	[BUG]  [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(!isNaN()  ||  rhs.isNaN()  ||  rhs.isInfinite())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinite())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
252	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isUndefined())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  rhs.isUndefined())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  rhs.isUndefined())  {	  if(isNaN()    ||    rhs.isNaN()    ||    rhs.isInfinite())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
253	[BUG]  [BUGGY]  if(rhs  ==  null  ||  isNumeric()  ||  rhs.isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  isNumeric()  ||  rhs.isNaN()  ||  isDenominator())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  isNumeric()  ||  rhs.isNaN()  ||  isDenominator())  {	  if(rhs    ==    null    ||    isNaN()    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
254	[BUG]  [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  imaginary)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  imaginary)  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(isNaN()  ||  rhs.isNaN()  ||  isDenominator()  ||  imaginary)  {	  if    (isNaN()    ||    rhs.isNaN()    ||    isDenominator()    ||    denominator)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
255	[BUG]  [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDigits());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDigits());  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  createComplex(rhs.getMask(),  rhs.getDigits());	  Complex    rhs    =    createComplex(rhs.getMask(),    rhs.getMask());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
256	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs,  c  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs,  c  +  1);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs,  c  +  1);	  Complex    rhs    =    getDenominator(rhs,    c);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
257	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension(),  0.5);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getDimension(),  0.5);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getDimension(),  0.5);	  Real    rhs    =    rhs.get(rhs.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
258	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.real)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.real)+  1;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.real)+  1;	  Complex    rhs    =    getDenominator(rhs.real);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
259	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(null,  ZERO);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(null,  ZERO);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(null,  ZERO);	  Real    rhs    =    rhs.get(null);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
260	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getName());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getName());	  Real    rhs    =    rhs.get(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
261	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(rhs.getDenominator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(rhs.getDenominator());	  Real    rhs    =    Complex.getInstance(null);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
262	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  isUnknown())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  isUnknown())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  rhs.isNaN()  ||  isUnknown())  {	  if(rhs    ==    null    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
263	[BUG]  [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  isInfinite())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  if(rhs  ==  null  ||  rhs.isNaN()  ||  isInfinite())  {  [BUGGY]      return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	if(rhs  ==  null  ||  rhs.isNaN()  ||  isInfinite())  {	  if(rhs    ==    null    ||    rhs.isNaN()    ||    isDenominator())    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
264	[BUG]  [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDeninator());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Complex  rhs  =  getDenominator(rhs.getDeninator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Complex  rhs  =  getDenominator(rhs.getDeninator());	  Complex    rhs    =    getDenominator(rhs.getDenominator());    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
265	[BUG]  [BUGGY]  Real  rhs  =  Complex.create(rhs,  ZERO,  ONE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.create(rhs,  ZERO,  ONE);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.create(rhs,  ZERO,  ONE);	  Real    rhs    =    Complex.create(rhs,    ZERO);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
266	[BUG]  [BUGGY]  Real  rhs  =  Complex.getInstance(null,  ONE);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  Complex.getInstance(null,  ONE);  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  Complex.getInstance(null,  ONE);	  Real    rhs    =    Complex.getInstance(null,    rhs);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
267	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getValue());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getValue());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getValue());	  Real    rhs    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
268	[BUG]  [BUGGY]  Real  rhs  =  rhs.get(rhs.getClass());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs.get(rhs.getClass());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs.get(rhs.getClass());	  Real    rhs    =    rhs.get(rhs.getType()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
269	[BUG]  [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  new  Complex(rhs.getDenominator());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  new  Complex(rhs.getDenominator());  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  new  Complex(rhs.getDenominator());	  Real    rhs    =    rhs    ==    null?    rhs.getRawClass()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
270	[BUG]  [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  rhs;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Complex  multiply(Complex  rhs)  {      [BUGGY]  Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  rhs;  [BUGGY]      if  (isNaN()  ||  rhs.isNaN())  {  return  NaN;  }  if  (Double.isInfinite(real)  ||  Double.isInfinite(imaginary)  ||  Double.isInfinite(rhs.real)||  Double.isInfinite(rhs.imaginary))  {  return  INF;  }  return  createComplex(real  *  rhs.real  -  imaginary  *  rhs.imaginary,  real  *  rhs.imaginary  +  imaginary  *  rhs.real);  }  [CLASS]  Complex  [METHOD]  multiply  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.22941573387056174	355	355	1	replace	Real  rhs  =  rhs  ==  null?  rhs.getRawClass()  :  rhs;	  Real    rhs    =    rhs    ==    null?    rhs.getRawClass()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
