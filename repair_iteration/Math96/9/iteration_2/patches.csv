bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!(other  instanceof  Complex  ||  other  instanceof  Double))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(!(other  instanceof  Complex  ||  other  instanceof  Double))  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(!(other  instanceof  Complex  ||  other  instanceof  Double))  {	  if(!(other    instanceof    Complex))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
2	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&  this.isNaN())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(!(other  instanceof  Complex)&&  this.isNaN())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(!(other  instanceof  Complex)&&  this.isNaN())  {	  if(!(other    instanceof    Complex))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
3	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Double))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Double))  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(!(other  instanceof  Complex)&&!(other  instanceof  Double))  {	  if(!(other    instanceof    Complex))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
4	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Real))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Real))  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(!(other  instanceof  Complex)&&!(other  instanceof  Real))  {	  if(!(other    instanceof    Complex))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
5	[BUG]  [BUGGY]  if(other!=  null)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    null)ret    =    true;    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
6	[BUG]  [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    this)ret    =    true;    else    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
7	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    this)ret    =    true;    else    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
8	[BUG]  [BUGGY]  if(other  ==  null)ret  =  true;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  true;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  true;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    this)ret    =    true;    else    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
9	[BUG]  [BUGGY]  if(other  ==  null  ||  other.isNaN())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null  ||  other.isNaN())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null  ||  other.isNaN())  {	  if(other    ==    this    ||    other.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
10	[BUG]  [BUGGY]  if(this  ==  other  ||  other.isNaN())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  other.isNaN())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  other.isNaN())  {	  if(other    ==    this    ||    other.isNaN())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  ret  =  true;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  true;	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
12	[BUG]  [BUGGY]  if(other!=  null  ||  other.getClass()!=  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null  ||  other.getClass()!=  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null  ||  other.getClass()!=  getClass())  {  ret  =  true;  }	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
13	[BUG]  [BUGGY]  if(other  ==  this  ||  other.getClass()!=  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this  ||  other.getClass()!=  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this  ||  other.getClass()!=  getClass())  {  ret  =  true;  }	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
14	[BUG]  [BUGGY]  if(other  ==  this)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  true;  }	  if(other    ==    null)ret    =    true;    if(other.getClass()!=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
15	[BUG]  [BUGGY]  if(other  ==  this)ret  =  false;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  false;	  if(other    ==    this)ret    =    true;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
16	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    this)ret    =    true;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
17	[BUG]  [BUGGY]  if(other  ==  this)  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)  {  ret  =  true;  }	  if(other    ==    this)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  if(this  ==  other)  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)  {  ret  =  false;  }	  if(other    ==    this)    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(this    ==    other)ret    =    false;    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
20	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(this    ==    other)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    this)ret    =    true;    else    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
22	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    this)ret    =    true;    else    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
23	[BUG]  [BUGGY]  if(other  ==  null)ret  =  true;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  true;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  true;  else  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    this)ret    =    true;    else    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
24	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    null)ret    =    false;    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  if(other  ==  null)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    null)ret    =    false;    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  true;  }	  if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  if(other!=  this)ret  =  false;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  this)ret  =  false;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  this)ret  =  false;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other!=    this)ret    =    true;    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
28	[BUG]  [BUGGY]  if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    null)ret    =    true;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
29	[BUG]  [BUGGY]  if(this  ==  other)ret  =  super.equals(other);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  super.equals(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  super.equals(other);	  if(other    ==    this)ret    =    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
30	[BUG]  [BUGGY]  if(other  ==  null)ret  =  super.equals(other);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  super.equals(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  super.equals(other);	  if(other    ==    this)ret    =    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
31	[BUG]  [BUGGY]  if(other!=  this)ret  =  super.equals(other);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  this)ret  =  super.equals(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  this)ret  =  super.equals(other);	  if(other    ==    this)ret    =    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
32	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  if(other  ==  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  if(other  ==  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  if(other  ==  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other!=    null)ret    =    false;    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
33	[BUG]  [BUGGY]  if(other  ==  null  ||  other.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null  ||  other.getClass()!=  getClass())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null  ||  other.getClass()!=  getClass())  {	  if(other    ==    this    ||    other.getClass()!=    getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
34	[BUG]  [BUGGY]  if(other!=  this  ||  other.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  this  ||  other.getClass()!=  getClass())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  this  ||  other.getClass()!=  getClass())  {	  if(other    ==    this    ||    other.getClass()!=    getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  if(this  ==  other  ||  other.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  other.getClass()!=  getClass())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  other.getClass()!=  getClass())  {	  if(other    ==    this    ||    other.getClass()!=    getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  ret  =  this.isNaN()?  super.equals(other.getClass()):  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()?  super.equals(other.getClass()):  null;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()?  super.equals(other.getClass()):  null;	  ret    =    this.isNaN()?    super.equals(other):    null;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
37	[BUG]  [BUGGY]  ret  =  this.isNaN()?  super.equals(other):  false;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()?  super.equals(other):  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()?  super.equals(other):  false;	  ret    =    this.isNaN()?    super.equals(other):    null;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
38	[BUG]  [BUGGY]  if(other  ==  this  ||  real  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this  ||  real  ==  null)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this  ||  real  ==  null)  {	  if(other    ==    this    ||    other    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
39	[BUG]  [BUGGY]  ret  =  super.equalsIgnoreCase(other.iNF);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  super.equalsIgnoreCase(other.iNF);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  super.equalsIgnoreCase(other.iNF);	  ret    =    super.equalsIgnoreCase(other);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  ret  =  super.equalsIgnoreCase(other.getClass());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  super.equalsIgnoreCase(other.getClass());  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  super.equalsIgnoreCase(other.getClass());	  ret    =    super.equalsIgnoreCase(other);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  if(other!=  null  ||  other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null  ||  other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null  ||  other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
42	[BUG]  [BUGGY]  if(other  ==  this  ||  other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this  ||  other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this  ||  other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
43	[BUG]  [BUGGY]  if(other!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)  {	  if(other!=    this)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
44	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    this)ret    =    true;    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;	  if(other    ==    this)ret    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
46	[BUG]  [BUGGY]  if(other  ==  null)ret  =  true;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  true;	  if(other    ==    this)ret    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
47	[BUG]  [BUGGY]  if(ret  ==  this)ret  =  true;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(ret  ==  this)ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(ret  ==  this)ret  =  true;	  if(other    ==    this)ret    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
48	[BUG]  [BUGGY]  if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other!=    this)ret    =    true;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
49	[BUG]  [BUGGY]  if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other!=    this)ret    =    true;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
50	[BUG]  [BUGGY]  if(other  ==  null)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  if(other  ==  null)ret  =  false;  if(denominator  ==  other.getDenominator())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  false;  if(denominator  ==  other.getDenominator())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  false;  if(denominator  ==  other.getDenominator())  {  ret  =  false;  }	  ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  if(other  ==  null)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  true;  }	  ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other!=    this)ret    =    true;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  if(other  ==  null)ret  =  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  false;	  if(other    ==    null)ret    =    true;    if(other.isNaN())ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  if(other  ==  this)ret  =  true;  if(other.isNaN())ret  =  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  true;  if(other.isNaN())ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  true;  if(other.isNaN())ret  =  false;	  if(other    ==    null)ret    =    true;    if(other.isNaN())ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  ret  =  this.isNaN()  ||  super.equals(other);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()  ||  super.equals(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()  ||  super.equals(other);	  ret    =    this.isNaN()    &&    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
57	[BUG]  [BUGGY]  ret  =  this.isNaN()  &&  super.equals(other.getClass());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()  &&  super.equals(other.getClass());  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()  &&  super.equals(other.getClass());	  ret    =    this.isNaN()    &&    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
58	[BUG]  [BUGGY]  if(other!=  null)  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)  {  ret  =  false;  }	  if(other    ==    null)    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  if(this  ==  other  ||  imaginary  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  imaginary  ==  null)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  imaginary  ==  null)  {	  if(other    ==    this    ||    imaginary    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
60	[BUG]  [BUGGY]  if(other  ==  null  ||  imaginary  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null  ||  imaginary  ==  null)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null  ||  imaginary  ==  null)  {	  if(other    ==    this    ||    imaginary    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
61	[BUG]  [BUGGY]  ret  =  super.equals(other.getDenominator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  super.equals(other.getDenominator());  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  super.equals(other.getDenominator());	  ret    =    super.equals(other.denominator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
62	[BUG]  [BUGGY]  ret  =  super.equals(other.real);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  super.equals(other.real);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  super.equals(other.real);	  ret    =    super.equals(other.denominator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
63	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  if(other.isNaN())ret  =  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  if(other.isNaN())ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  if(other.isNaN())ret  =  true;	  if(other    ==    null)ret    =    false;    if(other.isNaN())ret    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  if(other  ==  null)ret  =  false;  if(other.isNaN()  ||  other.isNaN())ret  =  true;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  false;  if(other.isNaN()  ||  other.isNaN())ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  false;  if(other.isNaN()  ||  other.isNaN())ret  =  true;	  if(other    ==    null)ret    =    false;    if(other.isNaN())ret    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  if(this  ==  other  ||  this  ==  denominator)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  this  ==  denominator)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  this  ==  denominator)  {	  if(this    ==    other    ||    this!=    other)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
66	[BUG]  [BUGGY]  if(this  ==  other  ||  this!=  denominator)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  this!=  denominator)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  this!=  denominator)  {	  if(this    ==    other    ||    this!=    other)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  if(this  ==  other  ||  this  ==  imaginary)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  this  ==  imaginary)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  this  ==  imaginary)  {	  if(this    ==    other    ||    this!=    other)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  if(this  ==  other  ||  this  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  this  ==  null)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  this  ==  null)  {	  if(this    ==    other    ||    this!=    other)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  if(other  ==  null)ret  =  false;  if(other.getClass()  <  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  false;  if(other.getClass()  <  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  false;  if(other.getClass()  <  getClass())  {  ret  =  true;  }	  if(other    ==    null)ret    =    false;    if(other.getClass()    >=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
70	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()  >=  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()  >=  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  if(other.getClass()  >=  getClass())  {  ret  =  true;  }	  if(other    ==    null)ret    =    false;    if(other.getClass()    >=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
71	[BUG]  [BUGGY]  if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  this)ret  =  false;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other!=    this)ret    =    true;    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  if(this  ==  other)ret  =  false;  if(other.isNaN())ret  =  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  false;  if(other.isNaN())ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  false;  if(other.isNaN())ret  =  false;	  if(other    ==    this)ret    =    false;    if(other.isNaN())ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
73	[BUG]  [BUGGY]  if(other  ==  this)ret  =  true;  if(other.isNaN()  ||  other.isNaN())ret  =  false;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  true;  if(other.isNaN()  ||  other.isNaN())ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  true;  if(other.isNaN()  ||  other.isNaN())ret  =  false;	  if(other    ==    this)ret    =    false;    if(other.isNaN())ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
74	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    null)ret    =    false;    else    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
75	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  else  if(other  ==  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  else  if(other  ==  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  else  if(other  ==  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    null)ret    =    false;    else    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
76	[BUG]  [BUGGY]  ret  =  this.isNaN()?  super.equals(other.getClass());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()?  super.equals(other.getClass());  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()?  super.equals(other.getClass());	  ret    =    super.equals(other.getClass());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  if(other  ==  this)ret  =  false;  if(other.isNaN())ret  =  true;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  false;  if(other.isNaN())ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  false;  if(other.isNaN())ret  =  true;	  if(other    ==    null)ret    =    false;    if(other.isNaN())ret    =    true;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
78	[BUG]  [BUGGY]  if(other  ==  null)ret  =  super.equals(other.getClass());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  super.equals(other.getClass());  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  super.equals(other.getClass());	  ret    =    super.equals(other.getClass());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  if(other!=  null)ret  =  super.equals(other.getClass());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  super.equals(other.getClass());  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  super.equals(other.getClass());	  ret    =    super.equals(other.getClass());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  if(this  ==  other  ||  other  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  other  ==  null)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  other  ==  null)  {	  if(other    ==    this    ||    other    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
81	[BUG]  [BUGGY]  ret  =  this.isNaN()  &&  super.equalsINF(other);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()  &&  super.equalsINF(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()  &&  super.equalsINF(other);	  ret    =    super.equalsINF(other);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
82	[BUG]  [BUGGY]  if(ret  ==  this)ret  =  super.equals(other);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(ret  ==  this)ret  =  super.equals(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(ret  ==  this)ret  =  super.equals(other);	  if(other    ==    this)ret    =    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
83	[BUG]  [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    this)ret    =    true;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  if(other!=  null  ||  other.getClass()  ==  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null  ||  other.getClass()  ==  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null  ||  other.getClass()  ==  getClass())  {  ret  =  false;  }	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
85	[BUG]  [BUGGY]  if(this  ==  other  ||  this  ==  real)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  this  ==  real)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  this  ==  real)  {	  if(this    ==    other    ||    this!=    other)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
86	[BUG]  [BUGGY]  if(this  ==  other  ||  imaginary!=  other)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  imaginary!=  other)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  imaginary!=  other)  {	  if(this    ==    other    ||    this!=    other)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
87	[BUG]  [BUGGY]  ret  =  super.equals(other.number);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  super.equals(other.number);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  super.equals(other.number);	  ret    =    super.equals(other.denominator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
88	[BUG]  [BUGGY]  if(other!=  this)ret  =  false;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  this)ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  this)ret  =  false;	  if(other!=    this)ret    =    true;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
89	[BUG]  [BUGGY]  if(other  ==  null  ||!(other  instanceof  Complex))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null  ||!(other  instanceof  Complex))  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null  ||!(other  instanceof  Complex))  {	  if(other    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
90	[BUG]  [BUGGY]  if(this  ==  other)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  false;  else  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  false;  }	  if(other    ==    null)ret    =    false;    else    if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
91	[BUG]  [BUGGY]  if(other!=  null  ||  other.getClass()  ==  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null  ||  other.getClass()  ==  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null  ||  other.getClass()  ==  getClass())  {  ret  =  true;  }	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
92	[BUG]  [BUGGY]  if(this  ==  other)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  false;  if(other.getClass()!=  getClass())  {  ret  =  true;  }	  if(other    ==    this)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
93	[BUG]  [BUGGY]  if(other  ==  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  true;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  true;  }	  if(other    ==    null)ret    =    false;    if(other.getClass()    >=    getClass())    {    ret    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
94	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  if(other!=  null)ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(this    ==    other)ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  if(other  ==  this  ||  other.getClass()  ==  getClass())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this  ||  other.getClass()  ==  getClass())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this  ||  other.getClass()  ==  getClass())  {	  if(other    ==    this    ||    other.getClass()!=    getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
96	[BUG]  [BUGGY]  ret  =  this.isNaN()?  super.equals(other):  true;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()?  super.equals(other):  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()?  super.equals(other):  true;	  ret    =    this.isNaN()?    super.equals(other):    null;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
97	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;  if(other.getClass()  ==  getClass())  {  ret  =  false;  }	  if(other!=    null)ret    =    false;    if(other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
98	[BUG]  [BUGGY]  if(ret  ==  null)ret  =  super.equals(other);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(ret  ==  null)ret  =  super.equals(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(ret  ==  null)ret  =  super.equals(other);	  if(other    ==    this)ret    =    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
99	[BUG]  [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this)ret  =  false;  else  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    this)ret    =    true;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
100	[BUG]  [BUGGY]  if(other  ==  this  ||  imaginary  ==  null  ||  other.getClass()!=  getClass())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  this  ||  imaginary  ==  null  ||  other.getClass()!=  getClass())  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  this  ||  imaginary  ==  null  ||  other.getClass()!=  getClass())  {	  if(other    ==    this    ||    other.getClass()!=    getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
101	[BUG]  [BUGGY]  if(other  ==  null)ret  =  true;  else  if(other.isNaN())ret  =  false;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  true;  else  if(other.isNaN())ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  true;  else  if(other.isNaN())ret  =  false;	  if(other!=    null)ret    =    true;    if(other.isNaN())ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
102	[BUG]  [BUGGY]  if(other!=  null)ret  =  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  false;	  if(other!=    null)ret    =    true;    if(other.isNaN())ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
103	[BUG]  [BUGGY]  if(this  ==  other)ret  =  true;  if(other.isNaN())ret  =  false;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other)ret  =  true;  if(other.isNaN())ret  =  false;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other)ret  =  true;  if(other.isNaN())ret  =  false;	  if(other!=    null)ret    =    true;    if(other.isNaN())ret    =    false;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
104	[BUG]  [BUGGY]  if(ret  ==  null)ret  =  true;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(ret  ==  null)ret  =  true;  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(ret  ==  null)ret  =  true;	  if(other    ==    this)ret    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
105	[BUG]  [BUGGY]  if(other  ==  null)ret  =  super.equals(other.getClass());  if(imaginary  ==  null)ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null)ret  =  super.equals(other.getClass());  if(imaginary  ==  null)ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null)ret  =  super.equals(other.getClass());  if(imaginary  ==  null)ret  =  false;  }	  ret    =    super.equals(other.getClass());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  VirtualFunction))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  VirtualFunction))  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(!(other  instanceof  Complex)&&!(other  instanceof  VirtualFunction))  {	  if(!(other    instanceof    Complex))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
107	[BUG]  [BUGGY]  ret  =  other.isNaN()  &&  super.equals(other);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  other.isNaN()  &&  super.equals(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  other.isNaN()  &&  super.equals(other);	  ret    =    this.isNaN()    &&    super.equals(other);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
108	[BUG]  [BUGGY]  ret  =  this.isNaN()?  super.equalsIgnoreCase(other):  super.equalsIgnoreCase(other);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()?  super.equalsIgnoreCase(other):  super.equalsIgnoreCase(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()?  super.equalsIgnoreCase(other):  super.equalsIgnoreCase(other);	  ret    =    super.equalsIgnoreCase(other);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
109	[BUG]  [BUGGY]  ret  =  this.isNaN()  &&  super.equalsIgnoreCase(other);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  ret  =  this.isNaN()  &&  super.equalsIgnoreCase(other);  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	ret  =  this.isNaN()  &&  super.equalsIgnoreCase(other);	  ret    =    super.equalsIgnoreCase(other);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
110	[BUG]  [BUGGY]  if(other  ==  null  ||  other  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null  ||  other  ==  null)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null  ||  other  ==  null)  {	  if(other    ==    this    ||    other    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
111	[BUG]  [BUGGY]  if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other!=  null)ret  =  true;  if(other.getClass()!=  getClass())ret  =  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other!=    this)ret    =    true;    if(other.getClass()!=    getClass())ret    =    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
112	[BUG]  [BUGGY]  if(other  ==  null  ||  other.getClass()  >=  getClass())  {  ret  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(other  ==  null  ||  other.getClass()  >=  getClass())  {  ret  =  false;  }  [BUGGY]      if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(other  ==  null  ||  other.getClass()  >=  getClass())  {  ret  =  false;  }	  if(other    ==    null    ||    other.getClass()!=    getClass())    {    ret    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
113	[BUG]  [BUGGY]  if(this  ==  other  ||  this  ==  other)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  equals(Object  other)  {  boolean  ret;      [BUGGY]  if(this  ==  other  ||  this  ==  other)  {  [BUGGY]      ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	248	248	1	replace	if(this  ==  other  ||  this  ==  other)  {	  if(this    ==    other    ||    this!=    other)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
