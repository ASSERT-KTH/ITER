bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(d)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getImaginary()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getImaginary()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getImaginary()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    ||(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    ||(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =(Double.doubleToRawLongBits(c)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    ||(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.	      ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(rhs.getReal())  ==  Double.doubleToRawLongBits(real))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getImaginary()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
24	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    ||(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.double	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getDenominator()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	  ret    =    (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getDenominator()))&&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRa	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRa    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToR	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToR    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))  ||(Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	  ret    =(Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    ||(Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRaw	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRaw    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  ||  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	(Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawL	      (Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleToRawL    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (this  ==  other)  {  ret  =  true;  }  else  if  (other  ==  null)  {  ret  =  false;  }  else{  try  {  Complex  rhs  =  (Complex)other;  if  (rhs.isNaN())  {  ret  =  this.isNaN();  }  else  {    [BUGGY]  ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo  [BUGGY]    ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getReal()))  &&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleToRawLongBits(rhs.getImaginary()));  }  }  catch  (ClassCastException  ex)  {  ret  =  false;  }  }  return  ret;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  ret  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  ClassCastException  ex  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.5	258	258	1	replace	ret  =  (Double.doubleToRawLongBits(real)  ==  Double.doubleToRawLongBits(rhs.getImaginary()))&&  (Double.doubleToRawLongBits(imaginary)  ==  Double.doubleTo	      ret    =    Double.doubleToRawLongBits(real)    ==    Double.doubleToRawLongBits(rhs.getReal()))    &&    (Double.doubleToRawLongBits(imaginary)    ==    Double.doubleTo    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
