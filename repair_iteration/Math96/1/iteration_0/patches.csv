bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(real));  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(real));  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(real));  }		non-compiled	[CE]  ';'  expected	2	None	add
2	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary));  }  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary));  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary));  }		non-compiled	[CE]  ';'  expected	2	None	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	add	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }		compilable	  [FE]  AssertionFailedError  	2	2	add
4	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }		compilable	  [FE]  AssertionFailedError  	2	2	add
5	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
6	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(real));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(real));  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(real));  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
7	[BUG]  [BUGGY]  if(isNaN()  ||  isDenominator())  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(isNaN()  ||  isDenominator())  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(isNaN()  ||  isDenominator())  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(isNaN()  ||  isNaN())  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(isNaN()  ||  isNaN())  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(isNaN()  ||  isNaN())  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  if(isNaN()  ||  isVarArgs())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(isNaN()  ||  isVarArgs())  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(isNaN()  ||  isVarArgs())  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  if(isNaN()  ||  isInverted())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(isNaN()  ||  isInverted())  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(isNaN()  ||  isInverted())  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  if(isNaN()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(isNaN()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(isNaN()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  if(!isNaN())  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(!isNaN())  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(!isNaN())  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  if(isNaN()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(isNaN()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(isNaN()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]    int  isNaN();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    int  isNaN();  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    int  isNaN();		non-compiled	[CE]  illegal  start  of  type	2	None	add
15	[BUG]  [BUGGY]    int  rhs  =  getWrappedField().hashCode();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    int  rhs  =  getWrappedField().hashCode();  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    int  rhs  =  getWrappedField().hashCode();		non-compiled	[CE]  illegal  start  of  type	2	None	add
16	[BUG]  [BUGGY]    int  rhs  =  Math.min(imaginary.hashCode(),  imaginary.hashCode());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    int  rhs  =  Math.min(imaginary.hashCode(),  imaginary.hashCode());  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    int  rhs  =  Math.min(imaginary.hashCode(),  imaginary.hashCode());		non-compiled	[CE]  illegal  start  of  type	2	None	add
17	[BUG]  [BUGGY]    int  rhs  =  Math.min(imaginary.hashCode(),  real.length);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    int  rhs  =  Math.min(imaginary.hashCode(),  real.length);  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    int  rhs  =  Math.min(imaginary.hashCode(),  real.length);		non-compiled	[CE]  illegal  start  of  type	2	None	add
18	[BUG]  [BUGGY]    int  rhs  =  Math.min(imaginary.hashCode(),  real.hashCode());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    int  rhs  =  Math.min(imaginary.hashCode(),  real.hashCode());  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    int  rhs  =  Math.min(imaginary.hashCode(),  real.hashCode());		non-compiled	[CE]  illegal  start  of  type	2	None	add
19	[BUG]  [BUGGY]    if(isNaN())  {  return  7;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  7;  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  7;  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
20	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary);  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary);  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
21	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(real)+  MathUtils.hash(imaginary);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(real)+  MathUtils.hash(imaginary);  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(real)+  MathUtils.hash(imaginary);  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
22	[BUG]  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary));  }  [BUGGY]  if  (isNaN())  {  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	    if(isNaN())  {  return  37  *  MathUtils.hash(imaginary)+  MathUtils.hash(imaginary));  }		non-compiled	[CE]  illegal  start  of  type	2	None	add
23	[BUG]  [BUGGY]  if(isNaN()  ||  isInfinite())  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  int  hashCode()  {  [BUGGY]  if(isNaN()  ||  isInfinite())  {  [BUGGY]  return  7;  }  return  37  *  (17  *  MathUtils.hash(imaginary)  +  MathUtils.hash(real));  }  [CLASS]  Complex  [METHOD]  hashCode  [RETURN_TYPE]  int  [VARIABLES]  boolean  double  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math96/src/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	277	277	1	replace	if(isNaN()  ||  isInfinite())  {	if  (isNaN())  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
