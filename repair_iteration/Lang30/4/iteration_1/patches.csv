bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '   "')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '   "')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  len;  i++)  {	  for(int    i    =    0;    i    <    searchLen;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    null)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    null)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    null)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]!=  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]!=  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    null)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  null)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  null)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    EMPTY)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    EMPTY)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  true;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  true;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    EMPTY)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  true;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  true;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  ==  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  true;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  true;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  int  strLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  strLen  =  cs.length();  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  strLen  =  cs.length();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  int  strLimit  =  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  strLimit  =  cs.length();  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  strLimit  =  cs.length();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  int  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  len  =  cs.length();  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  len  =  cs.length();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  if(searchLen  >  0)  {  if(!containsNone(cs,  searchChars[0]))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  if(!containsNone(cs,  searchChars[0]))  {  return  false;  }  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  if(!containsNone(cs,  searchChars[0]))  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen.length;  i++)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  csLen.length;  i++)  {  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  csLen.length;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen.length();  i++)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen.length();  i++)  {  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen.length();  i++)  {	  for(int    i    =    0;    i    <    searchLen.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  searchLen  =  searchChars.length;  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  searchLen  =  searchChars.length;	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  EMPTY)  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    EMPTY)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==' "')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '   "')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
38	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
40	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  null)  {  return  false;  }  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    null)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  null)  {  return  false	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  'n')  {  return  false	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  int  i  =  str.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  i  =  str.length();  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  i  =  str.length();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
48	[BUG]  [BUGGY]  int  i  =  str.indexOf(searchChars[i]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  i  =  str.indexOf(searchChars[i]);  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  i  =  str.indexOf(searchChars[i]);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  if(searchLen  >  0)  {  if(searchLen  >  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  if(searchLen  >  0)  {  return  false;  }  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  if(searchLen  >  0)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  int  strLimit  =  str.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  strLimit  =  str.length();  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  strLimit  =  str.length();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '%')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    'n')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  int  len  =  str.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  int  len  =  str.length();  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	int  len  =  str.length();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cs.length;  i++)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  for(int  i  =  0;  i  <  cs.length;  i++)  {  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	for(int  i  =  0;  i  <  cs.length;  i++)  {	  for(int    i    =    0;    i    <    searchLen.length;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  }	      if(searchLen    >    0)    {    for(int    j    =    0;    j    <    csLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)return  false;  }  [BUGGY]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)return  false;  }	      if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  csLen;  i++)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;    [BUGGY]  For(int  i  =  0;  i  <  csLen;  i++)  {  [BUGGY]    char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1679	1679	10	replace	For(int  i  =  0;  i  <  csLen;  i++)  {	  for(int    i    =    0;    i    <    searchLen;    i++)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
