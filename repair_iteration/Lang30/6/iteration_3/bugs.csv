bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchCharsLen;  j++)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchCharsLen;  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchCharsLen;  j++)  {	  for(int    j    =    0;    j    <    SearchChars.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
2	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  csLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  true;  }	  for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen.length();  j++)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchLen.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchLen.length();  j++)  {	  for(int    j    =    0;    j    <    searchLen.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
6	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen.length  +  1;  j++)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchLen.length  +  1;  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchLen.length  +  1;  j++)  {	  for(int    j    =    0;    j    <    searchLen.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
7	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen.length  -  1;  j++)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchLen.length  -  1;  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchLen.length  -  1;  j++)  {	  for(int    j    =    0;    j    <    searchLen.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
11	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  Char  ch  =  cs.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	Char  ch  =  cs.charAt(i);	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  length;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  length;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  length;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchChars.length  -  1;  j++)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchChars.length  -  1;  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchChars.length  -  1;  j++)  {	  for(int    j    =    0;    j    <    searchChars.length;    j++)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	char  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]!=  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]!=  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]!=  ch)  {  return  false;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  char  ch  =  cs.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	char  ch  =  cs.charAt(i);	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  if(searchChars[i]!=  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchChars[i]!=  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchChars[i]!=  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  if(searchChars[i]    ==    ch)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
21	[BUG]  [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  if(searchChars[i]    ==    ch)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
22	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchChars.length();  j++)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchChars.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchChars.length();  j++)  {	  for(int    j    =    0;    j    <    ch.length();    j++)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchCharsLen.length();  j++)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  searchCharsLen.length();  j++)  {  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  searchCharsLen.length();  j++)  {	  for(int    j    =    0;    j    <    ch.length();    j++)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  searchLen  =  searchChars.length  -  1;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
25	[BUG]  [BUGGY]  int  searchLen  =  ch.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLen  =  ch.length;  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  searchLen  =  ch.length;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
26	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  searchLen  =  searchChars.length  +  1;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
27	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    len;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
28	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  len;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    len;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  ch  =  cs.charAt(i);  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
30	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  ch  =  cs.charAt(i);  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
32	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
33	[BUG]  [BUGGY]  if(searchChars[i]  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchChars[i]  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchChars[i]  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]!=  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]!=  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  if(searchChars[i]!=  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchChars[i]!=  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchChars[i]!=  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }	  if(searchChars[i]    ==    ch)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
36	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  i;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLen  =  searchChars.length  +  i;  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  searchLen  =  searchChars.length  +  i;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  ch;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLen  =  searchChars.length  +  ch;  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  searchLen  =  searchChars.length  +  ch;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
38	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  j  =  0;  j  <  ch;  j++)  {  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchLen    >    0)    {    for(int    j    =    0;    j    <    searchLen;    j++)    {    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }	  if(searchChars[i]    ==    ch)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
40	[BUG]  [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false	  if(searchChars[i]    ==    ch)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ch;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  ch;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  ch;  i++)  {  if(searchChars[i]  ==  null)  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
46	[BUG]  [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  if(searchChars[i]    ==    ch)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
47	[BUG]  [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  if(searchChars[i]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }	  if(searchChars[i]    ==    ch)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
48	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  i  =  0;  i  <  len;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  ch  =  cs.charAt(i);  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
51	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  indent;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  indent;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  indent;  i++)  {  char  ch  =  cs.charAt(i);  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  if(searchChars[i]!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchChars[i]!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchChars[i]!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]!=    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)return  false;  }  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  if(searchChars[i]  ==  ch)return  false;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    if(searchChars[i]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);      [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [BUGGY]      for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1681	1681	10	replace	int  searchLen  =  searchChars.length  -  2;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
