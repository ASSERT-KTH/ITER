bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchChars.length;  j++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  searchChars.length;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  j  =  0;  j  <  searchChars.length;  j++)  {	  for(int    j    =    0;    j    <    ch;    j++)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLast;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLast;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLast;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs[i];  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs[i];  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
21	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
22	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
24	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
25	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  char  ch  =  cs.charAt(i  +  1);  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	char  ch  =  cs.charAt(i  +  1);	      char    ch    =    cs.charAt(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  char  ch  =  searchChars[i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  char  ch  =  searchChars[i];  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	char  ch  =  searchChars[i];	      char    ch    =    cs.charAt(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  char  ch  =  searchChars.charAt(i);  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	char  ch  =  searchChars.charAt(i);	      char    ch    =    cs.charAt(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  if(searchChars[i]  ==  ch)  {  return  false;  }	      if(searchLength    >    0)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  ==  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  ==  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	      if(searchLength    >    0)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  if(searchLast  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	      if(searchLength    >    0)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
33	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
34	[BUG]  [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  ==  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
35	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i    +    1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLast;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i    +    1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLast;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLast;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  searchLast;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i    +    1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
38	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
39	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  j  =  0;  j  <  csLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
43	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs.charAt(i  +  1);  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs.charAt(i    +    1);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
52	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
53	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  true	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  j  =  0;  j  <  searchLast;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
56	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  j  =  0;  j  <  csLength;  j++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    j    =    0;    j    <    searchLast;    j++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
57	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
58	[BUG]  [BUGGY]  if(searchLength!=  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength!=  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength!=  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	      if(searchLength    >    0)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
59	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  char  ch  =  searchChars[i].charAt(i);  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	char  ch  =  searchChars[i].charAt(i);	      char    ch    =    cs.charAt(i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  char  ch  =  cs[i];  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    char    ch    =    cs[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  if(ch  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(ch  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(ch  >  0)  {  if(searchChars[i]  ==  ch)  {  return  true;  }	      if(searchLength    >    0)    {    if(searchChars[i]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
62	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
63	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs.charAt(i)))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs.charAt(i)))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs.charAt(i)))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
64	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
65	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  ch  +  1;  j++)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  for(int  j  =  0;  j  <  ch  +  1;  j++)  {  [BUGGY]    if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	for(int  j  =  0;  j  <  ch  +  1;  j++)  {	  for(int    j    =    0;    j    <    ch;    j++)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(ch,  searchChars[i]))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
68	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs.charAt(i)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs.charAt(i)))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(ch,  cs.charAt(i)))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(ch,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  true	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!Character.isDigit(ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!Character.isDigit(ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
73	[BUG]  [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLength  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
74	[BUG]  [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(searchLast  >  0)  {  for(int  i  =  0;  i  <  csLength;  i++)  {  if(!isEmpty(cs,  ch))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
75	[BUG]  [BUGGY]  if(ch  ==  ' "')  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  false;  }  int  csLength  =  cs.length();  int  searchLength  =  searchChars.length;  int  csLast  =  csLength  -  1;  int  searchLast  =  searchLength  -  1;  for  (int  i  =  0;  i  <  csLength;  i++)  {  char  ch  =  cs.charAt(i);    [BUGGY]  if(ch  ==  ' "')  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }  [BUGGY]    for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1453	1453	10	replace	if(ch  ==  ' "')  {  for(int  i  =  0;  i  <  searchLength;  i++)  {  if(!isEmpty(cs,  searchChars[i]))  {  return  false;  }	      if(searchLength    >    0)    {    for(int    i    =    0;    i    <    searchLength;    i++)    {    if(!isEmpty(cs,    searchChars[i]))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
