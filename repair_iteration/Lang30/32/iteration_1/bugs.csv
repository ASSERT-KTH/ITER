bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  true;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]  return  true;  [BUGGY]  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	return  true;	return  false;  	non-compiled	[CE]  <identifier>  expected	63	None	replace
2	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  [BUGGY]  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }	return  false;  	non-compiled	[CE]  <identifier>  expected	63	None	replace
3	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [BUGGY]  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }	return  false;  	non-compiled	[CE]  <identifier>  expected	63	None	replace
4	[BUG]  [BUGGY]  if(searchChars.length  >  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]  if(searchChars.length  >  0)  {  return  false;  }  [BUGGY]  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	if(searchChars.length  >  0)  {  return  false;  }	return  false;  	non-compiled	[CE]  <identifier>  expected	63	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]    [BUGGY]  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	  	return  false;  	non-compiled	[CE]  <identifier>  expected	63	None	replace
6	[BUG]  [BUGGY]    if(searchChars.length  >  0)  {  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]    if(searchChars.length  >  0)  {  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	    if(searchChars.length  >  0)  {  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }		non-compiled	[CE]  <identifier>  expected	64	None	add
7	[BUG]  [BUGGY]    if(searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]    if(searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }  [BUGGY]  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	    if(searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  true;  }		non-compiled	[CE]  <identifier>  expected	64	None	add
8	[BUG]  [BUGGY]    if(searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]    if(searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  }  [BUGGY]  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	    if(searchChars[j  +  1]!=  cs.charAt(i  +  1))  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	64	None	add
9	[BUG]  [BUGGY]    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  false;  }  [BUGGY]  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	64	None	add
10	[BUG]  [BUGGY]  return(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]  return(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  [BUGGY]  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	return(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;	return  false;  	non-compiled	[CE]  <identifier>  expected	63	None	replace
11	[BUG]  [BUGGY]  return(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]  return(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }  [BUGGY]  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	return(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  ||(searchChars[j  +  1]  ==  cs.charAt(i  +  1)))  {  return  true;  }	return  false;  	non-compiled	[CE]  <identifier>  expected	63	None	replace
12	[BUG]  [BUGGY]    if(searchChars.length  >  0)  {  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {  return  true;  }  }  }  }  [BUGGY]    if(searchChars.length  >  0)  {  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [BUGGY]  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.2581988897471611	1467	1467	10	replace	    if(searchChars.length  >  0)  {  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	64	None	add
