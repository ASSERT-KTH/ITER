bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  searchChars.length  -  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  searchChars.length  -  1;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  searchChars.length  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  searchChars.length  +  1;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
3	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  searchChars.length()  -  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  searchChars.length()  -  1;	  int    searchLen    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  searchChars.length()  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  searchChars.length()  +  1;	  int    searchLen    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  searchChars.length()  -  2;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  searchChars.length()  -  2;	  int    searchLen    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length  -  4;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length  -  4;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
7	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length  -  3;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length  -  3;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
8	[BUG]  [BUGGY]  int  csLen  =  searchChars.indexOf(cs);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.indexOf(cs);  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.indexOf(cs);	  int    csLen    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
9	[BUG]  [BUGGY]  char  csLen  =  cs.indexOf(searchChars);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLen  =  cs.indexOf(searchChars);  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLen  =  cs.indexOf(searchChars);	  int    csLen    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
10	[BUG]  [BUGGY]  int  csLen  =  cs.indexOf(searchChars,  PAD_LIMIT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  cs.indexOf(searchChars,  PAD_LIMIT);  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  cs.indexOf(searchChars,  PAD_LIMIT);	  int    csLen    =    cs.indexOf(searchChars);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
11	[BUG]  [BUGGY]  String  csLimit  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  csLimit  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  csLimit  =  searchChars.length();	  char    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  char  csLimit  =  searchChars.length()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLimit  =  searchChars.length()  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLimit  =  searchChars.length()  +  1;	  char    csLimit    =    searchChars.length();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.length()  +  cs.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.length()  +  cs.length;	  int    csLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
14	[BUG]  [BUGGY]  char  csLimit  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLimit  =  cs.length()  +  searchChars.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLimit  =  cs.length()  +  searchChars.length;	  int    csLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
15	[BUG]  [BUGGY]  String  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  len  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  len  =  cs.length();	  char    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  Char  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Char  len  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Char  len  =  cs.length();	  char    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  String  csLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  csLen  =  searchChars.length();	  String    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  String  csLen  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  csLen  =  cs.length()  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  csLen  =  cs.length()  +  1;	  String    csLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  String  searchLen  =  cs.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  searchLen  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  searchLen  =  cs.length();	  char    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
20	[BUG]  [BUGGY]  char  searchLen  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  searchLen  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  searchLen  =  searchChars.length();	  char    searchLen    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  char  csLen  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLen  =  searchChars.length()  +  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLen  =  searchChars.length()  +  cs.length;	  char    csLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  String  csLen  =  cs.length()  +  searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  csLen  =  cs.length()  +  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  csLen  =  cs.length()  +  searchChars.length;	  char    csLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLen  =  searchChars.length()  +  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLen  =  searchChars.length()  +  cs.length;	  Integer    csLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
24	[BUG]  [BUGGY]  Integer  csLen  =  cs.length()  *  searchChars.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLen  =  cs.length()  *  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLen  =  cs.length()  *  searchChars.length;	  Integer    csLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
25	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.length  -  2;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.length  -  2;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
26	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.length  -  4;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.length  -  4;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
27	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.length  -  3;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.length  -  3;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
28	[BUG]  [BUGGY]  int  len  =  searchChars.length()  +  cs.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  searchChars.length()  +  cs.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  searchChars.length()  +  cs.length;	  int    len    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
29	[BUG]  [BUGGY]  int  len  =  cs.length()  *  searchChars.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  cs.length()  *  searchChars.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  cs.length()  *  searchChars.length;	  int    len    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
30	[BUG]  [BUGGY]  int  len  =  cs.length()  +  searchChars.length  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  cs.length()  +  searchChars.length  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  cs.length()  +  searchChars.length  +  1;	  int    len    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
31	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  searchChars.length  -  4;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  searchChars.length  -  4;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  searchChars.length  -  3;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  searchChars.length  -  3;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  Integer  len  =  cs.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  len  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  len  =  cs.length();	  int    len    =    cs.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  int  len  =  searchChars.length  /  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  searchChars.length  /  2;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  searchChars.length  /  2;	  int    len    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  char  len  =  searchChars.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  len  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  len  =  searchChars.length();	  int    len    =    searchChars.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
36	[BUG]  [BUGGY]  Integer  len  =  searchChars.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  len  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  len  =  searchChars.length();	  int    len    =    searchChars.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
37	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.length  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.length  +  1;	  int    csLimit    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
38	[BUG]  [BUGGY]  char  csLimit  =  searchChars.indexOf(cs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLimit  =  searchChars.indexOf(cs);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLimit  =  searchChars.indexOf(cs);	  char    csLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
39	[BUG]  [BUGGY]  String  csLimit  =  cs.indexOf(searchChars);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  csLimit  =  cs.indexOf(searchChars);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  csLimit  =  cs.indexOf(searchChars);	  char    csLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
40	[BUG]  [BUGGY]  char  csLimit  =  cs.indexOf(searchChars,  PAD_LIMIT);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLimit  =  cs.indexOf(searchChars,  PAD_LIMIT);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLimit  =  cs.indexOf(searchChars,  PAD_LIMIT);	  char    csLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
41	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLen  =  searchChars.length  -  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLen  =  searchChars.length  -  1;	  Integer    csLen    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
42	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLen  =  searchChars.length  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLen  =  searchChars.length  +  1;	  Integer    csLen    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
43	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length  -  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLen  =  searchChars.length  -  2;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLen  =  searchChars.length  -  2;	  Integer    csLen    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
44	[BUG]  [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  SearchChars.indexOf(searchChars);	  int    csLimit    =    SearchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
45	[BUG]  [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars,  cs.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars,  cs.length);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  SearchChars.indexOf(searchChars,  cs.length);	  int    csLimit    =    SearchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
46	[BUG]  [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars,  0);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  SearchChars.indexOf(searchChars,  0);	  int    csLimit    =    SearchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
47	[BUG]  [BUGGY]  char  csLimit  =  SearchChars.indexOf(cs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLimit  =  SearchChars.indexOf(cs);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLimit  =  SearchChars.indexOf(cs);	  int    csLimit    =    SearchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
48	[BUG]  [BUGGY]  Integer  csLimit  =  searchChars.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLimit  =  searchChars.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLimit  =  searchChars.length();	  int    csLimit    =    searchChars.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  char[]  searchChars  =  searchChars.toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char[]  searchChars  =  searchChars.toCharArray();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char[]  searchChars  =  searchChars.toCharArray();	  char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
50	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchChars);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchChars);  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char[]  searchChars  =  cs.toCharArray(searchChars);	  char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
51	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length  /  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length  /  1;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
52	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length  +  2;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length  +  2;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
53	[BUG]  [BUGGY]  int  len  =  searchChars.length  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  searchChars.length  /  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  searchChars.length  /  1;	  int    len    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  int  len  =  searchChars.length  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  searchChars.length  +  2;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  searchChars.length  +  2;	  int    len    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  +  cs.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  searchChars.length()  +  cs.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  searchChars.length()  +  cs.length;	  int    searchLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
56	[BUG]  [BUGGY]  char  len  =  cs.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  len  =  cs.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  len  =  cs.length;	  int    len    =    cs.length;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
57	[BUG]  [BUGGY]  int  csLimit  =  searchChars.indexOf(cs,  PAD_LIMIT);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.indexOf(cs,  PAD_LIMIT);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.indexOf(cs,  PAD_LIMIT);	  int    csLimit    =    searchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  char  csLen  =  cs.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLen  =  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLen  =  cs.length;	  int    csLen    =    cs.length;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
59	[BUG]  [BUGGY]  int  csLen  =  cs.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  cs.length  -  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  cs.length  -  1;	  int    csLen    =    cs.length;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
60	[BUG]  [BUGGY]  int  csLen  =  searchChars.length()  +  searchChars.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length()  +  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length()  +  searchChars.length;	  int    csLen    =    searchChars.length()    +    cs.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  int  csLen  =  searchChars.length()  *  cs.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length()  *  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length()  *  cs.length;	  int    csLen    =    searchChars.length()    +    cs.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  Char  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Char  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Char  csLen  =  searchChars.length();	  Char    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  Char  csLen  =  cs.length()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Char  csLen  =  cs.length()  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Char  csLen  =  cs.length()  +  1;	  Char    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  char  csLen  =  cs.length()  *  searchChars.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char  csLen  =  cs.length()  *  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char  csLen  =  cs.length()  *  searchChars.length;	  int    csLen    =    cs.length()    *    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
65	[BUG]  [BUGGY]  int  csLen  =  SearchChars.length()  *  cs.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  SearchChars.length()  *  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  SearchChars.length()  *  cs.length;	  int    csLen    =    cs.length()    *    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
66	[BUG]  [BUGGY]  int  csLimit  =  cs.indexOf(searchChars,  INDEX_NOT_FOUND);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  cs.indexOf(searchChars,  INDEX_NOT_FOUND);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  cs.indexOf(searchChars,  INDEX_NOT_FOUND);	  int    csLimit    =    cs.indexOf(searchChars,    PAD_LIMIT);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
67	[BUG]  [BUGGY]  Integer  csLen  =  searchChars.length()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLen  =  searchChars.length()  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLen  =  searchChars.length()  +  1;	  Integer    csLen    =    searchChars.length();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
68	[BUG]  [BUGGY]  String  csLimit  =  cs.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  String  csLimit  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	String  csLimit  =  cs.length();	  char    csLimit    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
69	[BUG]  [BUGGY]  Char  csLimit  =  cs.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Char  csLimit  =  cs.length();  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Char  csLimit  =  cs.length();	  char    csLimit    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
70	[BUG]  [BUGGY]  int  csLimit  =  searchChars.indexOf(cs,  INDEX_NOT_FOUND);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.indexOf(cs,  INDEX_NOT_FOUND);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.indexOf(cs,  INDEX_NOT_FOUND);	  int    csLimit    =    cs.indexOf(searchChars,    PAD_LIMIT);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
71	[BUG]  [BUGGY]  int  csLimit  =  cs.indexOf(searchChars,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  cs.indexOf(searchChars,  0);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  cs.indexOf(searchChars,  0);	  int    csLimit    =    cs.indexOf(searchChars,    PAD_LIMIT);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
72	[BUG]  [BUGGY]  Enum.int  csLen  =  cs.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Enum.int  csLen  =  cs.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Enum.int  csLen  =  cs.length();	  Integer    csLen    =    cs.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
73	[BUG]  [BUGGY]  Integer  csLen  =  cs.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Integer  csLen  =  cs.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Integer  csLen  =  cs.length;	  Integer    csLen    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
74	[BUG]  [BUGGY]  int  csLen  =  searchChars.length()  +  INDEX_NOT_FOUND;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length()  +  INDEX_NOT_FOUND;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length()  +  INDEX_NOT_FOUND;	  int    csLen    =    searchChars.length()    +    cs.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
75	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length  -  1  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length  -  1  +  1;	  int    csLen    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
76	[BUG]  [BUGGY]  int  csLimit  =  searchChars.indexOf(ch);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.indexOf(ch);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.indexOf(ch);	  int    csLimit    =    searchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
77	[BUG]  [BUGGY]  int  csLimit  =  searchChars.indexOf(this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.indexOf(this);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.indexOf(this);	  int    csLimit    =    searchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
78	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  char[]  searchChars  =  cs.toString();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	char[]  searchChars  =  cs.toString();	  char[]    searchChars    =    cs.toCharArray();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
79	[BUG]  [BUGGY]  int  len  =  searchChars.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  len  =  searchChars.length  -  1  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  len  =  searchChars.length  -  1  +  1;	  int    len    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
80	[BUG]  [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars,  -1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  SearchChars.indexOf(searchChars,  -1);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  SearchChars.indexOf(searchChars,  -1);	  int    csLimit    =    SearchChars.indexOf(cs);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
81	[BUG]  [BUGGY]  int  csLen  =  searchChars.length  *  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length  *  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length  *  1;	  int    csLen    =    searchChars.length    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
82	[BUG]  [BUGGY]  Char  csLen  =  cs.charAt(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Char  csLen  =  cs.charAt(0);  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Char  csLen  =  cs.charAt(0);	  Char    csLen    =    cs.length();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
83	[BUG]  [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  searchChars.length  -  1  +  1;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  searchChars.length  -  1  +  1;	  int    csLimit    =    searchChars.length    -    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
84	[BUG]  [BUGGY]  int  csLen  =  searchChars.length()  *  cs;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  searchChars.length()  *  cs;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  searchChars.length()  *  cs;	  int    csLen    =    cs.length()    *    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
85	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  searchChars.length  -  2;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  searchChars.length  -  2;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
86	[BUG]  [BUGGY]  Char  csLen  =  cs.length()  +  searchChars.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Char  csLen  =  cs.length()  +  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Char  csLen  =  cs.length()  +  searchChars.length;	  char    csLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
87	[BUG]  [BUGGY]  Char  csLimit  =  cs.indexOf(searchChars);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Char  csLimit  =  cs.indexOf(searchChars);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Char  csLimit  =  cs.indexOf(searchChars);	  char    csLimit    =    cs.indexOf(searchChars);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
88	[BUG]  [BUGGY]  int  csLimit  =  cs.indexOf(searchChars,  searchChars.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  cs.indexOf(searchChars,  searchChars.length);  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  cs.indexOf(searchChars,  searchChars.length);	  int    csLimit    =    cs.indexOf(searchChars,    PAD_LIMIT);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
89	[BUG]  [BUGGY]  Int  csLen  =  searchChars.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  Int  csLen  =  searchChars.length();  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	Int  csLen  =  searchChars.length();	  int    csLen    =    searchChars.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
90	[BUG]  [BUGGY]  int  searchLen  =  cs.length()  *  searchChars.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  searchLen  =  cs.length()  *  searchChars.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  searchLen  =  cs.length()  *  searchChars.length;	  int    searchLen    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
91	[BUG]  [BUGGY]  int  csLimit  =  cs.length()  *  searchChars.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLimit  =  cs.length()  *  searchChars.length;  [BUGGY]      int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLimit  =  cs.length()  *  searchChars.length;	  int    csLimit    =    cs.length()    +    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
92	[BUG]  [BUGGY]  int  csLen  =  cs.length()  /  searchChars.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  cs.length()  /  searchChars.length;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  cs.length()  /  searchChars.length;	  int    csLen    =    cs.length()    *    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
93	[BUG]  [BUGGY]  int  csLen  =  cs.length()  *  searchChars.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  indexOfAny(CharSequence  cs,  char[]  searchChars)  {  if  (isEmpty(cs)  ||  ArrayUtils.isEmpty(searchChars))  {  return  INDEX_NOT_FOUND;  }      [BUGGY]  int  csLen  =  cs.length()  *  searchChars.length  +  1;  [BUGGY]      int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {  return  i;  }  }  }  [CLASS]  StringUtils  [METHOD]  indexOfAny  [RETURN_TYPE]  int  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLen  end  endLimit  found  i  index  j  len  max  ordinal  searchLen  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1375	1375	10	replace	int  csLen  =  cs.length()  *  searchChars.length  +  1;	  int    csLen    =    cs.length()    *    searchChars.length;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
