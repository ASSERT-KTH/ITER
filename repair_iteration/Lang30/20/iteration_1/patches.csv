bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]!=  ch)  {  return  true;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]!=  ch)  {  return  true;  }	  if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
7	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(ch));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(ch));  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( " ".equals(ch));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
16	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
20	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
21	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
22	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
23	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
26	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  true;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ' "')  {  return  true;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  0)  {  return  false;  }	  if(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  false;  }	  if(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  false;  }	  if(searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
31	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]!=  null)  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  return  containsNone(searchChars);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return  containsNone(searchChars);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(searchChars);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  return  containsNone(searchChars,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return  containsNone(searchChars,  null);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(searchChars,  null);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  return  containsNone(cs,  searchChars);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return  containsNone(cs,  searchChars);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(cs,  searchChars);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  return  containsNone(searchChars,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return  containsNone(searchChars,  true);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(searchChars,  true);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  return  true;  }	  if(searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  while(searchChars!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  while(searchChars!=  null)  {  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars!=  null)  {	  if(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
49	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  return  null;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return  null;  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  null;	  return    false;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  return(cs.indexOf(ch)  ==  -1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return(cs.indexOf(ch)  ==  -1);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(cs.indexOf(ch)  ==  -1);	  return    false;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
52	[BUG]  [BUGGY]  return(cs.indexOf(ch)  >=  -1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return(cs.indexOf(ch)  >=  -1);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(cs.indexOf(ch)  >=  -1);	  return    false;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
54	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  return  false;  }	  if(searchChars    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
55	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
56	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  ch);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  ch);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  ch);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
60	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
63	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
64	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]  ==  ch)return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch)return  false;  }	  if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]!=  ch)return  true;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]!=  ch)return  true;  }	  if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
66	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]!=  ch)return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]!=  ch)return  false;  }	  if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
68	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	      for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
69	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars[j]  ==  ch)return  true;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch)return  true;  }	  if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
71	[BUG]  [BUGGY]  while(searchChars!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  while(searchChars!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars!=  null)  {  return  false;  }	  if(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
72	[BUG]  [BUGGY]  return  cs.indexOf(ch);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return  cs.indexOf(ch);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  cs.indexOf(ch);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
73	[BUG]  [BUGGY]  return  containsNone(ch,  searchChars);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  return  containsNone(ch,  searchChars);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  searchChars);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
74	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }    [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	      if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
