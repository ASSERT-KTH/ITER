bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
2	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
3	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  String  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
4	[BUG]  [BUGGY]  return  containsNone(ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch);	  return    containsNone(searchChars);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
5	[BUG]  [BUGGY]  return  contains(searchChars);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  contains(searchChars);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  contains(searchChars);	  return    containsNone(searchChars);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
6	[BUG]  [BUGGY]  return  containsValue(ch);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsValue(ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsValue(ch);	  return    containsNone(searchChars);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
7	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
8	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
9	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >>  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >>  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >>  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "CharSequence  is  not  a  valid  char  ' "  +  ch  + "'. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "CharSequence  is  not  a  valid  char  ' "  +  ch  + "'. ");  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "CharSequence  is  not  a  valid  char  ' "  +  ch  + "'. ");	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "CharSequence  is  not  a  valid  char  ' "  +  ch  + "' ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "CharSequence  is  not  a  valid  char  ' "  +  ch  + "' ");  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "CharSequence  is  not  a  valid  char  ' "  +  ch  + "' ");	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  'n')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
14	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
15	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
16	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
17	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    EMPTY)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
18	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    EMPTY)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
19	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    EMPTY)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
20	[BUG]  [BUGGY]  return  containsNone(cs,  ch,  searchChars);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(cs,  ch,  searchChars);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(cs,  ch,  searchChars);	  return    containsNone(ch,    searchChars);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
21	[BUG]  [BUGGY]  return  containsNone(ch,  searchChars,  cs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch,  searchChars,  cs);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  searchChars,  cs);	  return    containsNone(ch,    searchChars);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
22	[BUG]  [BUGGY]  return  containsNone(ch,  searchChars,  j);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch,  searchChars,  j);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  searchChars,  j);	  return    containsNone(ch,    searchChars);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
23	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
24	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
25	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ch));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ch));  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(ch));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
27	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalArgumentException( " ".trim());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
28	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
29	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '%')  {  return  false;  }	  for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
31	[BUG]  [BUGGY]  while(searchChars  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars  ==  null)  {  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars  ==  null)  {	  while(searchChars!=    null)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
32	[BUG]  [BUGGY]  while(searchChars!=  null  &&  searchChars.length  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars!=  null  &&  searchChars.length  >  0)  {  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars!=  null  &&  searchChars.length  >  0)  {	  while(searchChars!=    null)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
33	[BUG]  [BUGGY]  while(searchChars  ==  null  &&  searchChars.length  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars  ==  null  &&  searchChars.length  >  0)  {  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars  ==  null  &&  searchChars.length  >  0)  {	  while(searchChars!=    null)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
34	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(ch));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalStateException( " ".equals(ch));  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalStateException( " ".equals(ch));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
35	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
36	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Invalid  searchChars: "  +  cs.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalStateException( "Invalid  searchChars: "  +  cs.length());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalStateException( "Invalid  searchChars: "  +  cs.length());	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
37	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
38	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
39	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >>  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >>  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >>  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
41	[BUG]  [BUGGY]  return  containsNone(ch,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch,  true);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  true);	  return    containsNone(searchChars,    true);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
42	[BUG]  [BUGGY]  return  containsNone(searchChars,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(searchChars,  false);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(searchChars,  false);	  return    containsNone(searchChars,    true);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
43	[BUG]  [BUGGY]  return  containsNone(cs,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(cs,  true);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(cs,  true);	  return    containsNone(searchChars,    true);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
44	[BUG]  [BUGGY]  return  containNone(ch,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containNone(ch,  true);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containNone(ch,  true);	  return    containsNone(searchChars,    true);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
45	[BUG]  [BUGGY]  return  containsNone(ch,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch,  null);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  null);	  return    containsNone(searchChars,    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
46	[BUG]  [BUGGY]  return  containsNone(searchChars,  cs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(searchChars,  cs);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(searchChars,  cs);	  return    containsNone(searchChars,    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
47	[BUG]  [BUGGY]  return  containsNone(cs,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(cs,  null);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(cs,  null);	  return    containsNone(searchChars,    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
48	[BUG]  [BUGGY]  return  containsNone(searchChars,  null,  ch);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(searchChars,  null,  ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(searchChars,  null,  ch);	  return    containsNone(searchChars,    null);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
49	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
50	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
51	[BUG]  [BUGGY]  return  containsNone(cs,  searchChars,  j);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(cs,  searchChars,  j);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(cs,  searchChars,  j);	  return    containsNone(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
52	[BUG]  [BUGGY]  return  containsNone(cs,  searchChars,  ch);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(cs,  searchChars,  ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(cs,  searchChars,  ch);	  return    containsNone(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
53	[BUG]  [BUGGY]  return  containsNone(cs,  ch);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(cs,  ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(cs,  ch);	  return    containsNone(cs,    searchChars);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
54	[BUG]  [BUGGY]  return(cs.indexOf(ch)  ==  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(cs.indexOf(ch)  ==  0);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(cs.indexOf(ch)  ==  0);	  return(cs.indexOf(ch)    ==    -1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
55	[BUG]  [BUGGY]  return(cs.indexOf(ch)  >=  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(cs.indexOf(ch)  >=  0);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(cs.indexOf(ch)  >=  0);	  return(cs.indexOf(ch)    ==    -1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
56	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
57	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
58	[BUG]  [BUGGY]  While(searchChars!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  While(searchChars!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	While(searchChars!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
59	[BUG]  [BUGGY]  While(searchChars  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  While(searchChars  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	While(searchChars  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
60	[BUG]  [BUGGY]  While(searchChars!=  null  &&  searchChars.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  While(searchChars!=  null  &&  searchChars.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	While(searchChars!=  null  &&  searchChars.length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
61	[BUG]  [BUGGY]  While(searchChars!=  null)  {  throw  new  IllegalArgumentException( " ".equals(searchChars[j]));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  While(searchChars!=  null)  {  throw  new  IllegalArgumentException( " ".equals(searchChars[j]));  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	While(searchChars!=  null)  {  throw  new  IllegalArgumentException( " ".equals(searchChars[j]));  }	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
62	[BUG]  [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  0))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  0))  {  return  false;  }	  while((    searchChars[j]    ==    ch)&&(searchChars[j]!=    ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  true;  }	  while((    searchChars[j]    ==    ch)&&(searchChars[j]!=    ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  While((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  While((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	While((  searchChars[j]  ==  ch)&&(searchChars[j]!=  ch))  {  return  false;  }	  while((    searchChars[j]    ==    ch)&&(searchChars[j]!=    ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
65	[BUG]  [BUGGY]  if(searchChars[j]  >=  ch)return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]  >=  ch)return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  >=  ch)return  false;  }	  if(searchChars[j]!=    ch)return    true;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
66	[BUG]  [BUGGY]  if(searchChars[j]  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  null)  {  return  false;  }	  if(searchChars[j]!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
67	[BUG]  [BUGGY]  while((  searchChars[j]!=  null)&&(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]!=  null)&&(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]!=  null)&&(searchChars[j]!=  ch))  {  return  false;  }	  if(searchChars[j]!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
68	[BUG]  [BUGGY]  while((  searchChars[j]!=  null)&&(searchChars[j]!=  null))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]!=  null)&&(searchChars[j]!=  null))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]!=  null)&&(searchChars[j]!=  null))  {  return  false;  }	  if(searchChars[j]!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
69	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  for(int    i    =    0;    i    <    searchChars.length;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchCharsLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchCharsLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchCharsLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  for(int    i    =    0;    i    <    searchChars.length;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
71	[BUG]  [BUGGY]  while((  searchChars[j]!=  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]!=  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]!=  ch)&&(searchChars[j]!=  ch))  {  return  false;  }	  if(searchChars[j]!=    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
72	[BUG]  [BUGGY]  while((  searchChars[j]  >=  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]  >=  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  >=  ch)&&(searchChars[j]!=  ch))  {  return  false;  }	  if(searchChars[j]!=    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  'n')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
74	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >=  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  >=  0)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length!=    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
75	[BUG]  [BUGGY]  if(searchChars!=  null  ||  searchChars.length  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null  ||  searchChars.length  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null  ||  searchChars.length  ==  0)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length!=    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
76	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  searchChars.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  searchChars.length());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  searchChars.length());	  throw    new    IllegalArgumentException(   "Invalid    searchChars:   "    +    cs.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
77	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());	  throw    new    IllegalArgumentException(   "Invalid    searchChars:   "    +    cs.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
78	[BUG]  [BUGGY]  Throwables.warning( "Invalid  searchChars: "  +  cs.length());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.warning( "Invalid  searchChars: "  +  cs.length());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.warning( "Invalid  searchChars: "  +  cs.length());	  throw    new    IllegalArgumentException(   "Invalid    searchChars:   "    +    cs.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
79	[BUG]  [BUGGY]  return  this;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  this;  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  this;	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars  for  ' "  +  ch  + "': "  +  cs.charAt(i).toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars  for  ' "  +  ch  + "': "  +  cs.charAt(i).toString());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  searchChars  for  ' "  +  ch  + "': "  +  cs.charAt(i).toString());	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
81	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars  for  ' "  +  ch  + "': "  +  cs.charAt(j));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars  for  ' "  +  ch  + "': "  +  cs.charAt(j));  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  searchChars  for  ' "  +  ch  + "': "  +  cs.charAt(j));	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
82	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
83	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
84	[BUG]  [BUGGY]  while(searchChars!=  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars!=  null)  {  return  true;  }	  while(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
85	[BUG]  [BUGGY]  while(searchChars  ==  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars  ==  null)  {  return  true;  }	  while(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
86	[BUG]  [BUGGY]  while(searchChars!=  null  &&  searchChars.length  >  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars!=  null  &&  searchChars.length  >  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars!=  null  &&  searchChars.length  >  0)  {  return  false;  }	  while(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '%')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
88	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
89	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
90	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  String  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  String  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  String  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
91	[BUG]  [BUGGY]  return  cs.indexOf(ch,  searchChars.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  cs.indexOf(ch,  searchChars.length);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  cs.indexOf(ch,  searchChars.length);	  return    cs.indexOf(ch);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
92	[BUG]  [BUGGY]  return  cs.indexOf(searchChars[j]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  cs.indexOf(searchChars[j]);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  cs.indexOf(searchChars[j]);	  return    cs.indexOf(ch);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
93	[BUG]  [BUGGY]  return  cs.indexOf(searchChars,  j);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  cs.indexOf(searchChars,  j);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  cs.indexOf(searchChars,  j);	  return    cs.indexOf(ch);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
94	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    1)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
95	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i    +    1);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
96	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i    +    1);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
97	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
98	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
99	[BUG]  [BUGGY]  while((  searchChars[j]  <  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]  <  ch)&&(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  <  ch)&&(searchChars[j]!=  ch))  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
100	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
101	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
102	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
103	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  ch);	  throw    new    IllegalArgumentException(   "Invalid    search    chars:   "    +    ch);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
104	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  ch);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  ch);	  throw    new    IllegalArgumentException(   "Invalid    search    chars:   "    +    ch);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
105	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  cs.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  cs.length);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  cs.length);	  throw    new    IllegalArgumentException(   "Invalid    search    chars:   "    +    ch);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
106	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
107	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
108	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
109	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
110	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
111	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >  1)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >  1)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  >  1)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    1)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
112	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  1)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  1)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  1)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    1)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
113	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
114	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
115	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
116	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  1)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    1)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
117	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)return  false;  }	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
118	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  0)  {  return  true;  }	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
119	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]!=  ch  ||  searchChars[j]  ==  0)  {  return  false;  }	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
120	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  2)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  2)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
121	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >  2)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >  2)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  >  2)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
122	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
123	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
124	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0)  {  return  true;  }	  if(searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
128	[BUG]  [BUGGY]  return  containsValue(searchChars);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsValue(searchChars);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsValue(searchChars);	  return    containsNone(searchChars);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
129	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
130	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
131	[BUG]  [BUGGY]  if(searchChars!=  null  ||  searchChars.length  <  1)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null  ||  searchChars.length  <  1)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null  ||  searchChars.length  <  1)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    1)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
132	[BUG]  [BUGGY]  return  cs.indexOf(ch,  searchChars);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  cs.indexOf(ch,  searchChars);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  cs.indexOf(ch,  searchChars);	  return    cs.indexOf(ch);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
133	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
134	[BUG]  [BUGGY]  while((  ch]  ==  searchChars[j])&&(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  ch]  ==  searchChars[j])&&(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  ch]  ==  searchChars[j])&&(searchChars[j]!=  ch))  {  return  false;  }	  while((    searchChars[j]    ==    ch)&&(searchChars[j]!=    ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
137	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwable  t  =  new  IllegalArgumentException( "Invalid  searchChars: "  +  cs.length());	  throw    new    IllegalArgumentException(   "Invalid    searchChars:   "    +    cs.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
138	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
139	[BUG]  [BUGGY]  while(searchChars[j]!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars[j]!=  null)  {  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars[j]!=  null)  {	  if(searchChars[j]!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
140	[BUG]  [BUGGY]  while(searchChars[j]!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars[j]!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars[j]!=  null)  {  return  false;  }	  if(searchChars[j]!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
141	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
142	[BUG]  [BUGGY]  if(searchChars!=  null  ||  searchChars.length  <  2)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null  ||  searchChars.length  <  2)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null  ||  searchChars.length  <  2)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
143	[BUG]  [BUGGY]  return  containsNone(searchChars,  ch);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(searchChars,  ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(searchChars,  ch);	  return    containsNone(ch,    searchChars);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
144	[BUG]  [BUGGY]  return  containsNone(ch,  searchChars.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch,  searchChars.length);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  searchChars.length);	  return    containsNone(ch,    searchChars);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
145	[BUG]  [BUGGY]  return  containsNone(ch,  searchChars,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch,  searchChars,  null);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  searchChars,  null);	  return    containsNone(ch,    searchChars);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
146	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
147	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
149	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
151	[BUG]  [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  null))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  null))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  ==  ch)&&(searchChars[j]!=  null))  {  return  false;  }	  if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
152	[BUG]  [BUGGY]  While(searchChars!=  null)  {  if(searchChars[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  While(searchChars!=  null)  {  if(searchChars[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	While(searchChars!=  null)  {  if(searchChars[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
153	[BUG]  [BUGGY]  While(searchChars!=  null)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  While(searchChars!=  null)  {  if(searchChars[i]  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	While(searchChars!=  null)  {  if(searchChars[i]  ==  null)  {  return  false;  }	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
154	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i    +    1);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i    +    1);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
156	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
157	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  cs.charAt(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  cs.charAt(i);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  search  chars: "  +  cs.charAt(i);	  throw    new    IllegalArgumentException(   "Invalid    search    chars:   "    +    ch);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
158	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
159	[BUG]  [BUGGY]  if(searchChars!=  null  ||  searchChars.length!=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null  ||  searchChars.length!=  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null  ||  searchChars.length!=  0)  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length!=    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
160	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
162	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
163	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    EMPTY)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
164	[BUG]  [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
165	[BUG]  [BUGGY]  while(searchChars[j]!=  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars[j]!=  ch)  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars[j]!=  ch)  {  return  true;  }	  if(searchChars[j]!=    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
166	[BUG]  [BUGGY]  return(this.input  ==  null)?  null  :  this.input.equals(searchChars[j]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(this.input  ==  null)?  null  :  this.input.equals(searchChars[j]);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(this.input  ==  null)?  null  :  this.input.equals(searchChars[j]);	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
167	[BUG]  [BUGGY]  return(this.input  ==  null)?  null  :  this.input.equals(searchChars[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(this.input  ==  null)?  null  :  this.input.equals(searchChars[i]);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(this.input  ==  null)?  null  :  this.input.equals(searchChars[i]);	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
168	[BUG]  [BUGGY]  return(this.input  ==  null)?  null  :  this.input.charAt(i).toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(this.input  ==  null)?  null  :  this.input.charAt(i).toCharArray();  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(this.input  ==  null)?  null  :  this.input.charAt(i).toCharArray();	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
169	[BUG]  [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars!=  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
170	[BUG]  [BUGGY]  while(searchChars!=  null  &&  searchChars[i  +  1]  ==  ch)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars!=  null  &&  searchChars[i  +  1]  ==  ch)  {  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars!=  null  &&  searchChars[i  +  1]  ==  ch)  {	  while(searchChars!=    null)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
171	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
172	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchChars.length;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  for(int    i    =    0;    i    <    searchChars.length;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
174	[BUG]  [BUGGY]  return  containsNone(findChars,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(findChars,  false);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(findChars,  false);	  return    containsNone(searchChars,    true);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
175	[BUG]  [BUGGY]  while(searchChars  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars  ==  null)  {  return  false;  }	  while(searchChars!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
176	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]!=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]!=  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]!=  0)  {  return  false;  }	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
177	[BUG]  [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
178	[BUG]  [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	char  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
179	[BUG]  [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
180	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
181	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( " "  +  ch);	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
182	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  instantiate  search  string  ' "  +  ch  + "'. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  instantiate  search  string  ' "  +  ch  + "'. ");  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Can  not  instantiate  search  string  ' "  +  ch  + "'. ");	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
184	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  >=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
185	[BUG]  [BUGGY]  if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
186	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  searchChars.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  searchChars.length);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( "Invalid  searchChars: "  +  searchChars.length);	  throw    new    IllegalArgumentException(   "Invalid    searchChars:   "    +    cs.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
187	[BUG]  [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]  ==  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]  ==  ch)&&(searchChars[j]  ==  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  ==  ch)&&(searchChars[j]  ==  ch))  {  return  false;  }	  while((    searchChars[j]    ==    ch)&&(searchChars[j]!=    ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
188	[BUG]  [BUGGY]  while((  searchChars[j]  ==  ch)||(searchChars[j]!=  ch))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while((  searchChars[j]  ==  ch)||(searchChars[j]!=  ch))  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while((  searchChars[j]  ==  ch)||(searchChars[j]!=  ch))  {  return  false;  }	  while((    searchChars[j]    ==    ch)&&(searchChars[j]!=    ch))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
189	[BUG]  [BUGGY]  return  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
190	[BUG]  [BUGGY]  return(ch  ==  'n'  ||  ch  ==  't')?  null  :  ch;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(ch  ==  'n'  ||  ch  ==  't')?  null  :  ch;  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(ch  ==  'n'  ||  ch  ==  't')?  null  :  ch;	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
191	[BUG]  [BUGGY]  return(ch  ==  'n'  ||  ch  ==  'r')?  null  :  ch;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(ch  ==  'n'  ||  ch  ==  'r')?  null  :  ch;  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(ch  ==  'n'  ||  ch  ==  'r')?  null  :  ch;	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
192	[BUG]  [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch;  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(ch  ==  '.'  ||  ch  ==  ',')?  null  :  ch;	  return    null;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
193	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  >=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  >=  2)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
194	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  return  true;  }	  if(searchChars    ==    null)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
195	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i  +  1);  if(ch!=  '+')  {  return  false;  }  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i    +    1);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
196	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    <    2)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
197	[BUG]  [BUGGY]  return  containsNone(ch,  EMPTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(ch,  EMPTY);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(ch,  EMPTY);	  return    containsNone(ch,    searchChars);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
198	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
199	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
200	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
201	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
202	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
203	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
204	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
205	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
206	[BUG]  [BUGGY]  if(searchChars[j]!=  null)return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]!=  null)return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]!=  null)return  false;  }	  if(searchChars[j]!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
207	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
208	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
209	[BUG]  [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
210	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
211	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  null)  {  return  false;  }	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
212	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  null)return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  null)return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j]  ==  null)return  false;  }	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
213	[BUG]  [BUGGY]  return  containsNone(CH,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  containsNone(CH,  true);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  containsNone(CH,  true);	  return    containsNone(searchChars,    true);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
214	[BUG]  [BUGGY]  if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
215	[BUG]  [BUGGY]  if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(csLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
216	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
217	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  >=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    >=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
218	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  ==  0)return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  ==  0)return  false;  }	  if(searchChars    ==    null    ||    searchChars.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
219	[BUG]  [BUGGY]  return  cs.indexOf(ch,  index);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  cs.indexOf(ch,  index);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  cs.indexOf(ch,  index);	  return    cs.indexOf(ch);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
220	[BUG]  [BUGGY]  return  cs.indexOf(ch)  >=  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return  cs.indexOf(ch)  >=  0;  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return  cs.indexOf(ch)  >=  0;	  return    cs.indexOf(ch);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
221	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
222	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  true;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '   "')    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
223	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
224	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  [Delete]  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	[Delete]	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
225	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
226	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	aughtInvalidArgumentException( " ");	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
227	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  aughtInvalidArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	aughtInvalidArgumentException( " ");  }	  if(searchChars    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
228	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    EMPTY)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
229	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  EMPTY)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    EMPTY)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
230	[BUG]  [BUGGY]  return(cs.indexOf(ch)!=  -1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  return(cs.indexOf(ch)!=  -1);  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	return(cs.indexOf(ch)!=  -1);	  return(cs.indexOf(ch)    >=    -1);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
231	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
232	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
233	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
234	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Integer  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
235	[BUG]  [BUGGY]  if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
236	[BUG]  [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]!=  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]!=    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
237	[BUG]  [BUGGY]  while(searchChars!=  null  &&  searchChars[j]  ==  ch)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  while(searchChars!=  null  &&  searchChars[j]  ==  ch)  {  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	while(searchChars!=  null  &&  searchChars[j]  ==  ch)  {	  while(searchChars!=    null)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
238	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
239	[BUG]  [BUGGY]  if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  'n')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    'n')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
240	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  2)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
241	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length  <  1)  {  for(int  i  =  0;  i  <  strLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    strLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
242	[BUG]  [BUGGY]  if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(cs!=  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }	  if(searchChars!=    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
243	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  }	  for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
244	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch.toString());  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	throw  new  IllegalArgumentException( " "  +  ch.toString());	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
245	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(ch));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(ch));  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(ch));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
246	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  true;  }	  if(searchChars    ==    null)    {    for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
247	[BUG]  [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=' "')  {  return  false;  }	  for(int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!='   "')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
248	[BUG]  [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null  ||  searchChars.length!=  0)return  false;  }  [BUGGY]      }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null  ||  searchChars.length!=  0)return  false;  }	  if(searchChars    ==    null    ||    searchChars.length!=    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
249	[BUG]  [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	if(searchChars  ==  null)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  ch  =  cs.charAt(i);  if(ch!=  '%')  {  return  false;  }	  for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '%')    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
250	[BUG]  [BUGGY]  int  i  =  0;  i  <  4;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }      [BUGGY]  int  i  =  0;  i  <  4;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]      return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.31622776601683794	1689	1689	10	replace	int  i  =  0;  i  <  4;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }	  int    i    =    0;    i    <    searchLen;    i++)    {    char    ch    =    cs.charAt(i);    if(searchChars[j]    ==    ch)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
