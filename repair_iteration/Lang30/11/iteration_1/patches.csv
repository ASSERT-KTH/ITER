bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.getValue()  +  1);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.getValue()  +  1);	  return    containsNone(cs,    invalidChars.getValue());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.getValue(),  false);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.getValue(),  false);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.getValue(),  false);	  return    containsNone(cs,    invalidChars.getValue());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars,  cs.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars,  cs.getValue());  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars,  cs.getValue());	  return    containsNone(cs,    invalidChars.getValue());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars,  cs.trim());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars,  cs.trim());  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars,  cs.trim());	  return    containsNone(cs,    invalidChars.trim());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  decomposed);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  decomposed);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.trim(),  decomposed);	  return    containsNone(cs,    invalidChars.trim());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  null);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.trim(),  null);	  return    containsNone(cs,    invalidChars.trim());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  if(cs!=  null  ||  invalidChars  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs!=  null  ||  invalidChars  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs!=  null  ||  invalidChars  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  if(cs  ==  null  ||  invalidChars!=  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null  ||  invalidChars!=  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null  ||  invalidChars!=  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  if(cs!=  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs!=  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs!=  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  if(cs  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  if(cs.isEmpty())  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs.isEmpty())  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs.isEmpty())  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }	      if(invalidChars    ==    null)    {    if(!invalidChars.isEmpty())    {    return    containsNone(cs,    invalidChars);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
12	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }	      if(invalidChars    ==    null)    {    if(!invalidChars.isEmpty())    {    return    containsNone(cs,    invalidChars);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
13	[BUG]  [BUGGY]  if(cs  ==  null  ||  invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null  ||  invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null  ||  invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }	      if(invalidChars    ==    null)    {    if(!invalidChars.isEmpty())    {    return    containsNone(cs,    invalidChars);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  if(cs!=  null  ||  invalidChars  ==  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs!=  null  ||  invalidChars  ==  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs!=  null  ||  invalidChars  ==  null)  {  if(cs.length()  ==  0)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  if(cs  ==  null  ||  invalidChars!=  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null  ||  invalidChars!=  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null  ||  invalidChars!=  null)  {  if(cs.length()  ==  0)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  if(cs.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs.length()  ==  0)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs.length()  ==  0)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  if(cs  ==  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }	  if(invalidChars!=    null)    {    return    containsNone(cs,    invalidChars.toCharArray());    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  if(cs!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }	  if(invalidChars!=    null)    {    return    containsNone(cs,    invalidChars.toCharArray());    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(cs  ==  null  ||  invalidChars  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null  ||  invalidChars  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null  ||  invalidChars  ==  null)  {  if(!invalidChars.equals(cs))  {  return  false;  }	      if(invalidChars    ==    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars,  cs.toLowerCase());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars,  cs.toLowerCase());  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars,  cs.toLowerCase());	  return    containsNone(cs,    invalidChars.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.toLowerCase(),  false);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.toLowerCase(),  false);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.toLowerCase(),  false);	  return    containsNone(cs,    invalidChars.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
22	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.toUpperCase());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.toUpperCase());  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.toUpperCase());	  return    containsNone(cs,    invalidChars.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  if(invalidChars  ==  null  ||  invalidChars.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null  ||  invalidChars.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null  ||  invalidChars.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  if(!invalidChars.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(!invalidChars.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(!invalidChars.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars,  cs.toString());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars,  cs.toString());  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars,  cs.toString());	  return    containsNone(cs,    invalidChars.toString());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.toString(),  decomposed);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.toString(),  decomposed);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.toString(),  decomposed);	  return    containsNone(cs,    invalidChars.toString());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.toString(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.toString(),  false);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.toString(),  false);	  return    containsNone(cs,    invalidChars.toString());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  int  len  =  invalidChars.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  int  len  =  invalidChars.length();  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	int  len  =  invalidChars.length();	      int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  int  len  =  cs.length()  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  int  len  =  cs.length()  +  1;  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	int  len  =  cs.length()  +  1;	      int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  int  len  =  cs.length()  +  invalidChars.length();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  int  len  =  cs.length()  +  invalidChars.length();  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	int  len  =  cs.length()  +  invalidChars.length();	      int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  int  csLength  =  invalidChars.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  int  csLength  =  invalidChars.length();  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	int  csLength  =  invalidChars.length();	      int    csLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  char  csLength  =  cs.length();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  char  csLength  =  cs.length();  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	char  csLength  =  cs.length();	      int    csLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  invalidChars  =  cs.substring(0,  invalidChars.length());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  invalidChars  =  cs.substring(0,  invalidChars.length());  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	invalidChars  =  cs.substring(0,  invalidChars.length());	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  if(validChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.toCharArray();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(validChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.toCharArray();  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(validChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.toCharArray();  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  if(validChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  else  {  invalidChars  =  cs.toCharArray();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(validChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  else  {  invalidChars  =  cs.toCharArray();  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(validChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  else  {  invalidChars  =  cs.toCharArray();  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  validChars  =  cs.substring(0,  invalidChars.length());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  validChars  =  cs.substring(0,  invalidChars.length());  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	validChars  =  cs.substring(0,  invalidChars.length());	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  char[]  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  char[]  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	char[]  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  invalidChars.substring(0,  invalidChars.length());  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  invalidChars.substring(0,  invalidChars.length());  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  invalidChars  =  invalidChars.substring(0,  invalidChars.length());  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  if(cs.isEmpty())  {  if(!invalidChars.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs.isEmpty())  {  if(!invalidChars.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs.isEmpty())  {  if(!invalidChars.isEmpty())  {  return  false;  }	      if(invalidChars    ==    null)    {    if(!invalidChars.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  validChars  =  cs.substring(0,  invalidChars.length()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  validChars  =  cs.substring(0,  invalidChars.length()  -  1);  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	validChars  =  cs.substring(0,  invalidChars.length()  -  1);	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  if(cs.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
43	[BUG]  [BUGGY]  if(!cs.isEmpty())  {  if(invalidChars!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(!cs.isEmpty())  {  if(invalidChars!=  null)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(!cs.isEmpty())  {  if(invalidChars!=  null)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  if(cs!=  null  ||  invalidChars.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs!=  null  ||  invalidChars.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs!=  null  ||  invalidChars.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  if(cs  ==  null  ||  invalidChars  ==  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null  ||  invalidChars  ==  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null  ||  invalidChars  ==  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }	  if(invalidChars    ==    null)    {    return    containsNone(cs,    invalidChars.toCharArray());    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.toString()  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.toString()  +  1);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.toString()  +  1);	  return    containsNone(cs,    invalidChars.toString());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  if(validChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(validChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(validChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.getValue(),  true);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.getValue(),  true);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.getValue(),  true);	  return    containsNone(cs,    invalidChars.getValue());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(1);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(1);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(1);  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.toCharArray();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.toCharArray();  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.toCharArray();  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars.toCharArray());  }	      if(invalidChars    ==    null)    {    if(!invalidChars.isEmpty())    {    return    containsNone(cs,    invalidChars);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
53	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.length());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.length());  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.length());	  return    containsNone(cs,    invalidChars.trim());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  EMPTY);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  EMPTY);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.trim(),  EMPTY);	  return    containsNone(cs,    invalidChars.trim());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
57	[BUG]  [BUGGY]  if(!invalidChars.equals(cs))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(!invalidChars.equals(cs))  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(!invalidChars.equals(cs))  {  return  false;  }	      if(invalidChars    ==    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
58	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  if(cs.length()  ==  0)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  if(cs.length()  ==  0)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
59	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  if(cs.length()  ==  0  ||  invalidChars.length()  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  if(cs.length()  ==  0  ||  invalidChars.length()  ==  0)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  if(cs.length()  ==  0  ||  invalidChars.length()  ==  0)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  if(cs.length()!=  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  if(cs.length()!=  0)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  if(cs.length()!=  0)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  int  csLimit  =  invalidChars.length();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  int  csLimit  =  invalidChars.length();  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	int  csLimit  =  invalidChars.length();	      int    csLength    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
62	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  if(cs.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  if(cs.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  if(cs.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  if(!cs.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  if(!cs.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  if(!cs.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  DECOMPOSED);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.trim(),  DECOMPOSED);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.trim(),  DECOMPOSED);	  return    containsNone(cs,    invalidChars.trim());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
65	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  if(!invalidChars.isEmpty())return  false;  }	      if(invalidChars!=    null)    {    if(!invalidChars.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
66	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
67	[BUG]  [BUGGY]  if(invalidChars!=  null)  {  if(cs.length()  >  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null)  {  if(cs.length()  >  0)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null)  {  if(cs.length()  >  0)  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
68	[BUG]  [BUGGY]  if(cs.length()  ==  0)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs.length()  ==  0)  {  if(!invalidChars.equals(cs))  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs.length()  ==  0)  {  if(!invalidChars.equals(cs))  {  return  false;  }	      if(invalidChars    ==    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
69	[BUG]  [BUGGY]  if(cs  ==  null  ||  invalidChars  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs  ==  null  ||  invalidChars  ==  null)  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs  ==  null  ||  invalidChars  ==  null)  {  return  false;  }	      if(invalidChars    ==    null)    {    if(!invalidChars.equals(cs))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  if(invalidChars!=  null  &&  invalidChars.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars!=  null  &&  invalidChars.isEmpty())  {  return  false;  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars!=  null  &&  invalidChars.isEmpty())  {  return  false;  }	      if(invalidChars!=    null)    {    if(cs.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }  else  {  invalidChars  =  cs.substring(0,  invalidChars.length()  -  1);  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.substring(1);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  if(!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars.toCharArray());  }	      if(invalidChars    ==    null)    {    if(!invalidChars.isEmpty())    {    return    containsNone(cs,    invalidChars);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
73	[BUG]  [BUGGY]  if(invalidChars  ==  null  ||!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null  ||!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null  ||!invalidChars.isEmpty())  {  return  containsNone(cs,  invalidChars);  }	      if(invalidChars    ==    null)    {    if(!invalidChars.isEmpty())    {    return    containsNone(cs,    invalidChars);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
74	[BUG]  [BUGGY]  if(cs!=  null  ||  invalidChars!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(cs!=  null  ||  invalidChars!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(cs!=  null  ||  invalidChars!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }	  if(invalidChars!=    null)    {    return    containsNone(cs,    invalidChars.toCharArray());    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.toLowerCase(),  true);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.toLowerCase(),  true);	  return    containsNone(cs,    invalidChars.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
76	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.getValue(),  EMPTY);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.getValue(),  EMPTY);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.getValue(),  EMPTY);	  return    containsNone(cs,    invalidChars.getValue());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
77	[BUG]  [BUGGY]  return  containsNone(cs,  invalidChars.toString(),  EMPTY);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  return  containsNone(cs,  invalidChars.toString(),  EMPTY);  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	return  containsNone(cs,  invalidChars.toString(),  EMPTY);	  return    containsNone(cs,    invalidChars.toString());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
78	[BUG]  [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  else  {  invalidChars  =  cs.toCharArray();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  else  {  invalidChars  =  cs.toCharArray();  }  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null)  {  invalidChars  =  cs.substring(0,  invalidChars.length());  }  else  {  invalidChars  =  cs.toCharArray();  }	      if(invalidChars    ==    null)    {    invalidChars    =    cs.substring(0,    invalidChars.length()    -    1);    }    else    {    invalidChars    =    cs.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  int  len  =  cs.length()  -  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  int  len  =  cs.length()  -  1;  [BUGGY]    return  containsNone(cs,  invalidChars.toCharArray());  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	int  len  =  cs.length()  -  1;	      int    len    =    cs.length();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
80	[BUG]  [BUGGY]  if(invalidChars  ==  null  ||  invalidChars.toCharArray()!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  boolean  containsNone(CharSequence  cs,  String  invalidChars)  {  if  (cs  ==  null  ||  invalidChars  ==  null)  {  return  true;  }    [BUGGY]  if(invalidChars  ==  null  ||  invalidChars.toCharArray()!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }  [BUGGY]    }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  String  invalidChars  [VARIABLES]  CharSequence  cs  String  EMPTY  decomposed  input  invalidChars  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.3651483716701107	1718	1718	10	replace	if(invalidChars  ==  null  ||  invalidChars.toCharArray()!=  null)  {  return  containsNone(cs,  invalidChars.toCharArray());  }	  if(invalidChars    ==    null)    {    return    containsNone(cs,    invalidChars.toCharArray());    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
