bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  ch  ==  EMPTY)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]!=  ch  ||  ch  ==  EMPTY)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]!=  ch  ||  ch  ==  EMPTY)  {	  if(searchChars[j]!=    ch    ||    ch!=    EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
2	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]!=  EMPTY)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j]!=  EMPTY)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]!=  ch  ||  searchChars[j]!=  EMPTY)  {	  if(searchChars[j]!=    ch    ||    ch!=    EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
3	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  ch!=  EMPTY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]  ==  ch  ||  ch!=  EMPTY)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]  ==  ch  ||  ch!=  EMPTY)  {	  if(searchChars[j]!=    ch    ||    ch!=    EMPTY)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
4	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchLen,  j);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchLen,  j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  cs.toCharArray(searchLen,  j);	  char[]    searchChars    =    cs.toCharArray(searchLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  char  cs  =  cs.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  cs  =  cs.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  cs  =  cs.charAt(j  +  1);	  char    cs    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  char  cs  =  cs.charAt(j,  i);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  cs  =  cs.charAt(j,  i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  cs  =  cs.charAt(j,  i);	  char    cs    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  CharSequence  str  =  searchChars.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  str  =  searchChars.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  str  =  searchChars.charAt(j  +  1);	  CharSequence    str    =    searchChars.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
8	[BUG]  [BUGGY]  CharSequence  str  =  searchChars.charAt(j  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  str  =  searchChars.charAt(j  -  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  str  =  searchChars.charAt(j  -  1);	  CharSequence    str    =    searchChars.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
9	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i  +  1,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i  +  1,  searchLen);	  char    ch    =    cs.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
10	[BUG]  [BUGGY]  String  ch  =  cs.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  cs.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  cs.charAt(j  +  1);	  String    ch    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
11	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j).charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j).charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j).charAt(j  +  1);	  char    ch    =    cs.charAt(i).charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(j  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i).charAt(j  +  2);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i).charAt(j  +  2);	  char    ch    =    cs.charAt(i).charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  +  j;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length  +  j;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length  +  j;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
14	[BUG]  [BUGGY]  int  searchLen  =  ch.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  ch.length;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  ch.length;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
15	[BUG]  [BUGGY]  char[]  str  =  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  str  =  cs.charAt(j);  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  str  =  cs.charAt(j);	  char[]    str    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  char[]  str  =  searchChars.charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  str  =  searchChars.charAt(i);  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  str  =  searchChars.charAt(i);	  char[]    str    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  char[]  str  =  cs.charAt(i,  j);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  str  =  cs.charAt(i,  j);  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  str  =  cs.charAt(i,  j);	  char[]    str    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  CharSequence  str  =  cs.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  str  =  cs.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  str  =  cs.charAt(j  +  1);	  CharSequence    str    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  CharSequence  str  =  cs.charAt(j,  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  str  =  cs.charAt(j,  i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  str  =  cs.charAt(j,  i);	  CharSequence    str    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(j,  j);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i).charAt(j,  j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i).charAt(j,  j);	  char    ch    =    cs.charAt(i).charAt(j,    searchLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j).charAt(i,  searchLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j).charAt(i,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j).charAt(i,  searchLen);	  char    ch    =    cs.charAt(i).charAt(j,    searchLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j).charAt(j,  searchLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j).charAt(j,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j).charAt(j,  searchLen);	  char    ch    =    cs.charAt(i).charAt(j,    searchLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(j,  searchLen  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i).charAt(j,  searchLen  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i).charAt(j,  searchLen  +  1);	  char    ch    =    cs.charAt(i).charAt(j,    searchLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
25	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
26	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
27	[BUG]  [BUGGY]  if(ch!=  searchChars[j]  ||  searchChars[j]!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(ch!=  searchChars[j]  ||  searchChars[j]!=  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(ch!=  searchChars[j]  ||  searchChars[j]!=  null)  {	  if(searchChars[j]!=    ch    ||    searchChars[j]!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  String  ch  =  searchChars[j].charAt(i++);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  searchChars[j].charAt(i++);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  searchChars[j].charAt(i++);	  char    ch    =    searchChars[j].charAt(i++);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
29	[BUG]  [BUGGY]  if(ch  ==  searchChars[j]  ||  searchChars[j]  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(ch  ==  searchChars[j]  ||  searchChars[j]  ==  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(ch  ==  searchChars[j]  ||  searchChars[j]  ==  null)  {	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  Char  ch  =  cs.charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	Char  ch  =  cs.charAt(i);	  Char    ch    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
31	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].length  >=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].length  >=  0)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j].length  >=  0)  {	  if(searchChars[j]    ==    ch    ||    searchChars[j].length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
32	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].length  ==  0)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j].length  ==  0)  {	  if(searchChars[j]    ==    ch    ||    searchChars[j].length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
33	[BUG]  [BUGGY]  if(ch  ==  searchChars[j]  ||  searchChars[j].length!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(ch  ==  searchChars[j]  ||  searchChars[j].length!=  0)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(ch  ==  searchChars[j]  ||  searchChars[j].length!=  0)  {	  if(searchChars[j]    ==    ch    ||    searchChars[j].length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
34	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(j,  i  +  1);	  CharSequence    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
35	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i,  j);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i,  j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i,  j);	  CharSequence    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
36	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
37	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
38	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
39	[BUG]  [BUGGY]  if(searchChars[i]  ==  ch)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[i]  ==  ch)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[i]  ==  ch)  {	  if(searchChars[i]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
40	[BUG]  [BUGGY]  if(searchChars[i]!=  ch  ||  searchChars[i]!=  ch)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[i]!=  ch  ||  searchChars[i]!=  ch)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[i]!=  ch  ||  searchChars[i]!=  ch)  {	  if(searchChars[i]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
41	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(j,  searchLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(j,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  cs.toCharArray(j,  searchLen);	  char[]    searchChars    =    cs.toCharArray(j);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
42	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(j  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  cs.toCharArray(j  +  1);	  char[]    searchChars    =    cs.toCharArray(j);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
43	[BUG]  [BUGGY]  if(ch!=  searchChars[j]  ||  searchChars[j]  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(ch!=  searchChars[j]  ||  searchChars[j]  ==  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(ch!=  searchChars[j]  ||  searchChars[j]  ==  null)  {	  if(searchChars[j]!=    ch    ||    searchChars[j]    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  char  cs  =  searchChars.charAt(j);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  cs  =  searchChars.charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  cs  =  searchChars.charAt(j);	  CharSequence    cs    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  char  cs  =  searchChars.charAt(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  cs  =  searchChars.charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  cs  =  searchChars.charAt(i);	  CharSequence    cs    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j).charAt(j);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j).charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j).charAt(j);	  char    ch    =    cs.charAt(j).charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j).charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j).charAt(i  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j).charAt(i  +  1);	  char    ch    =    cs.charAt(j).charAt(i);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  int  searchLen  =  ch.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  ch.length();  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  ch.length();	  int    searchLen    =    searchChars.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
49	[BUG]  [BUGGY]  CharSequence  ch  =  searchChars.charAt(j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  searchChars.charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  searchChars.charAt(j);	  CharSequence    ch    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
50	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars.charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars.charAt(i);	  CharSequence    ch    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
51	[BUG]  [BUGGY]  String  cs  =  cs.charAt(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  cs  =  cs.charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  cs  =  cs.charAt(i);	  char    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
52	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(i  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(i  +  1);	  CharSequence    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
53	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(j  *  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(j  *  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(j  *  1);	  CharSequence    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
54	[BUG]  [BUGGY]  char  ch  =  searchChars[j].charAt(j++);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars[j].charAt(j++);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars[j].charAt(j++);	  char    ch    =    searchChars[j].charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
55	[BUG]  [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
56	[BUG]  [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
57	[BUG]  [BUGGY]  int  len  =  searchChars.length;  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  searchChars.length;  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  searchChars.length;  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
58	[BUG]  [BUGGY]  if(ch  ==  searchChars[i]  ||  searchChars[j]!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(ch  ==  searchChars[i]  ||  searchChars[j]!=  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(ch  ==  searchChars[i]  ||  searchChars[j]!=  null)  {	  if(ch    ==    searchChars[j]    ||    searchChars[j]!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
59	[BUG]  [BUGGY]  if(ch  ==  searchChars[j]  ||  searchChars[j].length()!=  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(ch  ==  searchChars[j]  ||  searchChars[j].length()!=  0)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(ch  ==  searchChars[j]  ||  searchChars[j].length()!=  0)  {	  if(ch    ==    searchChars[j]    ||    searchChars[j]!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
61	[BUG]  [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  cs.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
62	[BUG]  [BUGGY]  int  len  =  searchChars.length;  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  searchChars.length;  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  searchChars.length;  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
63	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  1  +  j;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length  -  1  +  j;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length  -  1  +  j;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
64	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length  -  3;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length  -  3;	  int    searchLen    =    searchChars.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  cs  =  searchChars.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  cs  =  searchChars.charAt(j  +  1);	  CharSequence    cs    =    searchChars.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  char[]  searchChars  =  searchChars.toCharArray(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  searchChars.toCharArray(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  searchChars.toCharArray(i);	  char[]    searchChars    =    cs.toCharArray(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
67	[BUG]  [BUGGY]  String  ch  =  searchChars[j].charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  searchChars[j].charAt(i  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  searchChars[j].charAt(i  +  1);	  String    ch    =    searchChars[j].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
68	[BUG]  [BUGGY]  String  ch  =  searchChars[j].charAt(j);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  searchChars[j].charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  searchChars[j].charAt(j);	  String    ch    =    searchChars[j].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
69	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j  *  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j  *  1);	  char    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
70	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j  +  2);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j  +  2);	  char    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
71	[BUG]  [BUGGY]  char  ch  =  searchChars.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars.charAt(j  +  1);	  char    ch    =    searchChars.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
72	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  /  j;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length()  /  j;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length()  /  j;	  int    searchLen    =    searchChars.length()    +    j;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
73	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  +  j  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length()  +  j  +  1;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length()  +  j  +  1;	  int    searchLen    =    searchChars.length()    +    j;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
74	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
75	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
76	[BUG]  [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
77	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(i,  j  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(i,  j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(i,  j  +  1);	  CharSequence    ch    =    cs.charAt(i,    j);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
78	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length  -  4;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length  -  4;	  int    searchLen    =    searchChars.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
79	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j,  i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j,  i  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j,  i  +  1);	  char    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
80	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j,  j  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j,  j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j,  j  +  1);	  char    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
81	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j,  j);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j,  j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j,  j);	  char    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
82	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j);  searchChars[j]  =  ch;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j);  searchChars[j]  =  ch;  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j);  searchChars[j]  =  ch;	  char    ch    =    cs.charAt(i);    searchChars[j]    =    ch;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i);  searchChars[j]  =  JsonStringEncoder.getInstance().quoteAsString(searchChars[j]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i);  searchChars[j]  =  JsonStringEncoder.getInstance().quoteAsString(searchChars[j]);  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i);  searchChars[j]  =  JsonStringEncoder.getInstance().quoteAsString(searchChars[j]);	  char    ch    =    cs.charAt(i);    searchChars[j]    =    ch;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchLen,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(searchLen,  i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  cs.toCharArray(searchLen,  i);	  char[]    searchChars    =    cs.toCharArray(searchLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
85	[BUG]  [BUGGY]  if(searchChars[j]!=  null  ||  searchChars[j]  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]!=  null  ||  searchChars[j]  ==  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]!=  null  ||  searchChars[j]  ==  null)  {	  if(searchChars[j]!=    ch    ||    searchChars[j]    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
86	[BUG]  [BUGGY]  Char  ch  =  searchChars[j].charAt(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  Char  ch  =  searchChars[j].charAt(i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	Char  ch  =  searchChars[j].charAt(i);	  String    ch    =    searchChars[j].charAt(i);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
87	[BUG]  [BUGGY]  if(searchChars[i]!=  ch  ||  searchChars[i]!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[i]!=  ch  ||  searchChars[i]!=  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[i]!=  ch  ||  searchChars[i]!=  null)  {	  if(searchChars[i]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
88	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(searchLen,  j);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i).charAt(searchLen,  j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i).charAt(searchLen,  j);	  char    ch    =    cs.charAt(i).charAt(j,    searchLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(j++);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(j++);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars[i].charAt(j++);	  char    ch    =    searchChars[j].charAt(i++);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
90	[BUG]  [BUGGY]  char[]  str  =  cs.charAt(i,  ch);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  str  =  cs.charAt(i,  ch);  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  str  =  cs.charAt(i,  ch);	  char[]    str    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  '+')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch    ==    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
95	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j,  i  +  1,  searchLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j,  i  +  1,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j,  i  +  1,  searchLen);	  char    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true	  if(searchLen    >    0)    {    for(int    i    =    0;    i    <    csLen;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
98	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  searchLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(j,  i  +  searchLen);	  CharSequence    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
99	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j].length!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j].length!=  0)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]!=  ch  ||  searchChars[j].length!=  0)  {	  if(searchChars[j]    ==    ch    ||    searchChars[j].length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
100	[BUG]  [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j].length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]!=  ch  ||  searchChars[j].length  ==  0)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]!=  ch  ||  searchChars[j].length  ==  0)  {	  if(searchChars[j]    ==    ch    ||    searchChars[j].length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
101	[BUG]  [BUGGY]  CharSequence  cs  =  searchChars.charAt(j,  i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  cs  =  searchChars.charAt(j,  i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  cs  =  searchChars.charAt(j,  i);	  CharSequence    cs    =    searchChars.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
102	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j  +  3);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j  +  3);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j  +  3);	  char    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
103	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  cs.toCharArray(i,  j);	  char[]    searchChars    =    cs.toCharArray(j);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
104	[BUG]  [BUGGY]  char  ch  =  searchChars[i].charAt(j);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars[i].charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars[i].charAt(j);	  char    ch    =    searchChars[j].charAt(j);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
105	[BUG]  [BUGGY]  if(searchChars[j]!=  null  ||  searchChars[j]!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]!=  null  ||  searchChars[j]!=  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]!=  null  ||  searchChars[j]!=  null)  {	  if(searchChars[j]!=    ch    ||    searchChars[j]!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
106	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(searchLen  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i).charAt(searchLen  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i).charAt(searchLen  +  1);	  char    ch    =    cs.charAt(i).charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
107	[BUG]  [BUGGY]  if(searchChars[j]!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]!=  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]!=  null)  {	  if(ch    ==    searchChars[j]    ||    searchChars[j]!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
108	[BUG]  [BUGGY]  if(searchChars[j]  ==  null  ||  searchChars[j]!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]  ==  null  ||  searchChars[j]!=  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]  ==  null  ||  searchChars[j]!=  null)  {	  if(ch    ==    searchChars[j]    ||    searchChars[j]!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
109	[BUG]  [BUGGY]  CharSequence  str  =  searchChars[i];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  str  =  searchChars[i];  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  str  =  searchChars[i];	  CharSequence    str    =    searchChars.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
110	[BUG]  [BUGGY]  int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
111	[BUG]  [BUGGY]  int  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
112	[BUG]  [BUGGY]  char  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '+')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
113	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(j,  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(j,  i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  cs.toCharArray(j,  i);	  char[]    searchChars    =    cs.toCharArray(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
114	[BUG]  [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  searchChars  =  cs.toCharArray(i,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  searchChars  =  cs.toCharArray(i,  searchLen);	  char[]    searchChars    =    cs.toCharArray(i);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
115	[BUG]  [BUGGY]  char  ch  =  searchChars[j].charAt(i  +  3);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars[j].charAt(i  +  3);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars[j].charAt(i  +  3);	  char    ch    =    searchChars[j].charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
116	[BUG]  [BUGGY]  char  ch  =  searchChars[j].charAt(i  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars[j].charAt(i  +  2);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars[j].charAt(i  +  2);	  char    ch    =    searchChars[j].charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
117	[BUG]  [BUGGY]  int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
118	[BUG]  [BUGGY]  int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  len  =  searchChars.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
119	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].equals(ch))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[j]  ==  ch  ||  searchChars[j].equals(ch))  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[j]  ==  ch  ||  searchChars[j].equals(ch))  {	  if(searchChars[j]    ==    ch    ||    searchChars[j]    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
120	[BUG]  [BUGGY]  String  ch  =  cs.charAt(j,  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  cs.charAt(j,  i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  cs.charAt(j,  i);	  char    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
121	[BUG]  [BUGGY]  String  ch  =  searchChars.charAt(j);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  searchChars.charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  searchChars.charAt(j);	  char    ch    =    searchChars.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
122	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(j  +  1,  searchLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(j  +  1,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(j  +  1,  searchLen);	  CharSequence    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
123	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(j  +  1,  searchCharsLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(j  +  1,  searchCharsLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(j  +  1,  searchCharsLen);	  CharSequence    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
124	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(j  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i).charAt(j  *  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i).charAt(j  *  1);	  char    ch    =    cs.charAt(i).charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
125	[BUG]  [BUGGY]  String  ch  =  searchChars[j].charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  searchChars[j].charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  searchChars[j].charAt(j  +  1);	  char    ch    =    searchChars[j].charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
126	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  cs  =  cs.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  cs  =  cs.charAt(j  +  1);	  CharSequence    cs    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
127	[BUG]  [BUGGY]  CharSequence  cs  =  cs.charAt(j,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  cs  =  cs.charAt(j,  i);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  cs  =  cs.charAt(j,  i);	  CharSequence    cs    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
128	[BUG]  [BUGGY]  char  ch  =  searchChars[j].charAt(i  +  1,  j);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars[j].charAt(i  +  1,  j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars[j].charAt(i  +  1,  j);	  char    ch    =    searchChars[j].charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
129	[BUG]  [BUGGY]  char  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  len  =  str.length();  for(int  i  =  0;  i  <  len;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  true;  }	  int    len    =    str.length();    for(int    i    =    0;    i    <    len;    i++)    {    char    ch    =    cs.charAt(i);    if(ch!=    '-')    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
130	[BUG]  [BUGGY]  String  ch  =  cs.charAt(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  String  ch  =  cs.charAt(i  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	String  ch  =  cs.charAt(i  +  1);	  char    ch    =    cs.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
131	[BUG]  [BUGGY]  Char  ch  =  cs.charAt(j  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  Char  ch  =  cs.charAt(j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	Char  ch  =  cs.charAt(j  +  1);	  char    ch    =    cs.charAt(i    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
132	[BUG]  [BUGGY]  char  ch  =  searchChars[j];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  searchChars[j];  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  searchChars[j];	  char    ch    =    cs.charAt(i);    searchChars[j]    =    ch;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
133	[BUG]  [BUGGY]  Char  cs  =  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  Char  cs  =  cs.charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	Char  cs  =  cs.charAt(j);	  char    cs    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
134	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length()  -  j;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length()  -  j;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length()  -  j;	  int    searchLen    =    searchChars.length()    +    j;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
135	[BUG]  [BUGGY]  int  searchLen  =  searchChars.length  -  j;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  int  searchLen  =  searchChars.length  -  j;  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	int  searchLen  =  searchChars.length  -  j;	  int    searchLen    =    searchChars.length;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
136	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(i,  j,  searchLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(i,  j,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(i,  j,  searchLen);	  CharSequence    ch    =    cs.charAt(i,    j);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
137	[BUG]  [BUGGY]  char  ch  =  cs.charAt(i).charAt(j,  j  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(i).charAt(j,  j  +  1);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(i).charAt(j,  j  +  1);	  char    ch    =    cs.charAt(i).charAt(j,    searchLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
138	[BUG]  [BUGGY]  if(searchChars[i]!=  ch  ||  searchChars[j]!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  if(searchChars[i]!=  ch  ||  searchChars[j]!=  null)  {  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	if(searchChars[i]!=  ch  ||  searchChars[j]!=  null)  {	  if(searchChars[i]!=    ch)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
139	[BUG]  [BUGGY]  char[]  str  =  searchChars.charAt(j);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char[]  str  =  searchChars.charAt(j);  [BUGGY]        return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char[]  str  =  searchChars.charAt(j);	  char[]    str    =    cs.charAt(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
140	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  1,  searchLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  1,  searchLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(j,  i  +  1,  searchLen);	  CharSequence    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
141	[BUG]  [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  1,  searchCharsLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  CharSequence  ch  =  cs.charAt(j,  i  +  1,  searchCharsLen);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	CharSequence  ch  =  cs.charAt(j,  i  +  1,  searchCharsLen);	  CharSequence    ch    =    cs.charAt(j,    i);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
142	[BUG]  [BUGGY]  char  ch  =  cs.charAt(j  +  11);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  ch  =  cs.charAt(j  +  11);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  ch  =  cs.charAt(j  +  11);	  char    ch    =    cs.charAt(j    +    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
143	[BUG]  [BUGGY]  char  j  =  cs.charAt(j);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  containsNone(CharSequence  cs,  char[]  searchChars)  {  if  (cs  ==  null  ||  searchChars  ==  null)  {  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {      [BUGGY]  char  j  =  cs.charAt(j);  [BUGGY]      if  (searchChars[j]  ==  ch)  {    return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1682	1682	10	replace	char  j  =  cs.charAt(j);	  char    cs    =    cs.charAt(j);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
