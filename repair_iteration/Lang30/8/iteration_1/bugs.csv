bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
2	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
3	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  true;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  true;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  true;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
4	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  continue  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
5	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(searchChars[j]  ==  ch)  {  break;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
6	[BUG]  [BUGGY]  return  true;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  return  true;  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	return  true;	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	if(searchChars[j]  ==  ch)  {  return  false;  }	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]  if(searchChars[j]!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  if(searchChars[j]!=  ch)  {  return  false;  }  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	if(searchChars[j]!=  ch)  {  return  false;  }	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	if(searchChars[j]  ==  ch)  {  return  true;  }	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  if(searchLen  >  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  if(searchLen  >  0)  {  return  false;  }  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	if(searchLen  >  0)  {  return  false;  }	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  if(searchLen  ==  0)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  if(searchLen  ==  0)  {  return  false;  }  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	if(searchLen  ==  0)  {  return  false;  }	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	throw  new  IllegalArgumentException( " ");	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
14	[BUG]  [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
15	[BUG]  [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  ch)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
16	[BUG]  [BUGGY]    if(searchLen  >  0)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchLen  >  0)  {  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchLen  >  0)  {  if(searchChars[j]  ==  ch)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
17	[BUG]  [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  continue  false;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  continue  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchLen  >  0)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch  ==  ch)  {  continue  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
18	[BUG]  [BUGGY]  return  null;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]  return  null;  [BUGGY]  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	return  null;	return  false;  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
19	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
20	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
21	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  false;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '-')  {  return  false;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
22	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  searchLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
23	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  true;  }  int  csLen  =  cs.length();  int  searchLen  =  searchChars.length;  for  (int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLen;  j++)  {  if  (searchChars[j]  ==  ch)  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }  [BUGGY]  return  false;  }  }  }  return  true;  }  [CLASS]  StringUtils  [METHOD]  containsNone  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.5163977794943222	1685	1685	10	replace	    if(searchChars[j]  ==  ch)  {  for(int  i  =  0;  i  <  csLen;  i++)  {  char  ch  =  cs.charAt(i);  if(ch!=  '+')  {  return  true;  }		non-compiled	[CE]  illegal  start  of  type	16	None	add
