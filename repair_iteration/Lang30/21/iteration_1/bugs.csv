bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  false;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]  return  false;  [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	return  false;	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
2	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]  if(searchChars[j  +  1]  ==  ch)  {  return  true;  }  [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  ch)  {  return  true;  }	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
3	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  return  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]  if(searchChars[j]  ==  ch)  {  return  true;  }  [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  return  true;  }	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
4	[BUG]  [BUGGY]  if(searchChars[j]  ==  ch)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]  if(searchChars[j]  ==  ch)  {  return  false;  }  [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j]  ==  ch)  {  return  false;  }	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	  	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
6	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
7	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
8	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MAX_HIGH_SURROGATE)  {  return  true;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
9	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  true;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
10	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  ||  j  <  searchLast  ||  ch  >=  Character.MIN_HIGH_SURROGATE)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
11	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
12	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs[j  +  1])  {  return  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]  if(searchChars[j  +  1]  ==  cs[j  +  1])  {  return  true;  }  [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs[j  +  1])  {  return  true;  }	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
13	[BUG]  [BUGGY]    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
14	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
15	[BUG]  [BUGGY]    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  if(!found)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
16	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  >  0  ||  j  <  searchLength)  {  return  true;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
17	[BUG]  [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j]  ==  ch)  {  return		non-compiled	[CE]  <identifier>  expected	42	None	add
18	[BUG]  [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(!Character.isDigit(ch))  {  return		non-compiled	[CE]  <identifier>  expected	42	None	add
19	[BUG]  [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLength;  j++)  {  if(searchChars[j  +  1]  ==  ch)  {  return		non-compiled	[CE]  <identifier>  expected	42	None	add
20	[BUG]  [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(searchChars[j]  ==  ch)  {  if(i  <  csLast  &&  j  <  searchLast)  {  return  true;  }		non-compiled	[CE]  <identifier>  expected	42	None	add
21	[BUG]  [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return  [BUGGY]  return  true;  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	    if(i  >  0  ||  j  <  searchLength)  {  char  ch  =  cs.charAt(i);  for(int  j  =  0;  j  <  searchLen;  j++)  {  if(searchChars[j]  ==  ch)  {  return		non-compiled	[CE]  <identifier>  expected	42	None	add
22	[BUG]  [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  char  ch  =  cs.charAt(i);  for  (int  j  =  0;  j  <  searchLength;  j++)  {  if  (searchChars[j]  ==  ch)  {  if  (i  <  csLast  &&  j  <  searchLast  &&  ch  >=  Character.MIN_HIGH_SURROGATE  &&  ch  <=  Character.MAX_HIGH_SURROGATE)  {  if  (searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  }  else  {    [BUGGY]  if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }  [BUGGY]  }  }  }  }  return  false;  }  [CLASS]  StringUtils  [METHOD]  containsAny  [RETURN_TYPE]  boolean  CharSequence  cs  char[]  searchChars  [VARIABLES]  CharSequence  cs  char  ch  String  EMPTY  decomposed  input  searchChars  searchStr  str  str1  str2  stripChars  ts  boolean  int  INDEX_NOT_FOUND  PAD_LIMIT  csLast  csLen  csLength  end  endLimit  found  i  index  j  len  max  ordinal  searchLast  searchLen  searchLength  start  startPos  strLen  strsLen  char[]  searchChars  	projects/Lang30/src/main/java/org/apache/commons/lang3/StringUtils.java	0.282842712474619	1462	1462	10	replace	if(searchChars[j  +  1]  ==  cs.charAt(i  +  1))  {  return  true;  }  else  {  return  INDEX_NOT_FOUND;  }	return  true;  	non-compiled	[CE]  <identifier>  expected	41	None	replace
